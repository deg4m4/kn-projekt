[{"/home/meparth/kn-projekt/Frontend/src/index.js":"1","/home/meparth/kn-projekt/Frontend/src/App.js":"2","/home/meparth/kn-projekt/Frontend/src/reportWebVitals.js":"3","/home/meparth/kn-projekt/Frontend/src/conf/conf.js":"4","/home/meparth/kn-projekt/Frontend/src/Components/Init/Init.js":"5","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Home/Home.js":"6","/home/meparth/kn-projekt/Frontend/src/Components/Homepage/Main/Main.js":"7","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Public/Public.js":"8","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Main/Main.js":"9","/home/meparth/kn-projekt/Frontend/src/Components/Auth/Auth/Auth.js":"10","/home/meparth/kn-projekt/Frontend/src/conf/analytics.js":"11","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Steps/Steps.js":"12","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Templates/Templates.js":"13","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/TemplatePreview/TemplatePreview.js":"14","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Editor.js":"15","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Categories/Categories.js":"16","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Settings/Settings.js":"17","/home/meparth/kn-projekt/Frontend/src/Components/Upgrade/Upgrade.js":"18","/home/meparth/kn-projekt/Frontend/src/Components/Contact/Contact.js":"19","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Sidebar/AdminSidebar.js":"20","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Footer/Footer.js":"21","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Templates/Templates.js":"22","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Page/Page.js":"23","/home/meparth/kn-projekt/Frontend/src/Components/Auth/Register/Register.js":"24","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Images/Images.js":"25","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Users/Users.js":"26","/home/meparth/kn-projekt/Frontend/src/Components/Auth/Login/Login.js":"27","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Form/Button/Button.js":"28","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Form/Input/Input.js":"29","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Steps/StepOne.js":"30","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Steps/StepTwo.js":"31","/home/meparth/kn-projekt/Frontend/src/Components/Editor/ElementConfig.js":"32","/home/meparth/kn-projekt/Frontend/src/Components/Editor/utils.js":"33","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Sidebar.js":"34","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Modal/Modal.js":"35","/home/meparth/kn-projekt/Frontend/src/Components/Editor/ZoomController/ZoomController.js":"36","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Form/Dropdown/Dropdown.js":"37","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Add/Add.js":"38","/home/meparth/kn-projekt/Frontend/src/Components/Upgrade/Plans.js":"39","/home/meparth/kn-projekt/Frontend/src/Components/Upgrade/PostalCode.js":"40","/home/meparth/kn-projekt/Frontend/src/Components/Form/Input/Input.js":"41","/home/meparth/kn-projekt/Frontend/src/Components/Form/Dropdown/Dropdown.js":"42","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Controllers/TextController.js":"43","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Elements/Text.js":"44","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Elements/Image.js":"45","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Controllers/ImageController.js":"46","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Elements/Circle.js":"47","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Elements/Path.js":"48","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Controllers/RectangleController.js":"49","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Elements/Rectangle.js":"50","/home/meparth/kn-projekt/Frontend/src/Components/Editor/SidebarComponents/Templates.js":"51","/home/meparth/kn-projekt/Frontend/src/Components/Upgrade/Dropdown/Dropdowm.js":"52","/home/meparth/kn-projekt/Frontend/src/Components/Upgrade/Dropdown/CardHolder.js":"53","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Form/Colorpicker/Colorpicker.js":"54","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Form/NumberPicker/NumberPicker.js":"55","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Controllers/fonts.js":"56","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Form/Align/Align.js":"57","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Form/InputController/InputController.js":"58","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Form/Dropdown/Dropdown.js":"59"},{"size":499,"mtime":1678322722494,"results":"60","hashOfConfig":"61"},{"size":2005,"mtime":1678322722478,"results":"62","hashOfConfig":"61"},{"size":362,"mtime":1678322722494,"results":"63","hashOfConfig":"61"},{"size":108,"mtime":1678322722494,"results":"64","hashOfConfig":"61"},{"size":4648,"mtime":1678322722482,"results":"65","hashOfConfig":"61"},{"size":4773,"mtime":1678322722478,"results":"66","hashOfConfig":"61"},{"size":3720,"mtime":1678322722482,"results":"67","hashOfConfig":"61"},{"size":4503,"mtime":1678322722478,"results":"68","hashOfConfig":"61"},{"size":1454,"mtime":1678322722478,"results":"69","hashOfConfig":"61"},{"size":2576,"mtime":1678322722478,"results":"70","hashOfConfig":"61"},{"size":42,"mtime":1678322722494,"results":"71","hashOfConfig":"61"},{"size":608,"mtime":1678322722478,"results":"72","hashOfConfig":"61"},{"size":2770,"mtime":1678322722478,"results":"73","hashOfConfig":"61"},{"size":2335,"mtime":1678322722478,"results":"74","hashOfConfig":"61"},{"size":29883,"mtime":1678322722478,"results":"75","hashOfConfig":"61"},{"size":19917,"mtime":1678322722478,"results":"76","hashOfConfig":"61"},{"size":4975,"mtime":1678322722478,"results":"77","hashOfConfig":"61"},{"size":2748,"mtime":1678322722482,"results":"78","hashOfConfig":"61"},{"size":2651,"mtime":1678322722478,"results":"79","hashOfConfig":"61"},{"size":3244,"mtime":1678322722478,"results":"80","hashOfConfig":"61"},{"size":3588,"mtime":1678322722478,"results":"81","hashOfConfig":"61"},{"size":11496,"mtime":1678322722478,"results":"82","hashOfConfig":"61"},{"size":692,"mtime":1678322722478,"results":"83","hashOfConfig":"61"},{"size":4493,"mtime":1678507147686,"results":"84","hashOfConfig":"61"},{"size":8191,"mtime":1678322722478,"results":"85","hashOfConfig":"61"},{"size":8822,"mtime":1678322722478,"results":"86","hashOfConfig":"61"},{"size":3963,"mtime":1678507102190,"results":"87","hashOfConfig":"61"},{"size":532,"mtime":1678322722478,"results":"88","hashOfConfig":"61"},{"size":817,"mtime":1678322722478,"results":"89","hashOfConfig":"61"},{"size":1018,"mtime":1678322722478,"results":"90","hashOfConfig":"61"},{"size":3449,"mtime":1678322722478,"results":"91","hashOfConfig":"61"},{"size":2712,"mtime":1678322722478,"results":"92","hashOfConfig":"61"},{"size":3044,"mtime":1678322722482,"results":"93","hashOfConfig":"61"},{"size":20082,"mtime":1678322722482,"results":"94","hashOfConfig":"61"},{"size":9841,"mtime":1678322722482,"results":"95","hashOfConfig":"61"},{"size":1292,"mtime":1678322722482,"results":"96","hashOfConfig":"61"},{"size":1136,"mtime":1678322722478,"results":"97","hashOfConfig":"61"},{"size":2760,"mtime":1678322722478,"results":"98","hashOfConfig":"61"},{"size":6008,"mtime":1678322722482,"results":"99","hashOfConfig":"61"},{"size":9106,"mtime":1678322722482,"results":"100","hashOfConfig":"61"},{"size":822,"mtime":1678322722482,"results":"101","hashOfConfig":"61"},{"size":1227,"mtime":1678322722482,"results":"102","hashOfConfig":"61"},{"size":8865,"mtime":1678322722478,"results":"103","hashOfConfig":"61"},{"size":2744,"mtime":1678322722478,"results":"104","hashOfConfig":"61"},{"size":3347,"mtime":1678322722478,"results":"105","hashOfConfig":"61"},{"size":6599,"mtime":1678322722478,"results":"106","hashOfConfig":"61"},{"size":3543,"mtime":1678322722478,"results":"107","hashOfConfig":"61"},{"size":4065,"mtime":1678322722478,"results":"108","hashOfConfig":"61"},{"size":10119,"mtime":1678322722478,"results":"109","hashOfConfig":"61"},{"size":4138,"mtime":1678322722478,"results":"110","hashOfConfig":"61"},{"size":6563,"mtime":1678322722482,"results":"111","hashOfConfig":"61"},{"size":857,"mtime":1678322722482,"results":"112","hashOfConfig":"61"},{"size":3043,"mtime":1678322722482,"results":"113","hashOfConfig":"61"},{"size":1441,"mtime":1678322722482,"results":"114","hashOfConfig":"61"},{"size":676,"mtime":1678322722482,"results":"115","hashOfConfig":"61"},{"size":10582,"mtime":1678322722478,"results":"116","hashOfConfig":"61"},{"size":1268,"mtime":1678322722482,"results":"117","hashOfConfig":"61"},{"size":333,"mtime":1678322722482,"results":"118","hashOfConfig":"61"},{"size":1748,"mtime":1678322722482,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"zs1rlb",{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"122"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"122"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"122"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"122"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"122"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"122"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"263","usedDeprecatedRules":"122"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"122"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"122"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"122"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"122"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"284","usedDeprecatedRules":"122"},"/home/meparth/kn-projekt/Frontend/src/index.js",[],["285","286"],"/home/meparth/kn-projekt/Frontend/src/App.js",[],"/home/meparth/kn-projekt/Frontend/src/reportWebVitals.js",[],"/home/meparth/kn-projekt/Frontend/src/conf/conf.js",[],"/home/meparth/kn-projekt/Frontend/src/Components/Init/Init.js",["287","288","289","290"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios';\r\nimport './Init.scss';\r\nimport SuccessImage from '../../assets/images/success.png';\r\nimport Button from '../Admin/Form/Button/Button';\r\nimport Input from '../Admin/Form/Input/Input';\r\nimport {conf} from \"../../conf/conf\"\r\nconst Init = () => {\r\n\r\n\r\n    const [step, setStep] = useState(\"intro\")\r\n\r\n    // Meta\r\n    const [websiteTitle, setwebsiteTitle] = useState(\"\")\r\n    const [websiteDesc, setwebsiteDesc] = useState(\"\")\r\n    const [keywords, setkeywords] = useState(\"\")\r\n    // Login\r\n    const [email, setemail] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    const [repeat, setrepeat] = useState(\"\")\r\n\r\n    ///  on mount check if the app is already initialised\r\n    useEffect(()=>{\r\n        axios.post(conf.endPoint+\"/api/init\").then((resp)=>{\r\n            if (resp.data.status == true){\r\n                window.location.href = \"/\";\r\n            }\r\n        })\r\n    },[]);\r\n\r\n    const handleInputs = (name, event) => {\r\n        switch (name) {\r\n            case \"Title\":\r\n                setwebsiteTitle(event.target.value)\r\n                break;\r\n            case \"Description\":\r\n                setwebsiteDesc(event.target.value)\r\n                break;\r\n            case \"Keywords\":\r\n                setkeywords(event.target.value)\r\n                break;\r\n            case \"Email\":\r\n                setemail(event.target.value)\r\n                break;\r\n            case \"Password\":\r\n                setpassword(event.target.value)\r\n                break;\r\n            case \"Repeat\":\r\n                setrepeat(event.target.value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () =>{\r\n        axios.post(conf.endPoint+\"/api/init\",\r\n        {data:\r\n        {\r\n            websiteTitle:websiteTitle,\r\n            websiteDescription:websiteDesc,\r\n            websiteKeywords:keywords,\r\n            email:email,\r\n            password:password\r\n        }}\r\n        ).then((resp)=>{\r\n            if(resp.data.status == \"initialised\"){\r\n                window.location.href = \"/\";\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    return (\r\n\r\n        step == \"intro\" ?\r\n\r\n            <div className=\"init\" >\r\n                <img className=\"init__success\" src={SuccessImage} alt=\"initialisation\" />\r\n                <h1>App Initialisations</h1>\r\n                <p>You are almost done installing the app. we just need some information to start you project</p>\r\n                <Button onClick={() => { setStep(\"metadata\") }} type=\"default\" value=\"Start\" />\r\n            </div>\r\n            : step == \"metadata\" ?\r\n                ////////// Meta data\r\n                <div className=\"init__meta\">\r\n                    <h1>Website Meta data</h1>\r\n                    <h2>Add your website details. </h2>\r\n\r\n                    <div style={{ width: \"400px\" }}>\r\n                        <Input handleInputs={handleInputs}  value={websiteTitle}  name={\"Title\"} title=\"Website Title\" />\r\n                        <Input  handleInputs={handleInputs} value={websiteDesc}    name={\"Description\"} title=\"Description \" />\r\n                        <Input   handleInputs={handleInputs} value={keywords}     name={\"Keywords\"} title=\"Keywords\" />\r\n\r\n                        <Button onClick={() => { setStep(\"intro\") }} style={{ display: \"inline\" }} type=\"outlined\" value=\"Return\" />\r\n                        <Button onClick={() => { setStep(\"admin\") }} style={{ display: \"inline\", marginLeft: \"10px\" }} type=\"default\" value=\"Continue\" />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                :\r\n\r\n                //     ////// Admin user\r\n\r\n                <div className=\"init__meta\">\r\n                    <h1>Admin </h1>\r\n                    <h2>Register your admin account. </h2>\r\n\r\n                    <div style={{ width: \"400px\" }}>\r\n                        <Input   handleInputs={handleInputs}  value={email}    name={\"Email\"}  title=\"Email \" />\r\n                        <Input   handleInputs={handleInputs} value={password}    name={\"Password\"}  title=\"Password \" />\r\n                        <Input    handleInputs={handleInputs}  value={repeat}    name={\"Repeat\"}  title=\"Repeat Password\" />\r\n                        <Button onClick={() => { setStep(\"metadata\") }} style={{ display: \"inline\" }} type=\"outlined\" value=\"Return\" />\r\n                        <Button onClick={()=>{handleSubmit()}} style={{ display: \"inline\", marginLeft: \"10px\" }} type=\"default\" value=\"Finish\" />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Init\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Home/Home.js",["291","292","293","294"],"import React, { useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport './Home.scss';\r\nimport Logo from '../../../assets/images/logo.png'\r\nimport ProfileImage from '../../../assets/images/cogwheel.png'\r\nimport Templates from '../Templates/Templates';\r\nimport TemplatePreview from '../TemplatePreview/TemplatePreview';\r\nimport Steps from '../Steps/Steps';\r\nimport { Link, Route, Switch } from 'react-router-dom'\r\nimport Editor from '../../Editor/Editor';\r\nimport Categories from '../Categories/Categories';\r\nimport { conf } from '../../../conf/conf';\r\nimport { useState } from 'react';\r\nimport Settings from '../Settings/Settings';\r\n\r\nimport Menu from '../../../assets/images/menu.png';\r\nimport { Analytics } from '../../../conf/analytics';\r\nconst Home = (props) => {\r\n\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(null)\r\n    const [user, setUser] = useState(null)\r\n    const menuRef = useRef();\r\n    const menuRightRef = useRef();\r\n\r\n    useEffect(() => {\r\n        Analytics()\r\n        axios.post(conf.endPoint+\"/api/auth/check\",\r\n            {},\r\n            { withCredentials: true }\r\n        ).then((resp) => {\r\n            if (resp.data.status !== \"logged in\") {\r\n                setIsLoggedIn(false)\r\n                window.location.href = '/auth'\r\n            } else if (resp.data.status == \"logged in\") {\r\n                setUser(resp.data.user)\r\n                setIsLoggedIn(true)\r\n            }\r\n        })\r\n    }, []);\r\n    useEffect(() => {\r\n        console.log(user);\r\n    }, [user])\r\n    // handlng logout\r\n    const logout = () => {\r\n        axios.post(conf.endPoint + \"/api/auth/logout\", {}, { withCredentials: true }\r\n        ).then((resp) => {\r\n            console.log(resp);\r\n            if (resp.data.status == \"logged out\") {\r\n                window.location.href = \"/auth\";\r\n            }\r\n        })\r\n    }\r\n    // Handle Menu Click \r\n    const MenuClick = () => {\r\n        if (menuRef.current.classList.contains('hidden')) {\r\n            menuRef.current.classList.remove('hidden')\r\n        } else {\r\n            menuRef.current.classList.add('hidden')\r\n        }\r\n\r\n        if (menuRightRef.current.classList.contains('hidden')) {\r\n            menuRightRef.current.classList.remove('hidden')\r\n        } else {\r\n            menuRightRef.current.classList.add('hidden')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        isLoggedIn == true ?\r\n            <div className=\"dashboard flex-col\" >\r\n                {/* Head */}\r\n                <div className=\"dashboard__head flex  flex\">\r\n                    {/* Brand */}\r\n                    <div className=\"brand\">\r\n                        <img src={Logo} alt=\"logo\" />\r\n\r\n                        <div className='mobile__toggle'>\r\n                            <img onClick={() => { MenuClick() }} src={Menu} alt='menu' />\r\n                        </div>\r\n                    </div>\r\n                    {/* Navigation Middle */}\r\n                    <div ref={menuRef} className=\"dashboard__navigation hidden\">\r\n                        <ul>\r\n                            <li>\r\n                                {user !== null && user.role == \"admin\" && <Link to={\"/admin\"} href=\"#\" > Admin</Link>}\r\n                            </li>\r\n\r\n                            <li><Link to=\"/members\">Dashboard</Link></li>\r\n                            <li><Link to=\"/members/templates/all\">Templates</Link></li>\r\n                            <li><Link onClick={()=>logout()} >Logout</Link></li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                    {/* Navigation Right */}\r\n                    <div ref={menuRightRef} className=\"dashboard__navigation hidden\">\r\n                        <ul>\r\n                            <li><Link to=\"/members/settings\">My Account<img src={ProfileImage} alt=\"open\" /> </Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    {/* Menu toggle (Mobile) */}\r\n\r\n\r\n                </div>\r\n                {/* Body */}\r\n                <div className=\"dashboard__body\">\r\n                    <Switch>\r\n                        <Route path={\"/members/editor/:id\"} render={(props) => <Editor monthly={\"monthly\"} user={user} />} />\r\n                        <Route path={\"/members/templates/:platform\"} component={Templates} />\r\n                        <Route path={\"/members/settings\"} render={(props) => <Settings user={user} {...props} />} />\r\n                        <Route path={\"/members/preview\"} component={TemplatePreview} />\r\n                        <Route path={\"/members/create\"} component={Steps} />\r\n                        <Route path={\"/members\"} component={Categories} />\r\n                    </Switch>\r\n\r\n                </div>\r\n\r\n\r\n            </div> : <div> </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Home","/home/meparth/kn-projekt/Frontend/src/Components/Homepage/Main/Main.js",["295","296","297"],"import React, { useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Main.scss';\r\nimport Logo from '../../../assets/images/logo.png'\r\nimport AppScreen from '../../../assets/images/design2.png'\r\nimport MobileScreen from '../../../assets/images/mobile.png'\r\nimport Menu from '../../../assets/images/menu.png';\r\nimport { ReactComponent as ArrowImg } from '../../../assets/images/arrow.svg'\r\n\r\nconst Main = (props) => {\r\n    const menuRef = useRef();\r\n    const menuRightRef = useRef();\r\n    // Handle Menu Click \r\n    const MenuClick = () => {\r\n        if (menuRef.current.classList.contains('hidden')) {\r\n            menuRef.current.classList.remove('hidden')\r\n        } else {\r\n            menuRef.current.classList.add('hidden')\r\n        }\r\n        if (menuRightRef.current.classList.contains('hidden')) {\r\n            menuRightRef.current.classList.remove('hidden')\r\n        } else {\r\n            menuRightRef.current.classList.add('hidden')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='homepage'>\r\n            <div className='homepage__navbar'>\r\n                <div className='homepage__navbar-left'>\r\n                    <img className='homepage__navbar-left--logo' src={Logo} />\r\n                    <div className='mobile__toggle'>\r\n                        <img onClick={() => { MenuClick() }} src={Menu} alt='menu' />\r\n                    </div>\r\n                </div>\r\n                <div ref={menuRef} className='homepage__navbar-middle hidden'>\r\n                    <ul >\r\n                        <li className='homepage__navbar-middle--item'><Link>Home</Link></li>\r\n                        <li className='homepage__navbar-middle--item'><Link to='/contact'>Contact us</Link></li>\r\n                        <li className='homepage__navbar-middle--item'><Link to='/members/templates'>Templates</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div ref={menuRightRef} className='homepage__navbar-right hidden'>\r\n                    <Link to='/members' className='homepage__btnoutlined'>Go to app</Link>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='homepage__header'>\r\n                <h1>Create unlimited  <span>designs </span>  from your browser, a tool to make your own designs effortlessly. Select a template from our templates list. add your touch, and export.</h1>\r\n                <p>Advanced photo editor ready for your daily designing tasks</p>\r\n                <Link  to='/members' className='homepage__btn'>Get started</Link>\r\n                <ArrowImg className='arrow' />\r\n            </div>\r\n            \r\n            <div className='homepage__grid'>\r\n                <div className='homepage__grid-left'>\r\n                    <div className='homepage__grid-left--content'>\r\n                        <div className='homepage__grid-light'>Availablity</div>\r\n                        <h2>PHOTO EDITOR</h2>\r\n                        <p>Our editor is accessable by phone and desktop</p>\r\n                        <img src={MobileScreen} />\r\n                    </div>\r\n                </div>\r\n                <div className='homepage__grid-right'>\r\n                    <div className='homepage__grid-right--content'>\r\n                        <div className='homepage__grid-light'>Availablity</div>\r\n                        <h2>PHOTO EDITOR</h2>\r\n                        <p>You can create design from scratch. but if you want to speed up the process we have a list of templates that you can use to achieve the required results</p>\r\n                        <img src={AppScreen} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Main\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Public/Public.js",["298","299","300","301","302","303","304","305","306","307","308","309"],"import React, { useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport Logo from '../../../assets/images/logo.png'\r\nimport ProfileImage from '../../../assets/images/cogwheel.png'\r\nimport Templates from '../Templates/Templates';\r\nimport TemplatePreview from '../TemplatePreview/TemplatePreview';\r\nimport Steps from '../Steps/Steps';\r\nimport { Link, Route } from 'react-router-dom'\r\nimport Editor from '../../Editor/Editor';\r\nimport Categories from '../Categories/Categories';\r\nimport { conf } from '../../../conf/conf';\r\nimport { useState } from 'react';\r\nimport Settings from '../Settings/Settings';\r\nimport Upgrade from '../../Upgrade/Upgrade';\r\nimport Footer from '../Footer/Footer';\r\nimport Page from '../Page/Page';\r\nimport Contact from '../../Contact/Contact';\r\nimport Menu from '../../../assets/images/menu.png';\r\n\r\nconst Public = (props) => {\r\n\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(null)\r\n    const menuRef = useRef();\r\n    const menuRightRef = useRef();\r\n    const [user, setUser] = useState(null)\r\n    const { meta } = props\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        axios.post(conf.endPoint+\"/api/auth/check\",\r\n            {},\r\n            { withCredentials: true }\r\n        ).then((resp) => {\r\n            if (resp.data.status !== \"logged in\") {\r\n                setIsLoggedIn(false)\r\n\r\n            } else if (resp.data.status == \"logged in\") {\r\n                setUser(resp.data.user)\r\n                setIsLoggedIn(true)\r\n            }\r\n        })\r\n\r\n        // console.log(meta);\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // console.log(user);\r\n    }, [user])\r\n\r\n    // handlng logout\r\n\r\n    const logout = () => {\r\n        axios.post(conf.endPoint + \"/api/auth/logout\", {}, { withCredentials: true }\r\n        ).then((resp) => {\r\n            console.log(resp);\r\n            if (resp.data.status == \"logged out\") {\r\n                window.location.href = \"/auth\";\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const MenuClick = () => {\r\n        if (menuRef.current.classList.contains('hidden')) {\r\n            menuRef.current.classList.remove('hidden')\r\n        } else {\r\n            menuRef.current.classList.add('hidden')\r\n        }\r\n\r\n        if (menuRightRef.current.classList.contains('hidden')) {\r\n            menuRightRef.current.classList.remove('hidden')\r\n        } else {\r\n            menuRightRef.current.classList.add('hidden')\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"dashboard flex-col\" >\r\n            {/* Head */}\r\n            <div className=\"dashboard__head flex  flex\">\r\n                {/* Brand */}\r\n                <div className=\"brand\">\r\n                    <img src={Logo} alt=\"logo\" />\r\n                    <div className='mobile__toggle'>\r\n                        <img onClick={() => { MenuClick() }} src={Menu} alt='menu' />\r\n                    </div>\r\n                </div>\r\n                {/* Navigation Middle */}\r\n                <div ref={menuRef} className=\"dashboard__navigation hidden\">\r\n                    <ul>\r\n                        <li>\r\n                            {user !== null && user.role == \"admin\" && <Link to={\"/admin\"} href=\"#\" > Admin</Link>}\r\n                        </li>\r\n                        {meta.subscription == true && <li>\r\n                            <Link to={\"/members/upgrade\"} href=\"#\" > <div className=\"small-highlight\">pro</div> Upgrade</Link>\r\n                        </li>}\r\n                        <li><Link to=\"/members\">Dashboard</Link></li>\r\n                        <li><Link to=\"/members/templates/all\">Templates</Link></li>\r\n                        <li><Link to=\"/contact\">Contact us</Link></li>\r\n\r\n                    </ul>\r\n                </div>\r\n                {/* Navigation Right */}\r\n                <div ref={menuRightRef} className=\"dashboard__navigation hidden\">\r\n                    <ul>\r\n                        <li><Link to=\"/members/settings\">My Account<img src={ProfileImage} alt=\"open\" /> </Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            {/* Body */}\r\n            <div className=\"dashboard__body\">\r\n                {/* Body head */}\r\n                <Route path={\"/p/:name\"} component={Page} />\r\n                <Route exact path={\"/upgrade\"} render={(props) => <Upgrade {...props} meta={meta} />} />\r\n                <Route exact path={\"/contact\"} component={Contact} />\r\n\r\n            </div>\r\n            <Footer desc={props.desc} />\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Public","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Main/Main.js",["310"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport AdminSidebar from '../Sidebar/AdminSidebar';\r\nimport { Route } from 'react-router-dom'\r\nimport './Main.scss';\r\nimport Users from '../Users/Users';\r\nimport Templates from '../Templates/Templates';\r\nimport Images from '../Images/Images';\r\nimport { conf } from '../../../conf/conf';\r\n\r\nconst Main = () => {\r\n    const [user, setUser] = useState(null)\r\n    useEffect(() => {\r\n        axios.post(conf.endPoint + \"/api/auth/check\",\r\n            {},\r\n            { withCredentials: true }\r\n        ).then((resp) => {\r\n            if (resp.data.user == undefined || resp.data.user.role !== \"admin\") {\r\n                window.location.href = \"/auth\"\r\n            } else {\r\n                setUser(resp.data.user)\r\n            }\r\n        })\r\n    }, []);\r\n    return (\r\n        user !== null && user.role === \"admin\" ?\r\n            <div className=\"admin\">\r\n                {/* Sidebar */}\r\n                <AdminSidebar />\r\n                {/* Content */}\r\n                <div className=\"admin__content\">\r\n                    {/* <Dashboard /> */}\r\n                    <Route exact path={\"/admin\"} component={Users} />\r\n                    <Route path={\"/admin/templates\"} component={Templates} />\r\n                    <Route path={\"/admin/Images\"} component={Images} />\r\n                </div>\r\n            </div>\r\n            : \"Unauthorazied\"\r\n    )\r\n}\r\nexport default Main\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Auth/Auth/Auth.js",["311","312","313"],"\r\nimport './Auth.scss'\r\nimport Login from'../../Auth/Login/Login'\r\nimport Register from '../Register/Register';\r\nimport TopLeft from '../../../assets/images/top.png'\r\nimport BottomRight from '../../../assets/images/bottomRight.png'\r\nimport { useState } from 'react';\r\n\r\nimport GmailImage from '../../../assets/images/twitter.png'\r\nimport OutlookImage from '../../../assets/images/instagram.png'\r\nimport Mailchimp from '../../../assets/images/facebook.png'\r\nimport Circles from '../../../assets/images/circles.png';\r\nimport DesktopImage from '../../../assets/images/design.png'\r\nconst Auth = () => {\r\n\r\n    const [currentStep,setCurrentStep] = useState(\"Login\")\r\n\r\n    const setStep = (stepName) =>{\r\n        setCurrentStep(stepName);\r\n    }\r\n    return (\r\n        <div className=\" grid-2 login  \">\r\n            {/* Left side */}\r\n            <div className=\" container-tight login__left flex-col pd-50 mg-top-40  \" >\r\n                {currentStep == \"Login\" ? <Login  setStep={setStep} /> : <Register setStep={setStep} />}\r\n            </div>\r\n            {/* Right Side */}\r\n            <div className=\"login__right flex-col-center\">\r\n                {/* Top and bottom squares */}\r\n                <img  className=\"login__topLeft\"src={TopLeft}  alt=\"top\" />\r\n                <img  className=\"login__botRight\" src={BottomRight} alt=\"bottom\" />\r\n                {/* Circles */}\r\n                <div className=\"login__circle1\">\r\n                    <img src={GmailImage} alt=\"gmail\"/>\r\n                </div>\r\n                <div className=\"login__circle2\">\r\n                <img src={Mailchimp} alt=\"gmail\"/>\r\n                </div>\r\n                <div  className=\"login__circle3\">\r\n                <img src={OutlookImage} alt=\"gmail\"/>\r\n                </div>\r\n                {/* Right Content */}\r\n                <div className=\"login__right-content flex-col-center\">\r\n                    <div className=\"login__right-contentTop\">\r\n                        {/* <img src={Circles} alt=\"circles\" /> */}\r\n                        <img src={DesktopImage} />\r\n                    </div>\r\n                    <div className=\"login__right-contentBottom mg-top-100\">\r\n                        <span className=\"font-large weight-700 text-white center block\">Turn your ideas <br></br> into designs.</span>\r\n                        <span className=\"font-small weight-400 text-white center\">Free graphic design software with professional <br/> templates.</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Auth;","/home/meparth/kn-projekt/Frontend/src/conf/analytics.js",[],"/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Steps/Steps.js",["314","315","316"],"import React,{useState} from 'react'\r\nimport TemplatePreview from '../TemplatePreview/TemplatePreview';\r\nimport StepOne from './StepOne';\r\nimport './Steps.scss';\r\nimport StepTwo from './StepTwo';\r\nconst Steps = () => {\r\n    const [step, setstep] = useState(1)\r\n\r\n    const nextStep = ()=>{\r\n        setstep(prevState=>prevState+1);\r\n    }\r\n    return (\r\n        <div className=\"steps\">\r\n\r\n   {step == 1 &&   <StepOne nextStep={nextStep}  />}\r\n   {step == 2 &&   <StepTwo  nextStep={nextStep} />}\r\n   {step == 3 &&   <TemplatePreview  />}\r\n   \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Steps\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Templates/Templates.js",["317","318"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router'\r\nimport './Templates.scss'\r\nimport { conf } from '../../../conf/conf';\r\nimport { Link } from 'react-router-dom';\r\nconst Templates = (props) => {\r\n    const [templates, setTemplates] = useState([]);\r\n    const [currentPage, setcurrentPage] = useState(1)\r\n    let { platform } = useParams();\r\n\r\n    useEffect(() => {\r\n        axios.post(conf.endPoint + \"/api/templates/get/platform/\" + platform, { data: { page: currentPage, limit: 10 } }).then((resp) => {\r\n            setTemplates(resp.data)\r\n        })\r\n    }, [currentPage])\r\n    return (\r\n        <div className=\"container-tight\">\r\n            <div className=\"body__title\">\r\n                <div className=\"body__titleHolder\">\r\n                    <h2>Templates</h2>\r\n                    <div>\r\n                        <Link to={\"/members\"} className=\"btn__addNew-outlined \"> Return</Link>\r\n\r\n                        <Link  to={\"/members\"}  className=\"btn__addNew \"> + Create new</Link>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\" hr mg-top-20\" />\r\n            </div>\r\n            {/* Projects list */}\r\n            <div className=\"projects__list grid-4 mg-top-40\" >\r\n                {/* template Item */}\r\n                {/* Col */}\r\n                {templates.map((item, index) => {\r\n                    return <div className=\"template_platformItem\">\r\n                        <img src={conf.endPoint + \"/api/templates/images/md/\" + item.name.replace(/\\s+/g, '')} />\r\n                        <div className=\"categories__templateItem-overlay\">\r\n                            <Link to={\"/members/editor/\" + item.name} >\r\n                                <div className=\"categories__templateItem-btn\">\r\n                                    Select\r\n                                  </div>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n            <div className=\"templates__pagination-wrapper\">\r\n                <div className=\"templates__pagination\">\r\n                    <div onClick={()=>{setcurrentPage((value)=> value>1 ? (value-1) : value) }} className=\"templates__pagination-step\">\r\n                        Previous\r\n                    </div>\r\n                    <div className=\"templates__pagination-pagenumber\">\r\n                        {currentPage}\r\n                    </div>\r\n                    <div onClick={()=>{setcurrentPage((value)=>(value+1))}} className=\"templates__pagination-step\">\r\n                        Next\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Templates\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/TemplatePreview/TemplatePreview.js",["319","320","321","322"],"import React from 'react'\r\nimport './TemplatePreview.scss';\r\nimport MailChimp from '../../../assets/images/mailchimp.png'\r\nimport Gmail from '../../../assets/images/gmail.png'\r\nimport Outlook from '../../../assets/images/outlook.png'\r\nimport GetResponse from '../../../assets/images/gmail.png'\r\n\r\nconst TemplatePreview = () => {\r\n    return (\r\n        <div className=\"container-tight\">\r\n        <div className=\"body__title\">\r\n            <div className=\"body__titleHolder\">\r\n                <h2>Astra Template</h2>\r\n                <a href=\"#\" className=\"btn__addNew \"> + Create new</a>\r\n            </div>\r\n            <div className=\" hr mg-top-20\" />\r\n        </div>\r\n        {/* Projects list */}\r\n        <div className=\"preview mg-top-30 \" >\r\n            {/* Left */}\r\n            <div className=\"preview__thumbnailWrapper flex-center\">\r\n                <div className=\"preview__thumbnail\">\r\n\r\n                </div>\r\n            </div>\r\n            {/* Right */}\r\n            <div className=\"preview__details flex-col\">\r\n                <span className=\"preview__name\">Astra Theme <br></br> v1</span>\r\n                <a className=\"preview-btn-outlined mg-top-20\">Start editing</a>\r\n                <span className=\"preview__price mg-top-10 preview__title\">Free</span>\r\n                {/* Categories */}\r\n                <div className=\"preview__categories flex mg-top-20\">\r\n                <div className=\"preview__price  preview__title\">Categories</div>\r\n                <ul className=\"preview__categories\"> \r\n                <a className=\"preview-btn-cat \">Business</a>\r\n                <a className=\"preview-btn-cat \">Sport</a>\r\n                </ul>\r\n                </div>\r\n\r\n                        {/* Support */}\r\n                <div className=\"preview__categories flex mg-top-20\">\r\n                <div className=\"preview__price  preview__title\">Support</div>\r\n                <ul className=\"preview__categories flex\"> \r\n                <li><img src={Gmail} alt=\"Gmail\"/></li>\r\n                <li><img src={MailChimp} alt=\"Mailchimp\"/></li>\r\n                <li><img src={Outlook} alt=\"Outlook\"/></li>\r\n                <li><img src={GetResponse} alt=\"GetResponse\"/></li>\r\n\r\n                </ul>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TemplatePreview\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Editor.js",["323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport './Editor.scss'\r\nimport Sidebar from './Sidebar';\r\n// Konva\r\nimport { Stage, Layer, Text, Line } from 'react-konva';\r\nimport { returnElements } from './utils';\r\nimport WebFont from 'webfontloader';\r\n// Lottie\r\nimport Modal from \"./Modal/Modal\"\r\n// Handling key press \r\nimport useKeypress from 'react-use-keypress';\r\nimport ElementConfig from './ElementConfig';\r\nimport ZoomController from './ZoomController/ZoomController';\r\nimport downloadjs from 'downloadjs'\r\nimport { useParams } from 'react-router';\r\nimport { conf } from '../../conf/conf';\r\n\r\n\r\nconst Editor = (props) => {\r\n  // Editor initalisation \r\n  let { id } = useParams();\r\n  ////// Refs \r\n  const stageRef = React.useRef();\r\n  const layerRef = React.useRef();\r\n  const LoadingRef = React.useRef();\r\n  ////// States\r\n  const [isDragging, setIsDragging] = useState(false)\r\n  const [selectedId, setSelectedId] = useState(null)\r\n  const [selectedColor, setselectedColor] = useState(\"black\")\r\n  const [selectedLockedStatus, setselectedLockedStatus] = useState(false)\r\n  const [zoom, setzoom] = useState(60)\r\n  const [selectedElementArrayIndex, setSelectedElementArrayIndex] = useState(null)\r\n  const [stageDimensions, setStageDimensions] = useState({ width: 0, height: 0 })\r\n  const [XGuideLines, setXguideLines] = useState([]);\r\n  const [xSnapPoints, setxSnapPoints] = useState([]);\r\n  const [elements, setElements] = useState([]);\r\n  const [isMobileShowed, setisMobileShowed] = useState(false)\r\n  const [isImportShowed, setisImportShowed] = useState(false)\r\n  const [selectedTemplatePlan, setselectedTemplatePlan] = useState()\r\n  // Modals\r\n  const [isModalShowed, setisModalShowed] = useState(false);\r\n  const [isAddImageShowed, setisAddImageShowed] = useState(false);\r\n  const [isExportShowed, setIsExportShowed] = useState(false);\r\n  const sizes = {\r\n    fbPost: { width: 1200, height: 630 },\r\n    twPost: { width: 1200, height: 675 },\r\n    inPost: { width: 1080, height: 1080 },\r\n    youtubeThumbnail: { width: 1280, height: 720 },\r\n  }\r\n  useEffect(\r\n    () => {\r\n      // console.log('aralna l user');\r\n      // console.log(props.user);\r\n      axios.post(conf.endPoint + \"/api/templates/return/editor\", { data: { name: id.replace(\"_\", ' ') } }, { withCredentials: true }).then((resp) => {\r\n        if (resp.data) {\r\n          if (resp.data.status == false) {\r\n            setIsExportShowed(true)\r\n            setselectedTemplatePlan('Premium')\r\n          } else {\r\n            setselectedTemplatePlan(resp.data.plan)\r\n          }\r\n          loadFromJson(JSON.parse(resp.data.json))\r\n          switch (resp.data.platform) {\r\n            case \"Facebook Post\":\r\n              setStageDimensions({ width: sizes.fbPost.width, height: sizes.fbPost.height })\r\n              setxSnapPoints([...[0, sizes.fbPost.width / 2, sizes.fbPost.width]])\r\n              break;\r\n            case \"Instagram Post\":\r\n              setStageDimensions({ width: sizes.inPost.width, height: sizes.inPost.height })\r\n              setxSnapPoints([...[0, sizes.inPost.width / 2, sizes.inPost.width]])\r\n              break;\r\n            case \"Twitter Post\":\r\n              setStageDimensions({ width: sizes.twPost.width, height: sizes.twPost.height })\r\n              setxSnapPoints([...[0, sizes.twPost.width / 2, sizes.twPost.width]])\r\n              break;\r\n            case \"Youtube Thumbnail\":\r\n              setStageDimensions({ width: sizes.youtubeThumbnail.width, height: sizes.youtubeThumbnail.height })\r\n              setxSnapPoints([...[0, sizes.youtubeThumbnail.width / 2, sizes.youtubeThumbnail.width]])\r\n              break;\r\n            case \"Custom\":\r\n              var dim = resp.data.size.split('x')\r\n              setStageDimensions({ width: dim[0], height: dim[1] })\r\n              setxSnapPoints([...[0, dim[0] / 2, dim[0]]])\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      })\r\n      //  loadFromJson([{\"id\":7513,\"type\":\"path\",\"x\":576.65959092502,\"y\":139.7537890521899,\"width\":50,\"height\":50,\"scaleX\":1.5313825642263001,\"scaleY\":1.5313825642262986,\"fill\":\"rgba(255,207,67,1)\",\"data\":\"M171.647,2.874L169.3,0L36.582,176.082l-1.414,1.861l142.007,168.378l0.664,0.792l132.685-178.324l1.423-1.853L171.647,2.874z\",\"fillPatternImage\":null,\"fillPatternOffsetX\":null,\"fillPatternOffsetY\":null,\"isLocked\":false,\"rotation\":-6.103054675504172},{\"id\":243,\"type\":\"path\",\"x\":1406.9999394376464,\"y\":-604.910131004434,\"width\":50,\"height\":50,\"scaleX\":2.3857610598660886,\"scaleY\":2.3857610598660837,\"fill\":\"rgba(255,207,69,1)\",\"data\":\"M171.647,2.874L169.3,0L36.582,176.082l-1.414,1.861l142.007,168.378l0.664,0.792l132.685-178.324l1.423-1.853L171.647,2.874z\",\"fillPatternImage\":null,\"fillPatternOffsetX\":null,\"fillPatternOffsetY\":null,\"isLocked\":false,\"rotation\":82.07504271837227},{\"id\":3021,\"type\":\"path\",\"x\":520.7322504750741,\"y\":-248.35465754110692,\"width\":50,\"height\":50,\"scaleX\":2.1303857247659774,\"scaleY\":2.130385724765978,\"fill\":null,\"data\":\"M507.52,427.39,282.65,52.62a31.09,31.09,0,0,0-53.31,0L4.48,427.39C-7.95,448.11,7,474.47,31.13,474.47H480.87C505,474.47,520,448.11,507.52,427.39Z\",\"fillPatternImage\":\"/static/media/image1.8d246ba4.jpg\",\"fillPatternOffsetX\":13,\"fillPatternOffsetY\":-248,\"isLocked\":true,\"rotation\":0,\"fillPatternScaleY\":0.4,\"fillPatternScaleX\":0.4},{\"id\":5085,\"type\":\"text\",\"x\":33.33333333333334,\"y\":154.99999999999994,\"width\":275,\"height\":46.66666666666665,\"text\":\"We Are\",\"align\":\"left\",\"fontFamily\":\"Poppins\",\"fontSize\":40,\"fontStyle\":400,\"rotation\":0},{\"id\":6054,\"type\":\"text\",\"x\":35.00000000000003,\"y\":201.66666666666674,\"width\":275,\"height\":59.99999999999987,\"text\":\"Digital\",\"align\":\"left\",\"fontFamily\":\"Poppins\",\"fontSize\":52,\"fontStyle\":600,\"rotation\":0},{\"id\":5421,\"type\":\"text\",\"x\":33.33333333333334,\"y\":261.6666666666667,\"width\":348.3333333333334,\"height\":59.99999999999986,\"text\":\"Marketing\",\"align\":\"left\",\"fontFamily\":\"Poppins\",\"fontSize\":52,\"fontStyle\":700,\"rotation\":0,\"fill\":\"rgba(254,204,50,1)\"},{\"id\":3328,\"type\":\"text\",\"x\":35,\"y\":318.33333333333337,\"width\":275,\"height\":59.99999999999987,\"text\":\"Experts\",\"align\":\"left\",\"fontFamily\":\"Poppins\",\"fontSize\":52,\"fontStyle\":600,\"rotation\":0,\"fill\":\"rgba(0,0,0,1)\"},{\"id\":2354,\"type\":\"image\",\"x\":68.33333333333343,\"y\":39.46219929273235,\"src\":\"/static/media/sound-waves.bc89fc35.svg\",\"width\":40.252857818252174,\"height\":40.252857818252174,\"rotation\":0},{\"id\":9462,\"type\":\"text\",\"x\":123.33333333333323,\"y\":45,\"width\":135.0000000000002,\"height\":28.33333333333309,\"text\":\"Agency\",\"align\":\"left\",\"fontFamily\":\"Poppins\",\"fontSize\":29,\"fontStyle\":600,\"rotation\":0},{\"id\":351,\"type\":\"rectangle\",\"x\":41.39617789775846,\"y\":397.59745193183886,\"width\":154.90254806816114,\"height\":48.65254806816108,\"fill\":\"rgba(254,204,50,1)\",\"fillPatternImage\":null,\"fillPatternOffsetX\":null,\"fillPatternOffsetY\":null,\"isLocked\":false,\"opacity\":1,\"rotation\":0},{\"id\":8682,\"type\":\"text\",\"x\":45.00000000000007,\"y\":409.9999999999992,\"width\":148.75000000000003,\"height\":45.41666666666678,\"text\":\"Join us\",\"align\":\"center\",\"fontFamily\":\"Poppins\",\"fontSize\":23,\"fontStyle\":600,\"rotation\":0},{\"id\":8649,\"type\":\"text\",\"x\":37.9583333333332,\"y\":480.0000000000002,\"width\":290.0000000000001,\"height\":45.41666666666677,\"text\":\"www.yourdomain.com\",\"align\":\"left\",\"fontFamily\":\"Poppins\",\"fontSize\":20,\"fontStyle\":500,\"rotation\":0}])\r\n      switch (id) {\r\n        case \"Facebook_Post\":\r\n          setStageDimensions({ width: sizes.fbPost.width, height: sizes.fbPost.height })\r\n          setxSnapPoints([...[0, sizes.fbPost.width / 2, sizes.fbPost.width]])\r\n          break;\r\n        case \"Instagram_Post\":\r\n          setStageDimensions({ width: sizes.inPost.width, height: sizes.inPost.height })\r\n          setxSnapPoints([...[0, sizes.inPost.width / 2, sizes.inPost.width]])\r\n          break;\r\n        case \"Twitter_Post\":\r\n          setStageDimensions({ width: sizes.twPost.width, height: sizes.twPost.height })\r\n          setxSnapPoints([...[0, sizes.twPost.width / 2, sizes.twPost.width]])\r\n          break;\r\n        case \"Youtube_Thumbnail\":\r\n          setStageDimensions({ width: sizes.youtubeThumbnail.width, height: sizes.youtubeThumbnail.height })\r\n          setxSnapPoints([...[0, sizes.youtubeThumbnail.width / 2, sizes.youtubeThumbnail.width]])\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    , []);\r\n  const handleMenuClick = () => {\r\n    setisMobileShowed(state => !state)\r\n  }\r\n  const loadFromJson = (textJson) => {\r\n    var fonts = []\r\n    var parsedElements = textJson;\r\n    setTimeout(() => {\r\n      setElements([...parsedElements])\r\n    }, 800);\r\n    // After we set template from json we need  to loop throu its fonts and load hem \r\n    parsedElements.forEach(element => {\r\n      if (element.type == \"text\") {\r\n        fonts.push(element.fontFamily)\r\n      }\r\n    })\r\n    if (fonts.length > 0)\r\n      WebFont.load({\r\n        google: {\r\n          families: fonts\r\n        }\r\n      });\r\n  }\r\n  useKeypress('Delete', () => {\r\n    removeElementById(selectedId)\r\n  });\r\n  const removeElementById = (id) => {\r\n    var pos = null;\r\n    for (let index = 0; index < elements.length; index++) {\r\n      if (id === elements[index].id) {\r\n        pos = index\r\n      }\r\n    }\r\n    if (pos !== null) {\r\n      var tempArray = elements;\r\n      tempArray.splice(pos, 1)\r\n      setElements([...tempArray])\r\n    }\r\n  }\r\n  // Handle template click and show it \r\n  const handleTemplateClickEditor = (name) => {\r\n    axios.post(conf.endPoint + \"/api/templates/return/editor\", { data: { name: name } }, { withCredentials: true }).then((resp) => {\r\n      if (resp.data.status == false) {\r\n        setselectedTemplatePlan('Premium')\r\n        setIsExportShowed(true)\r\n      }\r\n      loadFromJson(JSON.parse(resp.data.json))\r\n      setselectedTemplatePlan(resp.data.plan)\r\n      switch (resp.data.platform) {\r\n        case \"Facebook Post\":\r\n          setStageDimensions({ width: sizes.fbPost.width, height: sizes.fbPost.height })\r\n          setxSnapPoints([...[0, sizes.fbPost.width / 2, sizes.fbPost.width]])\r\n          break;\r\n        case \"Instagram Post\":\r\n          setStageDimensions({ width: sizes.inPost.width, height: sizes.inPost.height })\r\n          setxSnapPoints([...[0, sizes.inPost.width / 2, sizes.inPost.width]])\r\n          break;\r\n        case \"Twitter Post\":\r\n          setStageDimensions({ width: sizes.twPost.width, height: sizes.twPost.height })\r\n          setxSnapPoints([...[0, sizes.twPost.width / 2, sizes.twPost.width]])\r\n          break;\r\n        case \"Youtube Thumbnail\":\r\n          setStageDimensions({ width: sizes.youtubeThumbnail.width, height: sizes.youtubeThumbnail.height })\r\n          setxSnapPoints([...[0, sizes.youtubeThumbnail.width / 2, sizes.youtubeThumbnail.width]])\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    })\r\n  }\r\n  const checkDeselect = (e) => { \r\n    // deselect when clicked on empty area\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (clickedOnEmpty) {\r\n      setSelectedId(null);\r\n    }\r\n  };\r\n  // return guidelines\r\n  var returnGuideLines = (color) => {\r\n    let guideLinesToReturn = []\r\n    for (let index = 0; index < XGuideLines.length; index++) {\r\n      guideLinesToReturn.push(\r\n        <Line stroke=\"#3498db\" dash={[5, 5]} strokeWidth={1} points={XGuideLines[index]} />\r\n      )\r\n    }\r\n    return guideLinesToReturn;\r\n  }\r\n  // adding element to the board, it seralized ofc\r\n  const addElement = (element) => {\r\n    if (element.type == \"text\") {\r\n      let elementToAdd = {\r\n        id: Math.floor(Math.random() * 10000),\r\n        type: element.type,\r\n        x: 20,\r\n        y: 20,\r\n        width: element.width,\r\n        height: element.height,\r\n        text: element.text,\r\n        align: element.align,\r\n        fontFamily: element.fontFamily,\r\n        fontSize: element.fontSize,\r\n        fontStyle: element.fontStyle\r\n      }\r\n      setElements(elements.concat(elementToAdd))\r\n    }\r\n    if (element.type == \"image\") {\r\n      let elementToAdd = {\r\n        id: Math.floor(Math.random() * 10000),\r\n        type: element.type,\r\n        x: 20,\r\n        y: 20,\r\n        src: element.src,\r\n        width: element.width,\r\n        height: element.height,\r\n      }\r\n      setElements(elements.concat(elementToAdd))\r\n      setIsDragging(true)\r\n    }\r\n    if (element.type == \"rectangle\") {\r\n      let elementToAdd = {\r\n        id: Math.floor(Math.random() * 10000),\r\n        type: element.type,\r\n        x: 20,\r\n        y: 20,\r\n        width: element.width,\r\n        height: element.height,\r\n        fill: element.fill,\r\n        fillPatternImage: element.fillPatternImage,\r\n        fillPatternOffsetX: element.fillPatternOffsetX,\r\n        fillPatternOffsetY: element.fillPatternOffsetY,\r\n        isLocked: element.isLocked,\r\n        opacity: element.opacity\r\n      }\r\n      setElements(elements.concat(elementToAdd))\r\n      setIsDragging(true)\r\n    }\r\n    if (element.type == \"circle\") {\r\n      let elementToAdd = {\r\n        id: Math.floor(Math.random() * 10000),\r\n        type: element.type,\r\n        x: 20,\r\n        y: 20,\r\n        width: element.width,\r\n        height: element.height,\r\n        fill: element.fill,\r\n        fillPatternImage: element.fillPatternImage,\r\n        fillPatternOffsetX: element.fillPatternOffsetX,\r\n        fillPatternOffsetY: element.fillPatternOffsetY,\r\n        isLocked: element.isLocked\r\n      }\r\n      setElements(elements.concat(elementToAdd))\r\n      setIsDragging(true)\r\n    }\r\n    if (element.type == \"path\") {\r\n      let elementToAdd = {\r\n        id: Math.floor(Math.random() * 10000),\r\n        type: element.type,\r\n        x: 20,\r\n        y: 20,\r\n        width: element.width,\r\n        height: element.height,\r\n        scaleX: element.scaleX,\r\n        scaleY: element.scaleY,\r\n        fill: element.fill,\r\n        data: element.data,\r\n        fillPatternImage: element.fillPatternImage,\r\n        fillPatternOffsetX: element.fillPatternOffsetX,\r\n        fillPatternOffsetY: element.fillPatternOffsetY,\r\n        isLocked: element.isLocked\r\n      }\r\n      setElements(elements.concat(elementToAdd))\r\n      setIsDragging(true)\r\n    }\r\n  }\r\n  // adding element to the board, it seralized ofc\r\n  const exportWork = () => {\r\n    var Json = JSON.stringify(elements)\r\n    return Json\r\n  }\r\n  // Edit an element using its id in the elements array\r\n  const editPositionOfElement = (elementId, event) => {\r\n    elements.forEach((el) => {\r\n      if (el.id == elementId) {\r\n        el.x = event.target.x();\r\n        el.y = event.target.y();\r\n        el.rotation = event.target.rotation();\r\n      }\r\n    })\r\n    setIsDragging(!isDragging);\r\n    setElements(elements)\r\n  }\r\n  // Edit the with and the height of a specefic element\r\n  const editDimensionsOfElement = (elementId, width, height) => {\r\n    // we will reset it back\r\n    elements.forEach((el) => {\r\n      if (el.id == elementId) {\r\n        el.width = width\r\n        el.height = height\r\n        setElements([...elements])\r\n      }\r\n    })\r\n  }\r\n  const editDimensionsOfPath = (elementId, scaleX, scaleY) => {\r\n    // we will reset it back\r\n    elements.forEach((el) => {\r\n      if (el.id == elementId) {\r\n        el.scaleX = scaleX\r\n        el.scaleY = scaleY\r\n        setElements([...elements])\r\n      }\r\n    })\r\n  }\r\n  const editBackgroundOfRectangle = (elementid, src) => {\r\n    var tempArray = elements;\r\n    tempArray[elementid].fillPatternImage = src;\r\n    tempArray[elementid].fill = null;\r\n    setElements([...tempArray])\r\n  }\r\n  ////  \r\n  const editImageElement = (fieldName, value) => {\r\n    var pos = null;\r\n    var tempArray = elements\r\n    switch (fieldName) {\r\n      case \"font\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.fontFamily = value\r\n          }\r\n        })\r\n        break;\r\n      case \"fontWeight\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.fontStyle = value\r\n          }\r\n        })\r\n        break;\r\n      case \"radius\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.cornerRadius = value\r\n          }\r\n        })\r\n        break;\r\n      case \"strokeWidth\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.strokeWidth = value\r\n          }\r\n        })\r\n        break;\r\n      case \"bgRotation\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.fillPatternRotation = value\r\n          }\r\n        })\r\n        break;\r\n      case \"strokeColor\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.strokeColor = value\r\n          }\r\n        })\r\n        break;\r\n      case \"opacity\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.opacity = value\r\n          }\r\n        })\r\n        break;\r\n      case \"bgOffsetX\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.fillPatternOffsetX = value\r\n          }\r\n        })\r\n        break;\r\n      case \"bgOffsetY\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.fillPatternOffsetY = value\r\n          }\r\n        })\r\n        break;\r\n      case \"bgScale\":\r\n        // console.log(\"bgScale\"+value);\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.fillPatternScaleY = value\r\n            el.fillPatternScaleX = value\r\n          }\r\n        })\r\n        break;\r\n      case \"text\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.text = value\r\n          }\r\n        })\r\n        break;\r\n      case \"align\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.align = value\r\n          }\r\n        })\r\n        break;\r\n      case \"fontColor\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.fill = selectedColor\r\n          }\r\n        })\r\n        break;\r\n      case \"fontsize\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.fontSize = value\r\n          }\r\n        })\r\n        break;\r\n      case \"posX\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.x = value\r\n          }\r\n        })\r\n        break;\r\n      case \"posY\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.y = value\r\n          }\r\n        })\r\n        break;\r\n      case \"rotate\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.rotation = value\r\n          }\r\n        })\r\n        break;\r\n      case \"width\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.width = value\r\n          }\r\n        })\r\n        break;\r\n      case \"height\":\r\n        tempArray.forEach((el) => {\r\n          if (el.id == selectedId) {\r\n            el.height = value\r\n          }\r\n        })\r\n        break;\r\n    }\r\n    setElements([...tempArray])\r\n  }\r\n  /// Hadling the click of locking button and lock the selected shape shape\r\n  const handleLockClick = () => {\r\n    var tempArray = elements\r\n    tempArray[selectedElementArrayIndex].isLocked = !tempArray[selectedElementArrayIndex].isLocked;\r\n    setElements([...tempArray])\r\n  }\r\n  /// Hadling the click of locking button and lock the selected shape shape\r\n  const handleDuplicateClick = async () => {\r\n    var tempArray = elements;\r\n    /// We get the position of the element we want\r\n    var tempElement = elements[selectedElementArrayIndex];\r\n    tempElement.id = Math.floor(Math.random() * 10000);\r\n    addElement(tempElement)\r\n  }\r\n  /// Export stage \r\n  const exportStage = () => {\r\n    var dataUrl;\r\n    dataUrl = stageRef.current.toDataURL({ pixelRatio: 1 })\r\n    downloadjs(dataUrl, \"image.png\")\r\n    axios.post(conf.endPoint + '/api/template/download')\r\n  }\r\n  // set custom dimentions\r\n  const setCustomDimentions = (width, height) => {\r\n    // console.log(`Width is ${width} and height is ${height}`);\r\n    setStageDimensions({ width: height, height: width })\r\n    setxSnapPoints([...[0, height / 2, height]])\r\n    setisModalShowed(false)\r\n  }\r\n  const MoveUp = (id) => {\r\n    let pos = null;\r\n    // find the index of the id that we want to move up\r\n    for (let index = 0; index < elements.length; index++) {\r\n      if (elements[index].id == id) {\r\n        pos = index;\r\n      }\r\n    }\r\n    // if the id not found \r\n    if (pos == null || pos >= elements.length - 1)\r\n      return\r\n    var tempElements = elements;\r\n    let tempHolder = tempElements[pos]\r\n    tempElements[pos] = tempElements[pos + 1]\r\n    tempElements[pos + 1] = tempHolder\r\n    setElements([...tempElements])\r\n  }\r\n  const MoveDown = (id) => {\r\n    let pos = null;\r\n    // find the index of the id that we want to move up\r\n    for (let index = 0; index < elements.length; index++) {\r\n      if (elements[index].id == id) {\r\n        pos = index;\r\n      }\r\n    }\r\n    // if the id not found \r\n    if (pos == null || pos == 0)\r\n      return\r\n    var tempElements = elements;\r\n    let tempHolder = tempElements[pos]\r\n    tempElements[pos] = tempElements[pos - 1]\r\n    tempElements[pos - 1] = tempHolder\r\n    setElements([...tempElements])\r\n  }\r\n  return (\r\n    <div className=\"editor\">\r\n      {/* left sidebar */}\r\n      <Sidebar setisModalShowed={setisModalShowed} MoveUp={MoveUp} MoveDown={MoveDown} setisAddImageShowed={setisAddImageShowed} handleTemplateClickEditor={handleTemplateClickEditor} selectedId={selectedId} editBackgroundOfRectangle={editBackgroundOfRectangle} exportWork={exportWork} elements={elements} selectedElementArrayIndex={selectedElementArrayIndex} addElement={addElement} />\r\n      {/*  workspace */}\r\n      <div className=\"editor__workarea\">\r\n        {isModalShowed && <Modal type=\"Size\" setCustomDimentions={setCustomDimentions} setisModalShowed={setisModalShowed} />\r\n        }\r\n        {isAddImageShowed && <Modal editBackgroundOfRectangle={editBackgroundOfRectangle} selectedElementArrayIndex={selectedElementArrayIndex} elements={elements} selectedId={selectedId} addElement={addElement} type=\"Image\" setisAddImageShowed={setisAddImageShowed} setCustomDimentions={setCustomDimentions} setisModalShowed={setisModalShowed} />\r\n        }\r\n        {isExportShowed && <Modal selectedTemplatePlan={selectedTemplatePlan} exportWork={exportWork} exportStage={exportStage} setIsExportShowed={setIsExportShowed} monthly={props.monthly} plan={props.user.plan} type=\"export\" setIsExportShowed={setIsExportShowed} setisModalShowed={setisModalShowed} />\r\n        }\r\n        {isImportShowed && <Modal loadFromJson={loadFromJson} selectedTemplatePlan={selectedTemplatePlan} exportWork={exportWork} exportStage={exportStage} setIsExportShowed={setIsExportShowed} monthly={props.monthly} plan={props.user.plan} type=\"import\" setIsExportShowed={setIsExportShowed} setisImportShowed={setisImportShowed} />\r\n        }\r\n        <div className=\"editor__tooltiphover\">\r\n          <div className=\"editor__loading\" ref={LoadingRef} ></div>\r\n          <div onClick={() => { setSelectedId(null); setIsExportShowed(true) }} className={\"duplicate\"}>\r\n            {/* exportStage() ; exportWork() */}\r\n            Export\r\n          </div>\r\n          <div onClick={() => { setisImportShowed(true) }} className={\"duplicate\"}>\r\n            {/* exportStage() ; exportWork() */}\r\n            Import\r\n          </div>\r\n          <div onClick={() => { handleMenuClick() }} className={\"duplicate property\"}>\r\n            {/* exportStage() ; exportWork() */}\r\n            Properties\r\n          </div>\r\n          <div onClick={() => { setisModalShowed(true); }} className={\"duplicate\"}>\r\n            Dimensions\r\n          </div>\r\n        </div>\r\n        <div style={{\r\n          transform:\r\n            zoom >= 100 ?\r\n              \"scale(\" + zoom.toString().substring(0, 1) + \".\" + zoom.toString().substring(1, 2) + \")\" :\r\n              \"scale(0.\" + zoom.toString().substring(0, 1) + \")\"\r\n        }} className=\"editor__presentation\">\r\n          <Stage\r\n            ref={stageRef}\r\n            width={stageDimensions.width} height={stageDimensions.height}\r\n            onMouseDown={checkDeselect}\r\n            onTouchStart={checkDeselect}\r\n            onClick={() => {\r\n              var index = 0;\r\n              elements.forEach((el) => {\r\n                if (el.id == selectedId) {\r\n                  setSelectedElementArrayIndex(index)\r\n                  setselectedLockedStatus(el.isLocked)\r\n                }\r\n                index++;\r\n              })\r\n            }}\r\n            onTap={() => {\r\n              var index = 0;\r\n              elements.forEach((el) => {\r\n                if (el.id == selectedId) {\r\n                  setSelectedElementArrayIndex(index)\r\n                }\r\n                index++;\r\n              })\r\n            }}\r\n          >\r\n            <Layer\r\n              width={stageDimensions.width} height={stageDimensions.height}\r\n              onDragEnd={(event) => {\r\n                setXguideLines([])\r\n              }}\r\n              onDragMove={(event) => {\r\n                // console.log(event.target.getClientRect().x + event.target.getClientRect().width);\r\n                setXguideLines([])\r\n                for (let index = 0; index < xSnapPoints.length; index++) {\r\n                  /////////// We check the points of the workspace /////////////////\r\n                  // We check with  of the start of X of the object\r\n                  if (event.target.x() >= 0 && event.target.x() <= 3) {\r\n                    event.target.x(0)\r\n                    var newXGuidelines = XGuideLines\r\n                    newXGuidelines.push([0, 0, 0, stageDimensions.height])\r\n                    setXguideLines([...newXGuidelines])\r\n                  }\r\n                  // We check with  of the end of X of the object\r\n                  if (event.target.x() + event.target.getClientRect().width >= xSnapPoints[index] - 3 && event.target.x() + event.target.getClientRect().width <= xSnapPoints[index] + 3) {\r\n                    event.target.x(xSnapPoints[index] - event.target.getClientRect().width)\r\n                    var newXGuidelines = XGuideLines\r\n                    newXGuidelines.push([xSnapPoints[index], 0, xSnapPoints[index], stageDimensions.height])\r\n                    setXguideLines([...newXGuidelines])\r\n                  }\r\n                  // We check with the center of the X of object\r\n                  if (event.target.x() + (event.target.getClientRect().width / 2) >= xSnapPoints[index] - 3 && event.target.x() + (event.target.getClientRect().width / 2) <= xSnapPoints[index] + 3) {\r\n                    event.target.x(xSnapPoints[index] - (event.target.getClientRect().width / 2))\r\n                    var newXGuidelines = XGuideLines\r\n                    newXGuidelines.push([xSnapPoints[index], 0, xSnapPoints[index], stageDimensions.height])\r\n                    setXguideLines([...newXGuidelines])\r\n                  }\r\n                }\r\n                //////////////////////// End of checking the points of workspace down below we check other shapes points to snap into them\r\n                for (let index = 0; index < elements.length; index++) {\r\n                  if (elements[index].name !== event.target.name()) {\r\n                    // Center\r\n                    if (event.target.x() + (event.target.getClientRect().width / 2) >= elements[index].x - 3 && event.target.x() + (event.target.getClientRect().width / 2) <= elements[index].x + 3) {\r\n                      event.target.x(elements[index].x - (event.target.getClientRect().width / 2))\r\n                      var newXGuidelines = XGuideLines\r\n                      newXGuidelines.push([elements[index].x, 0, elements[index].x, stageDimensions.height])\r\n                      setXguideLines([...newXGuidelines])\r\n                    }\r\n                    // End of target with the first of other objects\r\n                    if (event.target.x() + event.target.getClientRect().width >= elements[index].x - 3 && event.target.x() + event.target.getClientRect().width <= elements[index].x + 3) {\r\n                      event.target.x(elements[index].x - event.target.getClientRect().width)\r\n                      var newXGuidelines = XGuideLines\r\n                      newXGuidelines.push([elements[index].x, 0, elements[index].x, stageDimensions.height])\r\n                      setXguideLines([...newXGuidelines])\r\n                    }\r\n                    // End of target with the end of other objects\r\n                    if (event.target.x() + event.target.getClientRect().width >= elements[index].x - 3 && event.target.x() + event.target.getClientRect().width <= elements[index].x + 3) {\r\n                      event.target.x(elements[index].x - event.target.getClientRect().width)\r\n                      var newXGuidelines = XGuideLines\r\n                      newXGuidelines.push([elements[index].x, 0, elements[index].x, stageDimensions.height])\r\n                      setXguideLines([...newXGuidelines])\r\n                    }\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {isDragging == true && returnGuideLines()}\r\n              {returnElements(elements, setIsDragging, editPositionOfElement, selectedId, setSelectedId, editDimensionsOfElement, editDimensionsOfPath, stageDimensions, stageRef, layerRef)}\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n        <ZoomController setzoom={setzoom} />\r\n      </div>\r\n      <ElementConfig handleMenuClick={handleMenuClick} isMobileShowed={isMobileShowed} setselectedColor={setselectedColor} setIsDragging={setIsDragging} elements={elements} selectedElementArrayIndex={selectedElementArrayIndex} editImageElement={editImageElement} />\r\n      <div className=\"elementConfig__Placeholder\"></div>\r\n    </div>\r\n  )\r\n}\r\nexport default Editor\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Categories/Categories.js",["374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { conf } from '../../../conf/conf'\r\nimport './Categories.scss'\r\n\r\nimport FacebookImage from '../../../assets/images/facebook.png'\r\nimport InstagramImage from '../../../assets/images/instagram.png'\r\nimport Heart from '../../../assets/images/heart.png'\r\nimport HeartActive from '../../../assets/images/heartActive.png'\r\n\r\nimport FacebookLike from '../../../assets/images/like.png';\r\nimport YoutubeImage from '../../../assets/images/youtube.png';\r\nimport TwitterImage from '../../../assets/images/twitter.png';\r\n\r\nimport FacebookLikeActive from '../../../assets/images/likeActive.png';\r\nimport CommentImage from '../../../assets/images/comment.png';\r\nimport AddImage from '../../../assets/images/addCat.png';\r\nimport Crown from '../../../assets/images/crown.png'\r\n\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from '../Footer/Footer'\r\n\r\nconst Categories = () => {\r\n    const [mouseOverDiv, setMousOverDiv] = useState(\"\");\r\n    const [templates, setTemplates] = useState([]); // This one will hold templates in the first carousel (Limited Number)\r\n    const [facebookPostTemplates, setfacebookPostTemplates] = useState([])\r\n    const [InstagramPostTemplates, setInstagramPostTemplates] = useState([])\r\n    const [twitterPostTemplates, settwitterPostTemplates] = useState([])\r\n    const [YouubeThumbnailTemplates, setYouubeThumbnailTemplates] = useState([])\r\n\r\n    const [categories, setCategories] = useState([\"Facebook Post\", \"Instagram Post\", \"Youtube Thumbnail\", \"Twitter Post\"])\r\n    const [isMoreTemplatesShowed, setIsMoreTemplatesShowed] = useState(false)\r\n\r\n\r\n    const categoryHoverEnter = (categoryName) => {\r\n        setMousOverDiv(categoryName)\r\n    }\r\n    const categoryHoverLeave = () => {\r\n        setMousOverDiv(\"\")\r\n    }\r\n\r\n    // Handle More button Click \r\n\r\n    const handleMoreBtnClick = () => {\r\n        axios.post(conf.endPoint + \"/api/templates/get/published\").then((resp) => {\r\n            var tempFacebookPost = []\r\n            var tempTwitterPost = []\r\n            var tempInstagramPost = []\r\n            var tempYoutubeThumbnail = []\r\n            /// Here we need to send each template to its section (Fb Youtube Twitter)\r\n            for (let index = 0; index < resp.data.length; index++) {\r\n                if (resp.data[index].platform == \"Facebook Post\") {\r\n                    tempFacebookPost.push(resp.data[index])\r\n                } else if (resp.data[index].platform == \"Instagram Post\") {\r\n                    tempInstagramPost.push(resp.data[index])\r\n\r\n                } else if (resp.data[index].platform == \"Twitter Post\") {\r\n                    tempTwitterPost.push(resp.data[index])\r\n\r\n                } else if (resp.data[index].platform == \"Youtube Thumbnail\") {\r\n                    tempYoutubeThumbnail.push(resp.data[index])\r\n                }\r\n            }\r\n            setfacebookPostTemplates(tempFacebookPost)\r\n            setInstagramPostTemplates(tempInstagramPost)\r\n            settwitterPostTemplates(tempTwitterPost)\r\n            setYouubeThumbnailTemplates(tempYoutubeThumbnail)\r\n        })\r\n        setIsMoreTemplatesShowed(true)\r\n    }\r\n\r\n    const responsive = {\r\n        desktop: {\r\n            breakpoint: { max: 3000, min: 1024 },\r\n            items: 4,\r\n            slidesToSlide: 3 // optional, default to 1.\r\n        },\r\n        tablet: {\r\n            breakpoint: { max: 1024, min: 464 },\r\n            items: 2,\r\n            slidesToSlide: 2 // optional, default to 1.\r\n        },\r\n        mobile: {\r\n            breakpoint: { max: 464, min: 0 },\r\n            items: 1,\r\n            slidesToSlide: 1 // optional, default to 1.\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.post(conf.endPoint + \"/api/templates/get/dashboard\", { data: { page: 1, limit: 10 } }).then((resp) => {\r\n            setTemplates(resp.data)\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"dashboard__categories\">\r\n\r\n                {/* <div className=\"categories__topBanner\">\r\n                Create Designs On the fly\r\n            </div> */}\r\n\r\n                <div className=\"categories__title\">\r\n                    Projects\r\n                </div>\r\n\r\n                <Carousel\r\n\r\n                    responsive={responsive}\r\n                    responsive={responsive}\r\n                    containerClass=\"categories__classes\"\r\n                    itemClass=\"categories__itemClass\"\r\n\r\n                >\r\n                    <a href=\"/members/editor/custom\">\r\n      {/* Category Item : Facebook */}\r\n      <div className=\"dashboard__categoryWrapper\">\r\n                        <div className=\" dashboard__category category__facebook\">\r\n\r\n                            <div className=\"dashboard__category-body dashboard__category-bodyCustom \">\r\n                                <img src={AddImage} alt=\"facebook image\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        Custom Size\r\n                    </div>\r\n                    </a>\r\n              \r\n                    {/* Category Item : Facebook */}\r\n                    <a className=\"categories__link\" href=\"/members/editor/Facebook_Post\">\r\n                        <div className=\"dashboard__categoryWrapper\">\r\n                            <div onMouseLeave={() => { categoryHoverLeave() }} onMouseEnter={() => { categoryHoverEnter(\"Facebook Post\") }} className=\" dashboard__category category__facebook\">\r\n                                <div className=\"dashboard__category-head\">\r\n                                </div>\r\n                                <div className=\"dashboard__category-body\">\r\n                                    <img src={FacebookImage} alt=\"facebook image\" />\r\n                                </div>\r\n                                <div className=\"dashboard__category-footer\">\r\n                                    <img src={mouseOverDiv == \"Facebook Post\" ? FacebookLikeActive : FacebookLike} />          <img src={CommentImage} />\r\n                                </div>\r\n                            </div>\r\n                            Facebook Post\r\n                        </div>\r\n                    </a>\r\n\r\n\r\n                    {/* Category Item : Instagram */}\r\n                    <a className=\"categories__link\" href=\"/members/editor/Instagram_Post\">\r\n                        <div className=\"dashboard__categoryWrapper\">\r\n                            <div onMouseLeave={() => { categoryHoverLeave() }} onMouseEnter={() => { categoryHoverEnter(\"Instagram Post\") }} className=\" dashboard__category category__facebook\">\r\n\r\n                                <div className=\"dashboard__category-head dashboard__category-headInstagram\">\r\n\r\n                                    <div className=\"instagram__profileMockup\">\r\n                                        <div className=\"instagram__profileCircle\">\r\n                                        </div>\r\n                                        <div className=\"instagram__profileDetails\">\r\n                                            <div className=\"instagram__profileDetail\">\r\n\r\n                                            </div>\r\n                                            <div className=\"instagram__profileDetailSmall\">\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Follow btn */}\r\n                                    <div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"dashboard__category-body  dashboard__category-bodyInstagram   \">\r\n                                    <img src={InstagramImage} alt=\"facebook image\" />\r\n                                </div>\r\n                                <div className=\"dashboard__category-footer\">\r\n                                    <img src={mouseOverDiv == \"Instagram Post\" ? HeartActive : Heart} />          <img src={CommentImage} />\r\n                                </div>\r\n                            </div>\r\n                            Instagram Post\r\n                        </div>\r\n                    </a>\r\n\r\n                    {/* Category Item : Youtube */}\r\n                    <a className=\"categories__link\" href=\"/members/editor/Youtube_Thumbnail\">\r\n                        <div className=\"dashboard__categoryWrapper\">\r\n                            <div onMouseLeave={() => { categoryHoverLeave() }} onMouseEnter={() => { categoryHoverEnter(\"Youtube Thumbnail\") }} className=\" dashboard__category category__facebook\">\r\n                                <div className=\"dashboard__category-body  dashboard__category-bodyYoutube   \">\r\n                                    <img src={YoutubeImage} alt=\"facebook image\" />\r\n                                </div>\r\n                                <div className=\"dashboard__category-footer\">\r\n                                    <img src={CommentImage} />\r\n                                </div>\r\n                            </div>\r\n                            Youtube Thumbnail\r\n                        </div>\r\n                    </a>\r\n\r\n\r\n                    {/* Category Item : Twitter */}\r\n                    <a className=\"categories__link\" href=\"/members/editor/Twitter_Post\">\r\n                        <div className=\"dashboard__categoryWrapper\">\r\n                            <div onMouseLeave={() => { categoryHoverLeave() }} onMouseEnter={() => { categoryHoverEnter(\"Youtube Thumbnail\") }} className=\" dashboard__category category__facebook\">\r\n                                <div className=\"dashboard__category-body  dashboard__category-bodyTwitter   \">\r\n                                    <img src={TwitterImage} alt=\"facebook image\" />\r\n                                </div>\r\n                                <div className=\"dashboard__category-footer\">\r\n                                    <img src={CommentImage} />\r\n                                </div>\r\n                            </div>\r\n                            Twitter Post\r\n                        </div>\r\n                    </a>\r\n\r\n\r\n\r\n                </Carousel>\r\n                <div className=\"categories__title\">\r\n                    Templates\r\n                </div>\r\n\r\n                <Carousel\r\n\r\n                    responsive={responsive}\r\n                    responsive={responsive}\r\n                    containerClass=\"categories__classes\"\r\n                    itemClass=\"categories__itemClass\"\r\n\r\n                >\r\n\r\n                    {templates.map((item, index) => {\r\n                        return <div className=\"categories__templateItem\">\r\n                            <img src={conf.endPoint + \"/api/templates/images/md/\" + item.name.replace(/\\s+/g, '')} />\r\n                            <div className=\"categories__templateItem-overlay\">\r\n                                <Link to={\"/members/editor/\" + item.name} >\r\n                                    <div className=\"categories__templateItem-btn\">\r\n                                        Select\r\n                                    </div>\r\n                                </Link>\r\n                                \r\n                            </div>\r\n                            {item.plan == 'Premium' && <div className='categories__templateItem-crown'>\r\n                                            <img src={Crown} />\r\n                                        </div>}\r\n                        </div>\r\n                    })}\r\n\r\n\r\n\r\n                </Carousel>\r\n\r\n                {/* Button forr to show more categories */}\r\n                <div className=\"categories__more\">\r\n                    <a onClick={() => { handleMoreBtnClick() }}> More Templates </a>\r\n                </div>\r\n\r\n                {/* If More templates true then we show all categories */}\r\n\r\n                {\r\n                    isMoreTemplatesShowed == true &&\r\n                    <>\r\n\r\n                        <div className=\"categories__title-wrapper\">\r\n                            <div className=\"categories__title\">\r\n                                Instagram Posts\r\n                            </div>\r\n                            <div className=\"categories__title-right\">\r\n                                <a href={\"/members/templates/Instagram_Post\"}>Show All</a>\r\n                            </div>\r\n                        </div>\r\n                        <Carousel\r\n                            responsive={responsive}\r\n                            responsive={responsive}\r\n                            containerClass=\"categories__classes\"\r\n                            itemClass=\"categories__itemClass\">\r\n                            {\r\n                                InstagramPostTemplates.map((item, index) => {\r\n                                    return <div className=\"categories__templateItem\">\r\n                                        <img src={conf.endPoint + \"/api/templates/images/md/\" + item.name.replace(/\\s+/g, '')} />\r\n                                        <div className=\"categories__templateItem-overlay\">\r\n                                            <Link to={\"/members/editor/\" + item.name} >\r\n                                                <div className=\"categories__templateItem-btn\">\r\n                                                    Select\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                        {item.plan == 'Premium' && <div className='categories__templateItem-crown'>\r\n                                            <img src={Crown} />\r\n                                        </div>}\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </Carousel>\r\n\r\n                        <div className=\"categories__title-wrapper\">\r\n                            <div className=\"categories__title\">\r\n                                Fcebook Posts\r\n                            </div>\r\n                            <div className=\"categories__title-right\">\r\n                                <a href={\"/members/templates/Facebook_Post\"}>Show All</a>\r\n                            </div>\r\n                        </div>\r\n                        <Carousel\r\n                            responsive={responsive}\r\n                            responsive={responsive}\r\n                            containerClass=\"categories__classes\"\r\n                            itemClass=\"categories__itemClass\">\r\n                            {\r\n                                facebookPostTemplates.map((item, index) => {\r\n                                    return <div className=\"categories__templateItem\">\r\n                                        <img src={conf.endPoint + \"/api/templates/images/md/\" + item.name.replace(/\\s+/g, '')} />\r\n                                        <div className=\"categories__templateItem-overlay\">\r\n                                            <Link to={\"/members/editor/\" + item.name} >\r\n                                                <div className=\"categories__templateItem-btn\">\r\n                                                    Select\r\n                                                </div>\r\n                                            </Link>\r\n\r\n                                        </div>\r\n                                        {item.plan == 'Premium' && <div className='categories__templateItem-crown'>\r\n                                            <img src={Crown} />\r\n                                        </div>}\r\n\r\n\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </Carousel>\r\n\r\n                        <div className=\"categories__title-wrapper\">\r\n                            <div className=\"categories__title\">\r\n                                Twitter Posts\r\n                            </div>\r\n                            <div className=\"categories__title-right\">\r\n                                <a href={\"/members/templates/Twitter_Post\"}>Show All</a>\r\n                            </div>\r\n                        </div>\r\n                        <Carousel\r\n                            responsive={responsive}\r\n                            responsive={responsive}\r\n                            containerClass=\"categories__classes\"\r\n                            itemClass=\"categories__itemClass\">\r\n                            {\r\n                                twitterPostTemplates.map((item, index) => {\r\n                                    return <div className=\"categories__templateItem\">\r\n                                        <img src={conf.endPoint + \"/api/templates/images/md/\" + item.name.replace(/\\s+/g, '')} />\r\n                                        <div className=\"categories__templateItem-overlay\">\r\n                                            <Link to={\"/members/editor/\" + item.name} >\r\n                                                <div className=\"categories__templateItem-btn\">\r\n                                                    Select\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                        {item.plan == 'Premium' && <div className='categories__templateItem-crown'>\r\n                                            <img src={Crown} />\r\n                                        </div>}\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </Carousel>\r\n\r\n\r\n                        <div className=\"categories__title-wrapper\">\r\n                            <div className=\"categories__title\">\r\n                                Youtube Thumbnails\r\n                            </div>\r\n                            <div className=\"categories__title-right\">\r\n                                <a href={\"/members/templates/Youtube_Thumbnail\"}>Show All</a>\r\n                            </div>\r\n                        </div>\r\n                        <Carousel\r\n                            responsive={responsive}\r\n                            responsive={responsive}\r\n                            containerClass=\"categories__classes\"\r\n                            itemClass=\"categories__itemClass\">\r\n                            {\r\n                                YouubeThumbnailTemplates.map((item, index) => {\r\n                                    return <div className=\"categories__templateItem\">\r\n                                        <img src={conf.endPoint + \"/api/templates/images/md/\" + item.name.replace(/\\s+/g, '')} />\r\n                                        <div className=\"categories__templateItem-overlay\">\r\n                                            <Link to={\"/members/editor/\" + item.name} >\r\n                                                <div className=\"categories__templateItem-btn\">\r\n                                                    Select\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                        {item.plan == 'Premium' && <div className='categories__templateItem-crown'>\r\n                                            <img src={Crown} />\r\n                                        </div>}\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </Carousel>\r\n\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Settings/Settings.js",["417","418","419","420"],"import React,{useState} from 'react';\r\nimport \"./Settings.scss\";\r\nimport BasicImage from '../../../assets/images/old-computer.png'\r\nimport PremiumImage from '../../../assets/images/premium.png'\r\nimport axios from 'axios'\r\nimport { conf } from '../../../conf/conf';\r\nconst Settings = (props) => {\r\n\r\n    const [firstname, setfirstname] = useState(\"\")\r\n    const [lastname, setlastname] = useState(\"\")\r\n\r\n\r\n    const handleInputs = (name,event)=>{\r\n        switch (name) {\r\n            case \"First Name\":\r\n                setfirstname(event.target.value)\r\n            break;\r\n            case \"Last Name\":\r\n                setlastname(event.target.value)\r\n            break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const handleAccountDetailsSubmit=()=>{\r\n        axios.post(conf.endPoint+\"/api/auth/edit/user\",{\r\n            data:{\r\n                firstname:firstname,\r\n                lastname:lastname\r\n            }\r\n        },{withCredentials:true}).then((resp)=>{\r\n           window.location.reload()\r\n        })\r\n    }\r\n    const handleRemoveUser=()=>{\r\n        axios.post(conf.endPoint+\"/api/auth/remove/user\",{\r\n            data:{\r\n               \r\n            }\r\n        },{withCredentials:true}).then((resp)=>{\r\n           window.location.reload()\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"dashboard__settings-wrapper\">\r\n            <div className=\"dashboard__settings\">\r\n                {/* Head */}\r\n                <div className=\"dashboard__settings-head\">\r\n                    <div className=\"dashboard__settings-head-content\">\r\n                        <h1>Settings</h1>\r\n                    </div>\r\n                    <div className=\"hr\" />\r\n                </div>\r\n                {/* Body */}\r\n                <div className=\"dashboard__settings-body\">\r\n                    {/* Account Settings */}\r\n                    <div className=\"dashboard__settings-subtitle\">\r\n                        ACCOUNT DETAILS\r\n                    </div>\r\n\r\n                    <div className=\"dashboard__settings-card\">\r\n                        {/* Form */}\r\n                      <div className=\"dashboard__details-form\">\r\n                          {/* Grid */}\r\n                          <div className=\"dashboard__details-form-grid\">\r\n                              {/* First Name */}\r\n                              <div className=\"dashboard__details-form-grid--input\">\r\n                                  <span>First Name</span>\r\n                                  <input onChange={(event)=>handleInputs(\"First Name\",event)}  placeholder={props.user.firstname} />\r\n                              </div>\r\n                              {/* Last name */}\r\n                              <div className=\"dashboard__details-form-grid--input\">\r\n                                  <span>First Name</span>\r\n                                  <input onChange={(event)=>handleInputs(\"Last Name\",event)}  placeholder={props.user.lastname} />\r\n                              </div>\r\n                              <div className=\"dashboard__details-form-grid--input\">\r\n                                  <span>Email </span>\r\n                                  <input disabled value={props.user.email} />\r\n                              </div>\r\n                              <div className=\"dashboard__details-form-grid--input\">\r\n                                  <p>Use this email to log in to your account and receive notifications.</p>\r\n                              </div>\r\n                         \r\n                          </div>\r\n\r\n                          <div className=\"dashboard__settings-plan--upgrade\">\r\n                                <a onClick={()=>handleAccountDetailsSubmit()} href=\"#\">Save</a>\r\n                                </div>\r\n                   \r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                             {/* Account Removal */}\r\n                                  \r\n                    <div className=\"dashboard__settings-subtitle\">\r\n                        ACCOUNT\r\n                    </div>\r\n                             <div className=\"dashboard__settings-card\">\r\n                        <div className=\"dashboard__settings-plan\">\r\n                     \r\n                            {/* Middle Text */}\r\n                            <div className=\"dashboard__settings-plan--middleText\">\r\n                                  <p>Once you click this link you wil remove your account permanently</p>\r\n                            </div>\r\n                            {/* Upgrde Button */}\r\n                            <div className=\"dashboard__settings-plan--upgrade\">\r\n                                <a onClick={()=>{handleRemoveUser()}} style={{color:\"red\"}} href=\"#\">Remove Account</a>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Upgrade/Upgrade.js",["421","422","423","424","425","426"],"import React, { useState,useEffect } from 'react'\r\nimport Plans from './Plans'\r\nimport PostalCode from './PostalCode'\r\nimport './Upgrade.scss'\r\nconst Upgrade = (props) => {\r\n    const [step, setStep] = useState(\"Monthly\")\r\n    const [page,setPage] =  useState(\"Plans\")\r\n    const [selectedPrice,setselectedprice] = useState(0)\r\n    const [anually, setanually] = useState(0)\r\n    const [monthly, setmonthly] = useState(0)\r\n    const [paypalKey, setpaypalKey] = useState(\"\")\r\n    const [stripeKey, setStripeKey] = useState(\"\")\r\n\r\n    const HandlePeriodClick = (name) => {\r\n        setStep(name)\r\n        //setPage(\"s\")\r\n    }\r\n\r\n    const hanldlePlanClick = (amount)=>{\r\n        setPage(\"s\")\r\n        setselectedprice(amount)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // console.log('meta'+props.meta);\r\n        if(props.meta !== undefined){\r\n            setanually(props.meta.yearly)\r\n            setmonthly(props.meta.monthly)\r\n            setStripeKey(props.meta.stripeKey)\r\n            setpaypalKey(props.meta.paypalKey)\r\n\r\n        }\r\n\r\n\r\n    },[])    \r\n    \r\n    \r\n    return (\r\n        <div className=\"upgrade\">\r\n            {/* Head */}\r\n            <div className=\"upgrade__head\">\r\n                <div className=\"circle circle-topleft\">\r\n\r\n                </div>\r\n                <div className=\"circle circle-bottomRight\">\r\n\r\n                </div>\r\n                <div className=\"upgrade__head-wrapper\">\r\n                    <span className=\"upgrade__fadedSubtitle\">\r\n                        PRICING\r\n                    </span>\r\n                    <h1>Get Started Now</h1>\r\n                    <p>No contracts, No surprise fees. </p>\r\n\r\n                    <div className=\"upgrade__btnsHolder\">\r\n                        <div onClick={() => { HandlePeriodClick(\"Anually\") }} className={step == \"Anually\" ? \"upgrade__btn upgrade__btn-active \" : \"upgrade__btn \"}>\r\n                            Anually\r\n                        </div>\r\n                        <div onClick={() => { HandlePeriodClick(\"Monthly\") }} className={step == \"Monthly\" ? \"upgrade__btn upgrade__btn-active \" : \"upgrade__btn \"}>\r\n                            Monthly\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            {/* Body */}\r\n            <div className=\"upgrade__body\">\r\n            \r\n                {/* <Plans /> */}\r\n                {page == \"Plans\" ? <Plans meta={props.meta} anually={anually} monthly={monthly} step={step}  handlePlanClick ={hanldlePlanClick} /> : <PostalCode meta={props.meta}  anually={anually} monthly={monthly} step={step} selectedPrice={selectedPrice} />}\r\n                {/* Postal code */}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upgrade\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Contact/Contact.js",["427"],"import React, { useState } from 'react'\r\nimport './Contact.scss'\r\nimport axios from 'axios';\r\nimport { conf } from '../../conf/conf';\r\n\r\nconst Contact = () => {\r\n\r\n\r\n    const [isSuccessShowed, setisSuccessShowed] = useState(false)\r\n\r\n    const [name, setname] = useState('')\r\n    const [email, setemail] = useState('')\r\n    const [message, setmessage] = useState('')\r\n\r\n    const handleInputs = (name, event) => {\r\n        switch (name) {\r\n            case 'Name':\r\n                setname(event.target.value)\r\n                break;\r\n            case 'Email':\r\n                setemail(event.target.value)\r\n                break;\r\n            case 'Message':\r\n                setmessage(event.target.value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit=()=>{\r\n        axios.post(conf.endPoint+'/api/contact/send',{data:{\r\n            name:name,\r\n            email:email,\r\n            message:message\r\n        }})\r\n\r\n        setTimeout(() => {\r\n            setisSuccessShowed(true)\r\n        }, 1000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact\">\r\n            <div className=\"contact__head\">\r\n                <h1>Contact Us</h1>\r\n                {/* Success Message */}\r\n                {isSuccessShowed === true &&     <div className=\"contact_success\">\r\n                    <p>Thank you for contacting us we will get back to you soon.</p>\r\n                </div>}\r\n             \r\n\r\n                <p>Have comments, questions, or feedback to share? Our team would love to hear from you. Give us a call or submit a message below.</p>\r\n            </div>\r\n            <div className=\"contact__Body\">\r\n                <div className=\"inputHolder\">\r\n                    <span className=\"inputHolder__label\">Full Name</span>\r\n                    <input onChange={(event)=>{handleInputs('Name',event)}} />\r\n                </div>\r\n\r\n                <div className=\"inputHolder\">\r\n                    <span className=\"inputHolder__label\">Email</span>\r\n                    <input onChange={(event)=>{handleInputs('Email',event)}} />\r\n                </div>\r\n                <div className=\"inputHolder\">\r\n                    <span className=\"inputHolder__label\">Message</span>\r\n                    <textarea onChange={(event)=>{handleInputs('Message',event)}} />\r\n                </div>\r\n\r\n                <div className=\"inputHolder\">\r\n                    <a onClick={()=>{\r\n                        handleSubmit()\r\n                    }} className=\"inputSubmit\">Submit</a>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Sidebar/AdminSidebar.js",["428","429","430","431"],"import React from 'react'\r\nimport './AdminSidebar.scss';\r\nimport HomeImage from '../../../assets/Sidebar/home.png'\r\nimport DashboardImage from '../../../assets/Sidebar/dashboard.png'\r\nimport UserImage from '../../../assets/Sidebar/users.png'\r\nimport TemplatesImage from '../../../assets/Sidebar/layout.png'\r\nimport ImagesImage from '../../../assets/Sidebar/Images.png'\r\nimport SettingsImage from '../../../assets/Sidebar/Settings.png'\r\nimport MenuImage from '../../../assets/Sidebar/menu.png'\r\nimport MailImage from '../../../assets/Sidebar/mail.png'\r\nimport { Link } from 'react-router-dom';\r\nconst AdminSidebar = () => {\r\n    return (\r\n        <div className=\"admin__sidebar\">\r\n            {/* Sidebar Head */}\r\n            <div className=\"admin__sidebar-head\">\r\n                <span>Admin Panel</span>\r\n            </div>\r\n            {/* Sidebar Body */}\r\n            <div className=\"admin__sidebar-body\">\r\n                {/* List */}\r\n                <ul>\r\n                    {/* Sidebar Item */}\r\n                    <li>\r\n                        <Link to={\"/members\"}>\r\n                            <div className=\"admin__sidebar-item\">\r\n                                <div className=\"admin__sidebar-item--icon\" >\r\n                                    <img src={HomeImage} alt={\"icon\"} />\r\n                                </div>\r\n                                Home\r\n                            </div>\r\n                        </Link>\r\n                    </li>\r\n                    {/* Sidebar Item */}\r\n                    <li>\r\n                        <Link to={\"/admin/\"}>\r\n                            <div className=\"admin__sidebar-item\">\r\n                                <div className=\"admin__sidebar-item--icon\" >\r\n                                    <img src={UserImage} alt={\"icon\"} />\r\n                                </div>\r\n                                Users\r\n                            </div>\r\n                        </Link>\r\n                    </li>\r\n                    {/* Sidebar Item */}\r\n                    <li>\r\n                        <Link to={\"/admin/templates\"}>\r\n                            <div className=\"admin__sidebar-item\">\r\n                                <div className=\"admin__sidebar-item--icon\" >\r\n                                    <img src={TemplatesImage} alt={\"icon\"} />\r\n                                </div>\r\n                                Templates\r\n                            </div>\r\n                        </Link>\r\n                    </li>\r\n                    {/* Sidebar Item */}\r\n                    <li>\r\n                        <Link to={\"/admin/images\"}>\r\n                            <div className=\"admin__sidebar-item\">\r\n                                <div className=\"admin__sidebar-item--icon\" >\r\n                                    <img src={ImagesImage} alt={\"icon\"} />\r\n                                </div>\r\n                                Images\r\n                            </div>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            {/* Footer */}\r\n            <div className=\"admin__sidebar-footer\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AdminSidebar\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Footer/Footer.js",[],"/home/meparth/kn-projekt/Frontend/src/Components/Admin/Templates/Templates.js",["432","433","434","435","436","437","438","439","440","441","442","443","444"],"import React, { useState, useEffect } from 'react';\r\nimport './Templates.scss';\r\nimport RightArrowgreen from '../../../assets/Sidebar/right-arrow.png'\r\nimport RightArrowGrey from '../../../assets/Sidebar/right-arrow-grey.png'\r\nimport SearchImage from '../../../assets/Sidebar/search.png'\r\nimport Dropdown from '../Form/Dropdown/Dropdown';\r\nimport Button from '../Form/Button/Button';\r\nimport Add from '../Add/Add';\r\nimport axios from 'axios';\r\nimport { conf } from '../../../conf/conf';\r\nconst Templates = () => {\r\n    const [section, setSection] = useState(\"All Templates\")\r\n    // Category Section\r\n    const [categoryName, setcategoryName] = useState(\"\")\r\n    const [isAddShowed, setisAddShowed] = useState(false);\r\n    // Add Section\r\n    const [TemplateImage, setTemplateImage] = useState(null);\r\n    const [categoriesList, setCategoriesList] = useState([]);\r\n    const [selectedCat, setSelectedCat] = useState(\"\")\r\n    const [selectedStatus, setSelectedStatus] = useState(\"Published\")\r\n    const [selectedPlatform, setSelectedPlatform] = useState(\"\")\r\n    const [selectedPlan, setSelectedPlan] = useState(\"Free\")\r\n    const [templateName, setTemplateName] = useState(\"\")\r\n    const [templateJson, setTemplateJson] = useState(\"\")\r\n    const [selectedWidth, setselectedWidth] = useState(\"\")\r\n    const [selectedHeight, setselectedHeight] = useState(\"\")\r\n    // Templates Section \r\n    const [templatesList, setTemplatesList] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    // Handle submit of form \r\n    const handleSubmit = () => {\r\n        if (templateName !== '' || selectedPlan !== '' || selectedPlatform !== '' || selectedStatus !== '' || templateJson !== '') {\r\n            const formData = new FormData();\r\n            formData.append(\"name\", templateName)\r\n            formData.append(\"platform\", selectedPlatform)\r\n            formData.append(\"json\", templateJson)\r\n            formData.append(\"status\", selectedStatus)\r\n            formData.append(\"plan\", selectedPlan)\r\n            formData.append(\"category\", selectedCat)\r\n            formData.append(\"dimentions\", selectedWidth + 'x' + selectedHeight)\r\n            formData.append(\"image\", TemplateImage)\r\n            axios.post(conf.endPoint + \"/api/templates/add\", formData, { withCredentials: true }).then(resp => {\r\n                if (resp.data.status == true) {\r\n                    alert('Template added succefully')\r\n                    fetchTemplates()\r\n                }\r\n            })\r\n        } else {\r\n            alert('Make sure you fill all necessary fields!')\r\n        }\r\n    }\r\n    const handleInputs = (name, event) => {\r\n        switch (name) {\r\n            // for category section\r\n            case \"CategoryName\":\r\n                setcategoryName(event.target.value)\r\n                break;\r\n            // For templates section\r\n            case \"TemplateName\":\r\n                setTemplateName(event.target.value)\r\n                break;\r\n            case \"Json\":\r\n                console.log(123);   \r\n                setTemplateJson(event.target.value)\r\n                break;\r\n            case \"Width\":\r\n                setselectedWidth(event.target.value)\r\n                break;\r\n            case \"Height\":\r\n                setselectedHeight(event.target.value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const handleItemClick = (value, name) => {\r\n        switch (name) {\r\n            case \"Category\":\r\n                setSelectedCat(value)\r\n                break;\r\n            case \"Status\":\r\n                setSelectedStatus(value)\r\n                break;\r\n            case \"Plan\":\r\n                setSelectedPlan(value)\r\n                break;\r\n            case \"Platform\":\r\n                setSelectedPlatform(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const fetchTemplates = () => {\r\n        axios.post(conf.endPoint + \"/api/templates/\" + section, { data: { page: currentPage, limit: 4 } }).then((resp) => {\r\n            var tempArray = [];\r\n            for (let index = 0; index < resp.data.length; index++) {\r\n                tempArray.push(resp.data[index])\r\n            }\r\n            setTemplatesList([...tempArray])\r\n        })\r\n    }\r\n    /// Handle template remove \r\n    const HandleRemove = (name) => {\r\n        axios.post(conf.endPoint + \"/api/template/remove\", { data: { name: name } }, { withCredentials: true }).then((resp) => {\r\n            // refetch after delete\r\n            if (resp)\r\n                fetchTemplates()\r\n        })\r\n    }\r\n    // If  template add is loaded then we need to get the categories  \r\n    useEffect(() => {\r\n        fetchTemplates()\r\n        // Get list of templates \r\n        // Get categories for add form\r\n        axios.post(conf.endPoint + \"/api/categories/all\").then((resp) => {\r\n            var tempArray = [];\r\n            for (let index = 0; index < resp.data.length; index++) {\r\n                tempArray.push(resp.data[index].name)\r\n            }\r\n            setCategoriesList(tempArray)\r\n        })\r\n    }, [section, currentPage])\r\n    return (\r\n        <div className=\"admin__page\">\r\n            <div className=\"admin__users-head\">\r\n                <div className=\"admin__title\">\r\n                    <h2>Templates</h2>\r\n                </div>\r\n                {/* Search Button  */}\r\n                <div className=\"admin__users-searchWrapper\">\r\n                    {/* Search Input */}\r\n                    <div className=\"admin__users-search\">\r\n                        <img src={SearchImage} />\r\n                        <input />\r\n                    </div>\r\n                    {/* Search Button */}\r\n                    <a className=\"search-btn\">Search</a>\r\n                </div>\r\n            </div>\r\n            {/* Table of users */}\r\n            <div className=\"admin__users-body\">\r\n                {/* Tabs */}\r\n                <div className=\"admin__tabs\">\r\n                    {isAddShowed ?\r\n                        <Button onClick={() => { setisAddShowed(false) }} type=\"outlined\" value=\"Return\" style={{ marginLeft: \"auto\" }} />\r\n                        :\r\n                        <Button onClick={() => { setisAddShowed(true) }} type=\"outlined\" value=\"Add Template\" style={{ marginLeft: \"auto\" }} />\r\n                    }\r\n                </div>\r\n                {/* Table Stars */}\r\n                {isAddShowed == false &&\r\n                    <div className=\"admin__table\">\r\n                        {/* Table Head */}\r\n                        <div className=\"admin__table-head\">\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Template</span>\r\n                            </div>\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Name</span>\r\n                            </div>\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Subscription</span>\r\n                            </div>\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Platform</span>\r\n                            </div>\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Expiration Date</span>\r\n                            </div>\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Status</span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Table Body  */}\r\n                        <div className=\"admin__table-body\">\r\n                            {templatesList.map((value, index) => (\r\n                                <div className=\"admin__table-row\">\r\n                                    {/* Body Cell */}\r\n                                    <div className=\"admin__table-body--cell  table__template-picture\">\r\n                                        <img src={conf.endPoint + \"/api/templates/images/sm/\" + value.name.replace(/\\s+/g, '')} />\r\n                                    </div>\r\n                                    <div className=\"admin__table-body--cell admin__table-body--cell---email \">\r\n                                        <span>{value.name}</span>\r\n                                    </div>\r\n                                    <div className=\"admin__table-body--cell admin__table-body--cell---status\">\r\n                                        <div className=\"admin__table-status\" style={value.plan == \"Premium\" ? { backgroundColor: \"black\" } : { backgroundColor: \"unset\", border: \"2px solid black\", color: \"black\" }}>\r\n                                            {value.plan}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"admin__table-body--cell\">\r\n                                        <span>{value.platform}</span>\r\n                                    </div>\r\n                                    <div className=\"admin__table-body--cell\">\r\n                                        <span>{value.status}</span>\r\n                                    </div>\r\n                                    <div className=\"admin__table-body--cell admin__table-body--cell---status\">\r\n                                        <div onClick={() => { HandleRemove(value.name) }} className=\"admin__table-status\" style={{ backgroundColor: \"#e74c3c\" }}>\r\n                                            Remove\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {/* If templates list empty show this */}\r\n                        {templatesList.length == 0 && <div className=\"admin__table-footer\">\r\n                            No data found\r\n                        </div>}\r\n                        <div className=\"admin__table-footer\">\r\n                            <a onClick={() => { setCurrentPage((value) => value > 1 ? value - 1 : value) }}><img src={RightArrowGrey} className=\"mirror\" alt=\"right\" /></a>\r\n                            <a> {currentPage} </a>\r\n                            <a onClick={() => { setCurrentPage(value => value + 1) }}><img src={RightArrowgreen} alt=\"right\" /></a>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {/* Table ends */}\r\n                {/* Add templates */}\r\n                {isAddShowed &&\r\n                    <Add\r\n                        categoriesList={categoriesList}\r\n                        selectedCat={selectedCat}\r\n                        selectedPlatform={selectedPlatform}\r\n                        selectedPlan={selectedPlan}\r\n                        selectedStatus={selectedStatus}\r\n                        selectedWidth={selectedWidth}\r\n                        selectedHeight={selectedHeight}\r\n                        categoryName={categoryName}\r\n                        handleTemplateSubmit={handleSubmit}\r\n                        setFileChanged={setTemplateImage}\r\n                        handleInputs={handleInputs}\r\n                        handleItemClick={handleItemClick}\r\n                        type={\"template\"}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Templates\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Page/Page.js",["445"],"import React,{useState,useEffect} from 'react';\r\nimport {useParams} from 'react-router'\r\nimport axios from 'axios';\r\nimport { conf } from '../../../conf/conf';\r\nimport './Page.scss'\r\nconst Page = () => {\r\n    let {name} = useParams()\r\n    const [pageBody, setpageBody] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n        axios.post(conf.endPoint+\"/api/pages/get/one\",{data:{name:name}}).then((resp)=>{\r\n            setpageBody(resp.data[0].markup)\r\n        })\r\n        \r\n    },[])\r\n\r\n    function createMarkup() { return {__html: pageBody}; };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"page\"> \r\n<div dangerouslySetInnerHTML={createMarkup()} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Auth/Register/Register.js",["446","447","448","449","450","451","452","453","454","455"],"import {useState} from 'react'\r\nimport axios from 'axios'\r\nimport Logo from '../../../assets/images/logo.png'\r\nimport GoogleIcon from '../../../assets/images/google.png'\r\nimport Input from '../../Form/Input/Input'\r\nimport { conf } from '../../../conf/conf'\r\nconst Register =(props)=>{\r\n        /// State that hold auth data\r\n        const [email,setEmail] = useState(\"\")\r\n        const [password,setPassword] = useState(\"\")\r\n        const [repeat,setRepeat] = useState(\"\")\r\n        const [passwordErrorShowed,setpasswordErrorShowed] = useState(false)\r\n        const [emailExistsShowed,setemailExistsShowed] = useState(false)\r\n    \r\n        // Input changes handler\r\n        const handleInputs = (event,name) =>{\r\n            switch (name) {\r\n                case \"Email\":\r\n                       setEmail(event.target.value)\r\n                    break;\r\n                case \"Password\":\r\n                    setPassword(event.target.value)\r\n               case \"Repeat\":\r\n                setRepeat(event.target.value)\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        const handleSubmit = (event)=>{\r\n            event.preventDefault();\r\n            if(password !== repeat){\r\n                setpasswordErrorShowed(true)\r\n            }else{\r\n                setpasswordErrorShowed(false)\r\n                axios.post(conf.endPoint+\"/api/auth/register\",{data:{email:email,password:password}}).then((resp)=>{\r\n                    if(resp.data.status == \"exists\"){\r\n                        setemailExistsShowed(true)\r\n                    }else if(resp.data.status == true){\r\n                        window.location.href='/members'\r\n                    }\r\n                    \r\n                })\r\n            }\r\n            \r\n        }\r\n       \r\n    return(\r\n        <>\r\n                     {/* Logo */}\r\n                     <div className=\"login__logo\">\r\n                    <img src={Logo} alt=\"Logo\" />\r\n                </div>\r\n                {/* Heading */}\r\n                <div className=\"login__heading mg-top-20\">\r\n                    <span>Register</span>\r\n                    <p className=\" text-grey mg-top-10 font-small\">Login to access our advanced photo editor and to start creating professional designs for your social media campaigns.</p>\r\n                </div>\r\n                {/* Login Divider */}\r\n                <div className=\" mg-top-20 login__divider  flex-col-center\">\r\n                    {/* Error div */}\r\n                  {passwordErrorShowed == true && \r\n                      <div className=\"auth__error\">\r\n                      <span className=\"auth__error-title\">Password not match</span>\r\n                      <p className=\"auth__error-body\">Please check your entered password.</p>\r\n                  </div>\r\n                  }\r\n                 {emailExistsShowed == true && \r\n                      <div className=\"auth__error\">\r\n                      <span className=\"auth__error-title\">Email already in use</span>\r\n                      <p className=\"auth__error-body\">Please enter  another email.</p>\r\n                  </div>\r\n                  }\r\n                \r\n                </div>\r\n                {/* Form  */}\r\n                <form className=\"login__form mg-top-20 flex-col\" >\r\n                    <Input placeholder=\"example@yourwebsite.com\" handleInputs={handleInputs} label=\"Email*\" name=\"Email\" rounded />\r\n                    <Input placeholder=\"....\" handleInputs={handleInputs} name=\"Password\" label=\"Password*\" name=\"Password\"  type=\"password\" rounded />\r\n                    <Input placeholder=\"....\" handleInputs={handleInputs} name=\"Repeat\" label=\"Repeat Password*\" name=\"Repeat\" type=\"password\" rounded />\r\n                {/* Submit */}\r\n                <input onClick={(event)=>{handleSubmit(event)}} type=\"submit\" value=\"Register\"  className=\"btn-primary rounded mg-top-20\" />\r\n                </form>\r\n                {/* Not registered ? */}\r\n                <div className=\"flex login__notRegistered mg-top-20\">\r\n                     <span className=\"font-small\">Already have an account? <a href=\"#\" onClick={()=>props.setStep(\"Login\")} className=\"weight-500 color-primary\">Login</a>.</span>\r\n                </div>\r\n                    {/*Copy right ? */}\r\n                    <div className=\"flex login__rights mg-top-20\">\r\n                     <span className=\"font-small\">©2023 All Rights reserved.</span>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\nexport default Register","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Images/Images.js",["456","457","458","459","460","461","462","463","464","465","466","467","468","469","470"],"import React, { useState, useEffect } from 'react';\r\nimport './Images.scss';\r\nimport RightArrowgreen from '../../../assets/Sidebar/right-arrow.png'\r\nimport RightArrowGrey from '../../../assets/Sidebar/right-arrow-grey.png'\r\nimport SearchImage from '../../../assets/Sidebar/search.png'\r\nimport Dropdown from '../Form/Dropdown/Dropdown';\r\nimport Button from '../Form/Button/Button';\r\nimport Add from '../Add/Add';\r\nimport axios from 'axios';\r\nimport { conf } from '../../../conf/conf';\r\nimport Input from '../Form/Input/Input';\r\nconst Images = () => {\r\n    const [section, setSection] = useState(\"All Templates\")\r\n    // Category Section\r\n    const [categoryName, setcategoryName] = useState(\"\")\r\n    const [isAddShowed, setisAddShowed] = useState(false);\r\n    // Add Image \r\n    const [templatesList, setTemplatesList] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [Image, setImage] = useState(null)\r\n    const [imageName, setImageName] = useState(\"\")\r\n    const [ImageType, setImageType] = useState(\"\")\r\n    // Handle submit of form \r\n    const handleSubmit = () => {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", imageName)\r\n        formData.append(\"type\", ImageType)\r\n        formData.append(\"image\", Image)\r\n        axios.post(conf.endPoint + \"/api/images/add\", formData, { withCredentials: true }).then(resp => {\r\n            if (resp.data.status == true) {\r\n                alert('Image added succefully!')\r\n                fetchImages()\r\n            }\r\n        })\r\n    }\r\n    const handleInputs = (name, event) => {\r\n        switch (name) {\r\n            // for category section\r\n            case \"Image Name\":\r\n                setImageName(event.target.value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const handleItemClick = (value, name) => {\r\n        switch (name) {\r\n            case \"Type\":\r\n                setImageType(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // Fetching function\r\n    const fetchImages = () => {\r\n        axios.post(conf.endPoint + \"/api/images/get\", { data: { page: currentPage, limit: 4 } }).then((resp) => {\r\n            var tempArray = [];\r\n            for (let index = 0; index < resp.data.length; index++) {\r\n                tempArray.push(resp.data[index])\r\n            }\r\n            setTemplatesList([...tempArray])\r\n        })\r\n    }\r\n    /// Handle template remove \r\n    const HandleRemove = (name) => {\r\n        axios.post(conf.endPoint + \"/api/images/remove\", { data: { name: name } }, { withCredentials: true }).then((resp) => {\r\n            if (resp)\r\n                fetchImages()\r\n        })\r\n    }\r\n    // If  template add is loaded then we need to get the categories  \r\n    useEffect(() => {\r\n        fetchImages();\r\n    }, [currentPage])\r\n    return (\r\n        <div className=\"admin__page\">\r\n            <div className=\"admin__users-head\">\r\n                <div className=\"admin__title\">\r\n                    <h2>Templates</h2>\r\n                </div>\r\n                {/* Search Button  */}\r\n                <div className=\"admin__users-searchWrapper\">\r\n                    {/* Search Input */}\r\n                    <div className=\"admin__users-search\">\r\n                        <img src={SearchImage} />\r\n                        <input />\r\n                    </div>\r\n                    {/* Search Button */}\r\n                    <a className=\"search-btn\">Search</a>\r\n                </div>\r\n            </div>\r\n            {/* Table of users */}\r\n            <div className=\"admin__users-body\">\r\n                {/* Tabs */}\r\n                <div className=\"admin__tabs\">\r\n\r\n                    {isAddShowed ?\r\n                        <Button onClick={() => { setisAddShowed(false) }} type=\"outlined\" value=\"Return\" style={{ marginLeft: \"auto\" }} />\r\n                        :\r\n                        <Button onClick={() => { setisAddShowed(true) }} type=\"outlined\" value=\"Add Image\" style={{ marginLeft: \"auto\" }} />\r\n                    }\r\n                </div>\r\n                {/* Table Stars */}\r\n                {isAddShowed == false &&\r\n                    <div className=\"admin__table\">\r\n                        {/* Table Head */}\r\n                        <div className=\"admin__table-head\">\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Template</span>\r\n                            </div>\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Name</span>\r\n                            </div>\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Action</span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Table Body  */}\r\n                        <div className=\"admin__table-body\">\r\n                            {templatesList.map((value, index) => (\r\n                                <div className=\"admin__table-row\">\r\n                                    {/* Body Cell */}\r\n                                    <div className=\"admin__table-body--cell  table__template-picture\">\r\n                                        <img src={conf.endPoint + \"/api/images/sm/\" + value.name.replace(/\\s+/g, '')} />\r\n                                    </div>\r\n                                    <div className=\"admin__table-body--cell admin__table-body--cell---email \">\r\n                                        <span>{value.name}</span>\r\n                                    </div>\r\n                                    <div className=\"admin__table-body--cell admin__table-body--cell---status\">\r\n                                        <div onClick={() => { HandleRemove(value.name) }} className=\"admin__table-status\" style={{ backgroundColor: \"#e74c3c\" }}>\r\n                                            Remove\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {/* If templates list empty show this */}\r\n                        {templatesList.length == 0 && <div className=\"admin__table-footer\">\r\n                            No data found\r\n                        </div>}\r\n                        <div className=\"admin__table-footer\">\r\n                            <a onClick={() => { setCurrentPage((value) => value > 1 ? value - 1 : value) }}><img src={RightArrowGrey} className=\"mirror\" alt=\"right\" /></a>\r\n                            <a> {currentPage} </a>\r\n                            <a onClick={() => { setCurrentPage(value => value + 1) }}><img src={RightArrowgreen} alt=\"right\" /></a>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {/* Table ends */}\r\n                {/* Add templates */}\r\n                {isAddShowed &&\r\n                    <div className=\"images__add\">\r\n                        <div>\r\n                            <h1>Add Image</h1>\r\n                            <p>In here you can add image  that will be available for users to use in thier designs</p>\r\n                        </div>\r\n                        <Input handleInputs={handleInputs} name=\"Image Name\" title=\"Image name\" />\r\n                        <Dropdown name=\"Type\" value={ImageType} handleItemClick={handleItemClick} title=\"Type\" items={[\"Picture\", \"Illustration\"]} />\r\n                        <div style={{ marginBottom: \"30px\", marginTop: \"10px\" }}>\r\n                            <input title=\"image\" onChange={(event) => { setImage(event.target.files[0]) }} type=\"file\" name=\"image\" />\r\n                        </div>\r\n                        <Button onClick={() => { setisAddShowed(false) }} style={{ marginRight: \"10px\", display: \"inline\" }} type=\"outlined\" value=\"Return\" />\r\n                        <Button onClick={() => handleSubmit()} style={{ display: \"inline\" }} t type=\"default\" value=\"Submit\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Images\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Users/Users.js",["471","472","473","474","475","476","477","478","479","480","481"],"import React, { useState, useEffect } from 'react';\r\nimport './Users.scss';\r\nimport RightArrowgreen from '../../../assets/Sidebar/right-arrow.png'\r\nimport RightArrowGrey from '../../../assets/Sidebar/right-arrow-grey.png'\r\nimport axios from \"axios\";\r\nimport SearchImage from '../../../assets/Sidebar/search.png';\r\nimport { conf } from '../../../conf/conf';\r\nimport Input from '../Form/Input/Input';\r\nimport Dropdown from '../Form/Dropdown/Dropdown';\r\nimport Button from '../Form/Button/Button';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst Users = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [currentStep, setCurrentStep] = useState(\"All Users\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [editUserShowed, setEditUserShowed] = useState(false)\r\n    // edit form holders\r\n    const [userEmail, setuserEmail] = useState(\"\")\r\n    const [userPlan, setuserPlan] = useState(\"\")\r\n    const [userSubscriptionEnds, setuserSubscriptionEnds] = useState(\"\")\r\n    const [userRole, setuserRole] = useState(\"\")\r\n    const handleInputs = (name, event) => {\r\n        switch (name) {\r\n            case \"Email\":\r\n                setuserEmail(event.target.value)\r\n                break;\r\n            case \"Subscription Ends\":\r\n                setuserSubscriptionEnds(event.target.value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // Dropdown\r\n    const handleItemClick = (value, name) => {\r\n        switch (name) {\r\n            case \"Plan\":\r\n                setuserPlan(value)\r\n                break;\r\n            case \"Role\":\r\n                setuserRole(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // Handle Table Item click \r\n    const handleTableItemClick = (value) => {\r\n        setEditUserShowed(true)\r\n        setuserEmail(value.email)\r\n        setuserRole(value.role)\r\n        setuserSubscriptionEnds(value.subcrtiptionEnds)\r\n        setuserPlan(value.plan)\r\n    }\r\n    useEffect(() => {\r\n        axios.post(conf.endPoint + \"/api/auth/users/get/all\", {\r\n            data: {\r\n                page: currentPage,\r\n                limit: 10\r\n            }\r\n        }, { withCredentials: true }).then((resp) => {\r\n            setUsers(resp.data)\r\n        })\r\n    }, [currentPage])\r\n    // Handle submit of edit form \r\n    const handleSubmitForm = () => {\r\n        axios.post(conf.endPoint + \"/api/auth/edit/user/admin\", {\r\n            data: {\r\n                plan: userPlan,\r\n                subcrtiptionEnds: userSubscriptionEnds,\r\n                role: userRole\r\n            }\r\n        }, { withCredentials: true }).then((resp) => {\r\n            window.location.reload()\r\n        })\r\n    }\r\n    // Handle top bar filter click\r\n    const handleFilterClick = (filter) => {\r\n        axios.post(conf.endPoint + \"/api/auth/users/get/\" + filter, {\r\n            data: {\r\n                page: currentPage,\r\n                limit: 10,\r\n            }\r\n        }, { withCredentials: true }).then((resp) => {\r\n            setUsers(resp.data)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"admin__page\">\r\n            <div className=\"admin__users-head\">\r\n                <div className=\"admin__title\">\r\n                    <h2>Users</h2>\r\n                </div>\r\n                {/* Search Button  */}\r\n                <div className=\"admin__users-searchWrapper\">\r\n                    {/* Search Input */}\r\n                    <div className=\"admin__users-search\">\r\n                        <img src={SearchImage} />\r\n                        <input />\r\n                    </div>\r\n                    {/* Search Button */}\r\n                    <a className=\"search-btn\">Search</a>\r\n                </div>\r\n            </div>\r\n            {/* Table of users */}\r\n            <div className=\"admin__users-body\">\r\n\r\n                {editUserShowed == false &&\r\n                    <div className=\"admin__table\">\r\n                        {/* Table Head */}\r\n                        <div className=\"admin__table-head\">\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>_id</span>\r\n                            </div>\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Email</span>\r\n                            </div>\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Status</span>\r\n                            </div>\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Date of registration</span>\r\n                            </div>\r\n                            <div className=\"admin__table-head--cell\">\r\n                                <span>Role</span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Table Body  */}\r\n                        <div className=\"admin__table-body\">\r\n                            {users.map((value, index) => (\r\n                                <div onClick={() => handleTableItemClick(value)} className=\"admin__table-row\">\r\n                                    {/* Body Cell */}\r\n                                    <div className=\"admin__table-body--cell\">\r\n                                        <span>{value._id}</span>\r\n                                    </div>\r\n                                    <div className=\"admin__table-body--cell admin__table-body--cell---email \">\r\n                                        <div className=\"email__avatar\" style={{ backgroundColor: \"black\" }}>\r\n                                            {value.email.substr(0, 2)}\r\n                                        </div>\r\n                                        <span>{value.email}</span>\r\n                                    </div>\r\n                                    <div className=\"admin__table-body--cell admin__table-body--cell---status\">\r\n                                        <div className=\"admin__table-status\" style={{ backgroundColor: \"black\" }}>\r\n                                            {value.plan}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"admin__table-body--cell\">\r\n                                        <span>{value.creadtedAt}</span>\r\n                                    </div>\r\n                                    <div className=\"admin__table-body--cell\">\r\n                                        <span>{value.role}</span>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            {users.length == 0 && <div className=\"admin__table-footer\">\r\n                                No data found\r\n                            </div>}\r\n                        </div>\r\n                        <div className=\"admin__table-footer\">\r\n                            <a onClick={() => setCurrentPage(value => value > 1 ? value - 1 : value)}> <img src={RightArrowGrey} className=\"mirror\" alt=\"right\" /></a>\r\n                            <a> {currentPage}</a>\r\n                            <a onClick={() => setCurrentPage(value => value + 1)}><img src={RightArrowgreen} alt=\"right\" /></a>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {/* Edit user form  */}\r\n                {editUserShowed == true &&\r\n                    <div className=\"edit__user\">\r\n                        <h2>Edit User</h2>\r\n                        <p>In here you can change the details of a selected user</p>\r\n                        <Input handleInputs={handleInputs} value={userEmail} name=\"Email\" title=\"Email\" />\r\n                        <Dropdown handleItemClick={handleItemClick} value={userPlan} title=\"Plan\" name=\"Plan\" items={[\"Free\", \"Premium\"]} />\r\n                        <div>  <span>Subscription ends</span> </div>\r\n                        <DatePicker className=\" admin__input  admin__datePicker\" selected={Date.parse(userSubscriptionEnds)} onChange={(date) => setuserSubscriptionEnds(date)} />\r\n                        <Dropdown handleItemClick={handleItemClick} value={userRole} name=\"Role\" title=\"Role\" items={[\"admin\", \"user\"]} />\r\n                        <Button onClick={() => { setEditUserShowed(false) }} style={{ display: \"inline-block\", marginTop: \"10px\", marginRight: \"10px\" }} type=\"outlined\" value=\"Return\" />\r\n                        <Button onClick={() => { handleSubmitForm() }} style={{ display: \"inline-block\", marginTop: \"10px\" }} type=\"default\" value=\"Save\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Users\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Auth/Login/Login.js",["482","483","484","485","486","487","488"],"import {useState} from 'react'\r\nimport Logo from '../../../assets/images/logo.png'\r\nimport GoogleIcon from '../../../assets/images/google.png'\r\nimport Input from '../../Form/Input/Input'\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { conf } from '../../../conf/conf'\r\nconst Login =(props)=>{\r\n        /// State that hold auth data\r\n        const [email,setEmail] = useState(\"\")\r\n        const [password,setPassword] = useState(\"\")\r\n        const [errorLoginShowed,seterrorLoginShowed] = useState(false)\r\n        let history = useHistory();\r\n        // Input changes handler\r\n        const handleInputs = (event,name) =>{\r\n            switch (name) {\r\n                case \"Email\":\r\n                       setEmail(event.target.value)\r\n                    break;\r\n                case \"Password\":\r\n                    setPassword(event.target.value)\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n       \r\n    const handleGoogleLogin = async () => {\r\n        \r\n        window.location.href =  conf.endPoint+'/api/auth/google'; \r\n      };\r\n      const handleLocalLogin =  (event) => {\r\n        event.preventDefault();\r\n        axios.post( conf.endPoint+\"/api/auth/login\",{\r\n            username:email,\r\n            password:password\r\n        },\r\n        {withCredentials:true}\r\n        ).then(( resp)=>{\r\n           if( resp.data.status == \"true\" ) {\r\n            window.location.href =  '/members';\r\n           }\r\n        }).catch((err)=>{\r\n            seterrorLoginShowed(true)\r\n        })\r\n      };\r\n    return(\r\n        <>\r\n                     {/* Logo */}\r\n                     <div className=\"login__logo\">\r\n                    <img src={Logo} alt=\"Logo\" />\r\n                </div>\r\n                {/* Heading */}\r\n                <div className=\"login__heading mg-top-20\">\r\n                    <span>Login</span>\r\n                    <p className=\" text-grey mg-top-10 font-small\">Login to access our advanced photo editor and to start creating professional designs for your social media campaigns.</p>\r\n                </div>\r\n                {/* Login Divider */}\r\n                <div className=\" mg-top-20 login__divider  flex-col-center\">\r\n                    {errorLoginShowed == true && \r\n                      <div className=\"auth__error\">\r\n                      <span className=\"auth__error-title\">Couldnt Login</span>\r\n                      <p className=\"auth__error-body\">Please verify your email and password..</p>\r\n                  </div>\r\n                  }\r\n                </div>\r\n                {/* Form  */}\r\n                <form className=\"login__form mg-top-20 flex-col\" >\r\n                    <Input placeholder=\"example@yourwebsite.com\" handleInputs={handleInputs} label=\"Email*\" name=\"Email\" rounded />\r\n                    <Input placeholder=\"....\" handleInputs={handleInputs} name=\"Password\" label=\"Password*\" type=\"password\" rounded />\r\n                {/* Forgot Passwod */}\r\n                <div className=\"flex login__forgotPasswod mg-top-20\">\r\n                    {/* <a href=\"#\" className=\"font-small weight-500 \">Forgot Password?</a> */}\r\n                </div>\r\n                {/* Submit */}\r\n                <input onClick={(event)=>{handleLocalLogin(event)}} type=\"submit\" value=\"Login\"  className=\"btn-primary rounded mg-top-20\" />\r\n                </form>\r\n                {/* Not registered ? */}\r\n                <div className=\"flex login__notRegistered mg-top-20\">\r\n                     <span className=\"font-small\">Not registered? <a href=\"#\" onClick={()=>props.setStep(\"Register\")} className=\"weight-500 color-primary\">Create an Account</a>.</span>\r\n                </div>\r\n                    {/*Copy right ? */}\r\n                    <div className=\"flex login__rights mg-top-20\">\r\n                     <span className=\"font-small\">©2023 All Rights reserved.</span>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\nexport default Login","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Form/Button/Button.js",["489","490"],"import React from 'react'\r\nimport './Button.scss'\r\nimport PropTypes from 'prop-types';\r\nconst Button = (props) => {\r\n    return (\r\n        <div onClick={props.onClick} className={\r\n            props.type == \"outlined\" ? \"admin__btn-outlined\" :\r\n                props.type == \"default\" ? \"admin__btn-default\" : \"btn\"\r\n        }\r\n            style={props.style}\r\n        >\r\n            {props.value}\r\n        </div>\r\n    )\r\n}\r\nButton.propTypes = {\r\n    style: PropTypes.object,\r\n    type: PropTypes.string\r\n};\r\nexport default Button\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Admin/Form/Input/Input.js",["491","492","493","494","495","496"],"import React from 'react';\r\nimport './Input.scss';\r\nimport PropTypes from 'prop-types';\r\nconst Input = (props) => {\r\n  const handleInputs = (name, event) => {\r\n    props.handleInputs(name, event)\r\n  }\r\n  return (\r\n    <div className=\"admin__input\">\r\n      <div className=\"admin__inputName\">\r\n        {props.title}\r\n      </div>\r\n      {props.type == \"text\" || props.type == undefined && <input value={props.value} onChange={(event) => handleInputs(props.name, event)} className=\"admin__inputField\" />}\r\n      {props.type == \"textarea\" && <textarea onChange={(event) => handleInputs(props.name, event)} className=\"admin__inputField\" />}\r\n      {props.type == \"file\" && <input type=\"file\" className=\"admin__inputField\" />}\r\n    </div>\r\n  )\r\n}\r\nInput.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\nexport default Input\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Steps/StepOne.js",["497","498"],"import React,{useState} from 'react'\r\nimport StepOneImage from '../../../assets/images/step1.png';\r\nimport Input from '../../Form/Input/Input';\r\n\r\nconst StepOne = (props) => {\r\n    const [projectName,setProjectName] =useState(\"Untitled\");\r\nconst handleInputs =(event,name) =>{\r\n    switch (name) {\r\n        case \"Project Name\":\r\n            setProjectName(event.target.value);\r\n        break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n}\r\n    return (\r\n        <div className=\"steps__step1 flex-col-center\">\r\n           <img src={StepOneImage} alt=\"enter project ame\" />\r\n           <span className=\"steps_step1-title weight-600\">Template name</span>\r\n           <p className=\"steps_step1-description\">Give you project a name so you can access it easily later on.</p>\r\n             <Input rounded={\"10px\"} handleInputs={handleInputs} />\r\n             <a onClick={()=>props.nextStep()} className=\"btn-primary steps__step1-continue mg-top-10\"> Continue </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StepOne\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Dashboard/Steps/StepTwo.js",["499"],"import React, { useState } from 'react'\r\nimport Dropdown from '../../Form/Dropdown/Dropdown'\r\n\r\nconst StepTwo = (props) => {\r\n\r\n    const [type, setType] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n\r\n    const Types = [\r\n        { id: \"1\", name: \"Thank you\" },\r\n        { id: \"2\", name: \"Opt In\" },\r\n        { id: \"3\", name: \"Registration\" },\r\n        { id: \"4\", name: \"News\" },\r\n    ];\r\n\r\n    const Categories = [\r\n        { id: \"1\", name: \"Thank you\" },\r\n        { id: \"2\", name: \"Opt In\" },\r\n        { id: \"3\", name: \"Registration\" },\r\n        { id: \"4\", name: \"News\" },\r\n    ];\r\n\r\n    const handleInputs = (value, name) => {\r\n        switch (name) {\r\n            case \"Type\":\r\n                  setType(value)\r\n\r\n            break;\r\n            case \"Category\":\r\n                setCategory(value)\r\n                console.log(name + \" \" + category)\r\n            break;\r\n            default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"steps__step2\">\r\n            {/* header */}\r\n            <div className=\"steps__categoriesHeader \">\r\n                {/* header left side Btn */}\r\n                <div className=\"steps__categoriesBtn flex-center weight-600\">\r\n                    Empty Project\r\n               </div>\r\n                {/* Header RIght side selectboxes */}\r\n                <div className=\"steps__categories-right\">\r\n                    <div className=\"steps_categories-type\">\r\n                        <div className=\"steps_typeName\">Type</div>\r\n                        <Dropdown\r\n                            id=\"drop1\"\r\n                            name=\"Type\"\r\n                            handleInputs={handleInputs}\r\n                            elements={Types}\r\n                        />\r\n                    </div>\r\n                    <div className=\"steps_categories-type\">\r\n                        <div className=\"steps_typeName\">Category</div>\r\n                        <Dropdown\r\n                            id=\"drop2\"\r\n                            name=\"Category\"\r\n                            handleInputs={handleInputs}\r\n                            elements={Categories }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Body */}\r\n            <div className=\"steps__step2-templates grid-4 mg-top-50\">\r\n                <div  onClick={()=>props.nextStep()} className=\"steps__templateItem\">\r\n                    <div className=\"steps__template\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"steps__templateItem\">\r\n                    <div className=\"steps__template\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"steps__templateItem\">\r\n                    <div className=\"steps__template\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"steps__templateItem\">\r\n                    <div className=\"steps__template\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"steps__templateItem\">\r\n                    <div className=\"steps__template\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"steps__templateItem\">\r\n                    <div className=\"steps__template\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StepTwo\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/ElementConfig.js",["500","501","502","503","504","505","506"],"import React,{useState} from 'react'\r\n\r\nimport ImageController from './Controllers/ImageController';\r\nimport RectangleController from './Controllers/RectangleController';\r\nimport TextController from './Controllers/TextController';\r\nimport  RightArrow from '../../assets/images/right-arrow.png'\r\nconst ElementConfig = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className= {props.isMobileShowed == true ?  \"editor__elementConfig editor__elementConfig-showed\" : \"editor__elementConfig\"}  >\r\n            {props.elements[props.selectedElementArrayIndex] == undefined  && <div className='editor__elementConfig-notSelected'>\r\n                \r\n                <h3>No element selected</h3>\r\n                <p>Please select an element to be able to configure it.</p>\r\n                <img  onClick={()=>props.handleMenuClick()} src={RightArrow} alt='back' />\r\n                </div>}\r\n            {  props.elements[props.selectedElementArrayIndex] !== undefined && props.elements[props.selectedElementArrayIndex].type == \"image\" &&\r\n                <ImageController isMobileShowed={props.isMobileShowed} handleMenuClick={props.handleMenuClick} setIsDragging={props.setIsDragging} selectedElementArrayIndex={props.selectedElementArrayIndex} elements={props.elements} editImageElement={props.editImageElement} />}\r\n            {  props.elements[props.selectedElementArrayIndex] !== undefined && props.elements[props.selectedElementArrayIndex].type == \"rectangle\" &&\r\n                <RectangleController handleMenuClick={props.handleMenuClick}  setselectedColor={props.setselectedColor}  setIsDragging={props.setIsDragging} selectedElementArrayIndex={props.selectedElementArrayIndex} elements={props.elements} editImageElement={props.editImageElement} />}\r\n                \r\n            {  props.elements[props.selectedElementArrayIndex] !== undefined && props.elements[props.selectedElementArrayIndex].type == \"path\" &&\r\n                <RectangleController handleMenuClick={props.handleMenuClick}  setselectedColor={props.setselectedColor}  setIsDragging={props.setIsDragging} selectedElementArrayIndex={props.selectedElementArrayIndex} elements={props.elements} editImageElement={props.editImageElement} />}\r\n\r\n            { props.elements[props.selectedElementArrayIndex] !== undefined && props.elements[props.selectedElementArrayIndex].type == \"text\" &&\r\n                <TextController handleMenuClick={props.handleMenuClick}  setselectedColor={props.setselectedColor} setIsDragging={props.setIsDragging} selectedElementArrayIndex={props.selectedElementArrayIndex} elements={props.elements} editImageElement={props.editImageElement} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ElementConfig\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/utils.js",["507","508","509","510","511"],"import TextField from '../../Components/Editor/Elements/Text'\r\nimport React from 'react';\r\nimport { ImageField } from './Elements/Image';\r\nimport { Rectangle } from './Elements/Rectangle';\r\nimport { CircleField } from './Elements/Circle';\r\nimport { PathShape } from './Elements/Path';\r\n\r\n\r\n// Function responsable in looping throu elements array and returning konva elements\r\n\r\nexport const  returnElements = (elements,setIsDragging,editPositionOfElement,selectedId,setSelectedId,editDimensionsOfElement,editDimensionsOfPath,stageDimensions,addHelperLine,removeHelper,addAllHelpersFromObjects,stageRef,layerRef) =>{\r\n    var elementsToAdd =[]\r\n    for (let index = 0; index < elements.length; index++) {\r\n      \r\n      if(elements[index].type == \"text\"){\r\n        elementsToAdd.push(\r\n          <TextField\r\n               key={index}\r\n               setSelectedId={setSelectedId} \r\n               selectedId={selectedId}\r\n              element={elements[index]}\r\n              setIsDragging={setIsDragging}\r\n              editPositionOfElement={editPositionOfElement}\r\n              editDimensionsOfElement={editDimensionsOfElement}\r\n\r\n         />\r\n        )\r\n      }\r\n\r\n      // Image\r\n\r\n      if(elements[index].type == \"image\"){\r\n        elementsToAdd.push(\r\n           <ImageField \r\n           stageDimensions={stageDimensions}\r\n           editDimensionsOfElement={editDimensionsOfElement}\r\n           setSelectedId={setSelectedId} selectedId={selectedId} element={elements[index]} setIsDragging={setIsDragging} editPositionOfElement={editPositionOfElement} />\r\n        )\r\n      }\r\n\r\n            // Image\r\n            if(elements[index].type == \"rectangle\"){\r\n              elementsToAdd.push(\r\n                 <Rectangle \r\n                 stageDimensions={stageDimensions}\r\n                 editDimensionsOfElement={editDimensionsOfElement}\r\n                 setSelectedId={setSelectedId} selectedId={selectedId} element={elements[index]} setIsDragging={setIsDragging} editPositionOfElement={editPositionOfElement} />\r\n              )\r\n            }\r\n            if(elements[index].type == \"circle\"){\r\n              elementsToAdd.push(\r\n                 <CircleField \r\n                 stageDimensions={stageDimensions}\r\n                 editDimensionsOfElement={editDimensionsOfElement}\r\n                 setSelectedId={setSelectedId} selectedId={selectedId} element={elements[index]} setIsDragging={setIsDragging} editPositionOfElement={editPositionOfElement} />\r\n              )\r\n            }\r\n            if(elements[index].type == \"path\"){\r\n              elementsToAdd.push(\r\n                 <PathShape \r\n                 editDimensionsOfPath={editDimensionsOfPath}\r\n                 stageDimensions={stageDimensions}\r\n                 editDimensionsOfElement={editDimensionsOfElement}\r\n                 setSelectedId={setSelectedId} selectedId={selectedId} element={elements[index]} setIsDragging={setIsDragging} editPositionOfElement={editPositionOfElement} />\r\n              )\r\n            }\r\n    }\r\n    return elementsToAdd\r\n}","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Sidebar.js",["512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556"],"import React, { useEffect } from 'react'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport { useState } from 'react';\r\nimport { ReactComponent as TextImage } from '../../assets/images/text.svg'\r\nimport { ReactComponent as ImagesImage } from '../../assets/images/image.svg'\r\nimport { ReactComponent as ObjectsImage } from '../../assets/images/object.svg'\r\nimport { ReactComponent as TemplatesImage } from '../../assets/images/layout.svg'\r\nimport { ReactComponent as InfoImage } from '../../assets/images/info.svg'\r\nimport { ReactComponent as LayersImage } from '../../assets/images/layers.svg'\r\n\r\n\r\nimport AddImage from '../../assets/images/add.png'\r\nimport RectangleImage from '../../assets/images/rounded-rectangle.png'\r\nimport CircleImage from '../../assets/images/circle-outline.png'\r\nimport BleachImage from '../../assets/images/bleach.png'\r\nimport StarImage from '../../assets/images/star.png'\r\nimport RightArrow from '../../assets/images/objects/right-arrow.svg'\r\nimport Blur from '../../assets/images/objects/blur.svg'\r\nimport Phone from '../../assets/images/objects/call.svg'\r\nimport Rhombus from '../../assets/images/objects/rhombus.svg'\r\nimport Polygon from '../../assets/images/objects/polygon.svg'\r\nimport Square from '../../assets/images/objects/square.svg'\r\nimport Splash from '../../assets/images/objects/splash.svg'\r\n\r\n// default images\r\nimport Image1 from '../../assets/images/editor/image1.jpg'\r\nimport Image2 from '../../assets/images/editor/image2.jpg'\r\n\r\nimport ArrowRight from '../../assets/images/objects/dot-arrow.svg'\r\nimport PatternImage from '../../assets/images/objects/pattern.svg'\r\nimport Soundwaves from '../../assets/images/objects/sound-waves.svg'\r\nimport { conf } from '../../conf/conf';\r\nimport axios from 'axios';\r\nimport Templates from './SidebarComponents/Templates';\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    const [isOpened, setIsOpened] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    const [selected, setSelected] = useState(null)\r\n    const [imagesList, setImagesList] = useState([])\r\n\r\n    const handleItemClick = (type) => {\r\n        switch (type) {\r\n            case \"text\":\r\n                props.addElement({\r\n                    type: \"text\",\r\n                    x: 20,\r\n                    x: 20,\r\n                    width: 100,\r\n                    height: 100,\r\n                    text: Math.floor(Math.random() * 200000),\r\n                    rotation: 0,\r\n                    fontFamily: \"Roboto\",\r\n                    align: \"center\",\r\n                    text: \"Sample Text\",\r\n                    fontStyle: 400,\r\n                    fontSize: 40\r\n                })\r\n                setSelected(\"text\")\r\n                setIsOpened(false)\r\n\r\n\r\n                break;\r\n            case \"image\":\r\n                setIsOpened(prevState => prevState && selected == \"image\" ? false : true)\r\n                setSelected(\"image\")\r\n                break;\r\n            case \"shapes\":\r\n                setIsOpened(prevState => prevState && selected == \"shapes\" ? false : true)\r\n                setSelected(\"shapes\")\r\n                break;\r\n            case \"templates\":\r\n                setIsOpened(prevState => prevState && selected == \"templates\" ? false : true)\r\n                setSelected(\"templates\")\r\n                //  props.exportWork();\r\n                break;\r\n            case \"Elements\":\r\n                setIsOpened(prevState => prevState && selected == \"Elements\" ? false : true)\r\n                setSelected(\"Elements\")\r\n                //  props.exportWork();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.post(conf.endPoint + \"/api/images/get\", { data: { page: currentPage, limit: 10 } }).then((resp) => {\r\n            setImagesList(resp.data);\r\n\r\n\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const handleImageClick = (src, width, height) => {\r\n        // Here we check if a rectangle is selected then we  add the image to the rectangle \r\n        if (props.selectedId !== null && props.elements[props.selectedElementArrayIndex] !== undefined) {\r\n            if (props.elements[props.selectedElementArrayIndex].type == \"path\" || props.elements[props.selectedElementArrayIndex].type == \"rectangle\") {\r\n                props.editBackgroundOfRectangle(props.selectedElementArrayIndex, src)\r\n            }\r\n        }\r\n        else {\r\n            // if not we add an image to the stage\r\n            props.addElement({\r\n                type: \"image\",\r\n                x: 20,\r\n                x: 20,\r\n                width: width,\r\n                height: height,\r\n                rotation: 0,\r\n                src: src,\r\n                text: Math.floor(Math.random() * 200000),\r\n                isLocked: false\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleRectangleClick = (width, height) => {\r\n        props.addElement({\r\n            type: \"rectangle\",\r\n            x: 20,\r\n            x: 20,\r\n            width: width,\r\n            height: height,\r\n            rotation: 0,\r\n            fill: \"black\",\r\n            fillPatternImage: null,\r\n            fillPatternOffsetX: null,\r\n            fillPatternOffsetY: null,\r\n            fillPatternRotation: null,\r\n            isLocked: false,\r\n            opacity: 1,\r\n            fillPatternScaleY: 1,\r\n            fillPatternScaleX: 1,\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleCircleClick = (width, height) => {\r\n        props.addElement({\r\n            type: \"circle\",\r\n            x: 20,\r\n            x: 20,\r\n            width: width,\r\n            height: height,\r\n            rotation: 0,\r\n            fill: \"black\",\r\n            cornerRadius: 0,\r\n            fillPatternImage: null,\r\n            fillPatternOffsetX: null,\r\n            fillPatternOffsetY: null,\r\n\r\n            isLocked: false\r\n\r\n        })\r\n    }\r\n\r\n    const handlePathClick = (src) => {\r\n        props.addElement({\r\n            type: \"path\",\r\n            x: 20,\r\n            x: 20,\r\n            width: 50,\r\n            height: 50,\r\n            scaleX: 0.2,\r\n            scaleY: 0.2,\r\n            rotation: 0,\r\n            fill: \"black\",\r\n            cornerRadius: 0,\r\n            fillPatternImage: null,\r\n            data: src,\r\n            fillPatternOffsetX: null,\r\n            fillPatternOffsetY: null,\r\n            fillPatternScaleY: 1,\r\n            fillPatternScaleX: 1,\r\n            fillPatternRotation: null,\r\n\r\n            isLocked: false,\r\n            opacity: 1\r\n\r\n\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"sidebar__wrapper\">\r\n\r\n            <div className=\"editor__sidebar\">\r\n                <div onClick={() => handleItemClick(\"text\")} className={selected == \"text\" ? \"sidebar__item sidebar__item-active\" : \"sidebar__item\"}>\r\n                    <TextImage />\r\n                    <div className=\"sidebar__item-name\">Text</div>\r\n                </div>\r\n\r\n                <div onClick={() => handleItemClick(\"image\")} className={selected == \"image\" ? \"sidebar__item sidebar__item-active\" : \"sidebar__item\"}>\r\n                    <ImagesImage />\r\n                    <div className=\"sidebar__item-name\">Images</div>\r\n                </div>\r\n\r\n                <div onClick={() => handleItemClick(\"shapes\")} className={selected == \"shapes\" ? \"sidebar__item sidebar__item-active\" : \"sidebar__item\"}>\r\n                    <ObjectsImage />\r\n                    <div className=\"sidebar__item-name\">Objects</div>\r\n                </div>\r\n\r\n                <div onClick={() => handleItemClick(\"templates\")} className={selected == \"templates\" ? \"sidebar__item sidebar__item-active\" : \"sidebar__item\"}>\r\n                    <TemplatesImage />\r\n                    <div className=\"sidebar__item-name\">Templates</div>\r\n                </div>\r\n\r\n                <div onClick={() => handleItemClick(\"Elements\")} className={selected == \"Elements\" ? \"sidebar__item sidebar__item-active\" : \"sidebar__item\"}>\r\n                    <LayersImage />\r\n                    <div className=\"sidebar__item-name\">Elements</div>\r\n                </div>\r\n\r\n            </div>\r\n            <div    className={ isOpened ? \"editor__sidebarWindow editor__sidebarWindow-opened\" : \"editor__sidebarWindow\"}   >\r\n\r\n                {selected == \"image\" &&\r\n                    <React.Fragment>\r\n\r\n                        <div className=\"editor__window-title\">\r\n                            <span>Photos</span>\r\n                            <img onClick={() => props.setisAddImageShowed(true)} src={AddImage} alt=\"add photo\" />\r\n                        </div>\r\n                        <div className=\"window__images\">\r\n\r\n                            <div onClick={() => { handleImageClick(Image1, 200, 200) }} className=\"window__images-item\">\r\n                                <img src={Image1} alt=\"img\" />\r\n                            </div>\r\n                            {imagesList.map((image, index) => (\r\n                                <div key={index} onClick={() => { handleImageClick(conf.endPoint + \"/api/images/max/\" + image.name.replace(/\\s+/g, ''), 200, 200) }} className=\"window__images-item\">\r\n                                    <img src={conf.endPoint + \"/api/images/md/\" + image.name.replace(/\\s+/g, '')} alt=\"img\" />\r\n                                </div>\r\n                            ))\r\n                            }\r\n\r\n                            \r\n                        </div>\r\n                    </React.Fragment>\r\n\r\n                }\r\n\r\n                {selected == \"shapes\" &&\r\n                    <React.Fragment>\r\n\r\n                        <div className=\"editor__window-title\">\r\n                            <span>Shapes</span>\r\n                            <img src={AddImage} alt=\"add photo\" />\r\n                        </div>\r\n                        <div className=\"window__images\">\r\n\r\n\r\n                            <div onClick={() => { handleRectangleClick(200, 200) }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={Square} />\r\n                                <span >Square</span>\r\n                            </div>\r\n                            <div onClick={() => { handlePathClick(\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\") }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={CircleImage} />\r\n                                <span >Circle</span>\r\n                            </div>\r\n\r\n                            <div onClick={() => { handlePathClick(\"M507.52,427.39,282.65,52.62a31.09,31.09,0,0,0-53.31,0L4.48,427.39C-7.95,448.11,7,474.47,31.13,474.47H480.87C505,474.47,520,448.11,507.52,427.39Z\") }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={BleachImage} />\r\n                                <span >Trinagle</span>\r\n                            </div>\r\n                            <div onClick={() => { handlePathClick(\"M171.647,2.874L169.3,0L36.582,176.082l-1.414,1.861l142.007,168.378l0.664,0.792l132.685-178.324l1.423-1.853L171.647,2.874z\") }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={Rhombus} />\r\n                                <span >Rhombus</span>\r\n                            </div>\r\n                            <div onClick={() => { handlePathClick(\"M59.662,26.042L30.701,0.458c-0.377-0.332-0.94-0.334-1.319-0.004L0.343,25.79c-0.306,0.267-0.42,0.692-0.289,1.076l11,32.249c0.138,0.405,0.519,0.677,0.946,0.677h35.954c0.427,0,0.806-0.271,0.945-0.674l11.046-32C60.077,26.735,59.966,26.311,59.662,26.042z\") }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={Polygon} />\r\n                                <span >Polygon</span>\r\n                            </div>\r\n\r\n                            <div onClick={() => { handlePathClick(\"m422.609375 263.808594c18.015625.195312 37.238281-7.644532 50.121094-20.523438 28.671875-28.679687 28.625-75.390625-.113281-104.128906-25.753907-25.753906-64.007813-27.945312-97.449219-5.585938-7.542969 5.039063-16.351563 5.019532-21.425781-.050781-1.574219-1.574219-6.359376-6.359375-2.832032-21.175781 3.621094-15.183594 1.425782-31.933594-6.347656-48.449219-6.984375-14.847656-16.796875-26.304687-23.792969-33.304687-19.6875-19.683594-45.878906-30.5507815-73.75-30.589844-.054687 0-.101562 0-.15625 0-27.828125 0-53.949219 10.796875-73.5625 30.410156-24.523437 24.523438-35.457031 57.832032-29.25 89.089844.871094 4.402344-.496093 9.175781-3.484375 12.164062-4.59375 4.589844-12.425781 4.996094-22.652344 1.171876-8.46875-3.167969-34.242187-12.804688-52.828124 5.785156-9 9-13.746094 22.164062-12.691407 35.21875.859375 10.59375 6.273438 20.804687 14.488281 27.316406 6.566407 5.210938 12.414063 7.992188 17.113282 10.222656.703125.335938 1.394531.667969 2.085937 1 5.554688 2.707032 9.570313 4.660156 14.203125 9.003906 8.148438 7.636719 12.734375 17.953126 12.910156 29.054688.171876 10.464844-3.808593 20.546875-10.921874 27.660156-6.308594 6.308594-13.582032 9.9375-23.585938 11.777344-2.058594.378906-4.140625.742188-6.242188 1.101562-16.707031 2.878907-35.648437 6.140626-50.457031 20.953126-13.890625 13.890624-21.523437 32.390624-21.488281 52.09375.035156 19.660156 7.707031 38.136718 21.601562 52.03125 13.839844 13.835937 32.125 21.632812 51.492188 21.941406 19.550781.304687 37.816406-7.011719 51.433594-20.628906l.816406-.832032c3.257812-3.375 8.6875-9.261718 11.273438-12.320312 1.382812-1.636719 2.855468-3.238282 4.371093-4.753906 14.597657-14.597657 33.015625-21.261719 49.265625-17.832032 10.082032 2.128906 23.871094 9.257813 32.355469 31.199219l.339844.859375c8.125 21.039062 19.253906 49.847656 37.121093 67.714844 19.683594 19.683594 45.863282 30.550781 73.722657 30.597656h.179687c27.828125 0 53.953125-10.804688 73.570313-30.421875 19.804687-19.804687 30.921875-45.410156 31.304687-72.097656.390625-26.988281-10.191406-52.691407-29.792968-72.371094l-.582032-.570313c-8.078125-7.804687-14.039062-13.648437-15.964844-15.664062-11.6875-12.160156-10.371093-32.875 2.933594-46.179688 7.523438-7.519531 15.980469-11.003906 26.667969-10.886718zm0 0\") }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={Splash} />\r\n                                <span >Splash</span>\r\n                            </div>\r\n                            <div onClick={() => { handlePathClick(\"M922.38,403.83a10.68,10.68,0,0,0-9.93-7.37l-137.29-2.79L730.07,264.35a10.67,10.67,0,0,0-20.14,0L664.84,393.67l-137.29,2.79a10.67,10.67,0,0,0-6.21,19.18l109.41,82.69L591,629.35a10.67,10.67,0,0,0,16.29,11.86L720,563l112.72,78.21A10.67,10.67,0,0,0,849,629.35l-39.76-131,109.41-82.69A10.69,10.69,0,0,0,922.38,403.83Z \") }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={StarImage} />\r\n                                <span >Star</span>\r\n                            </div>\r\n\r\n                            <div onClick={() => { handlePathClick(\"M484.14,226.886L306.46,49.202c-5.072-5.072-11.832-7.856-19.04-7.856c-7.216,0-13.972,2.788-19.044,7.856l-16.132,16.136c-5.068,5.064-7.86,11.828-7.86,19.04c0,7.208,2.792,14.2,7.86,19.264L355.9,207.526H26.58C11.732,207.526,0,219.15,0,234.002v22.812c0,14.852,11.732,27.648,26.58,27.648h330.496L252.248,388.926c-5.068,5.072-7.86,11.652-7.86,18.864c0,7.204,2.792,13.88,7.86,18.948l16.132,16.084c5.072,5.072,11.828,7.836,19.044,7.836c7.208,0,13.968-2.8,19.04-7.872l177.68-177.68c5.084-5.088,7.88-11.88,7.86-19.1C492.02,238.762,489.228,231.966,484.14,226.886z\") }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={RightArrow} />\r\n                                <span >Star</span>\r\n                            </div>\r\n\r\n                            <div onClick={() => { handlePathClick(\"M353.188,252.052c-23.51,0-46.594-3.677-68.469-10.906c-10.719-3.656-23.896-0.302-30.438,6.417l-43.177,32.594c-50.073-26.729-80.917-57.563-107.281-107.26l31.635-42.052c8.219-8.208,11.167-20.198,7.635-31.448c-7.26-21.99-10.948-45.063-10.948-68.583C132.146,13.823,118.323,0,101.333,0H30.813C13.823,0,0,13.823,0,30.813C0,225.563,158.438,384,353.188,384c16.99,0,30.813-13.823,30.813-30.813v-70.323C384,265.875,370.177,252.052,353.188,252.052z\") }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={Phone} />\r\n                                <span >Phone</span>\r\n                            </div>\r\n\r\n                            <div onClick={() => { handleImageClick(ArrowRight, 200, 200) }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={ArrowRight} />\r\n                                <span >Star</span>\r\n                            </div>\r\n\r\n                            <div onClick={() => { handleImageClick(PatternImage, 200, 200) }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={PatternImage} />\r\n                                <span >Star</span>\r\n                            </div>\r\n\r\n                            <div onClick={() => { handleImageClick(Soundwaves, 200, 200) }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={Soundwaves} />\r\n                                <span >Star</span>\r\n                            </div>\r\n\r\n                            <div onClick={() => { handleImageClick(Blur, 200, 200) }} className=\"window__images-item \">\r\n                                <img className=\"shapeImage\" src={Blur} />\r\n                                <span >Star</span>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </React.Fragment>\r\n\r\n                }\r\n\r\n                {selected == \"templates\" &&\r\n                    <React.Fragment>\r\n                        {/* <div className=\"editor__window-title\">\r\n                            <span>Templates</span>\r\n                            <img src={AddImage} alt=\"add photo\" />\r\n                        </div>\r\n                        <div className=\"window__images\">\r\n                            {Images.map((image, index) => (\r\n                                <div key={index} onClick={() => { handleImageClick(image.src, 200, 200) }} className=\"window__images-item\">\r\n                                </div>\r\n                            ))\r\n                            }\r\n                        </div> */}\r\n                        <Templates setisModalShowed={props.setisModalShowed} handleTemplateClickEditor={props.handleTemplateClickEditor} />\r\n                    </React.Fragment>\r\n\r\n                }\r\n\r\n                {selected == \"Elements\" &&\r\n                    <React.Fragment>\r\n                        <div className=\"editor__window-title-elements\">\r\n                            <span>Elements</span>\r\n                            <p>In here you can change the order of each element.</p>\r\n                        </div>\r\n\r\n                        <div className='editor__window-layers'>\r\n\r\n\r\n                            {props.elements.map((value, index) => {\r\n                                return <div className={props.selectedId == value.id ? 'editor__window-layer editor__window-layer-active':'editor__window-layer'} >\r\n                                   Element {value.id} \r\n                                   <div className='editor__window-layer--controls'>\r\n                                       <button className='editor__window-layer--controls-btnUp' onClick={()=>{props.MoveUp(props.selectedId)}}>Move up</button>\r\n                                       <button className='editor__window-layer--controls-btnDown' onClick={()=>{props.MoveDown(props.selectedId)}}>Move down</button>\r\n\r\n                                   </div>\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n\r\n                    </React.Fragment>\r\n\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Modal/Modal.js",["557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport './Modal.scss';\r\nimport Input from '../../Admin/Form/Input/Input';\r\nimport Button from '../../Admin/Form/Button/Button'\r\nimport CloseImage from '../../../assets/images/closeGrey.png'\r\nimport { Link } from 'react-router-dom';\r\nconst Modal = (props) => {\r\n    const Modal = useRef();\r\n    const SizeModal = useRef();\r\n    const json__textarea = useRef();\r\n    const importTextRef = useRef();\r\n\r\n    const [width, setWidth] = useState(0)\r\n    const [height, setHeight] = useState(0)\r\n    const [image, setImage] = useState(\"\")\r\n    const [isJsonShowed, setisJsonShowed] = useState(false)\r\n\r\n\r\n    const handleInputs = (name, event) => {\r\n        switch (name) {\r\n            case \"Width\":\r\n                setWidth(parseInt(event.target.value))\r\n                break;\r\n            case \"Height\":\r\n                setHeight(parseInt(event.target.value))\r\n                break;\r\n            case \"Image\":\r\n                setImage(event.target.value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        // console.log(props.selectedTemplatePlan);\r\n        Modal.current.classList.add(\"editor__modal-showed\")\r\n        SizeModal.current.classList.add(\"editor__modal-body-size-showed\")\r\n    }, [props.selectedTemplatePlan])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        props.type== 'import' ? \r\n        <div id=\"editorModal\" className=\"editor__modal\" ref={Modal}>\r\n        <div className=\"editor__modal-body-size\" ref={SizeModal}>\r\n            <div className='editor__modal-body-head'>\r\n                <h3>Import</h3>\r\n                <img  onClick={() => { props.setisImportShowed(false) }}  src={CloseImage} />\r\n            </div>\r\n            <p>Enter your design json here </p>\r\n            <textarea ref={importTextRef} style={{width:'100%',height:'100px'}}></textarea>\r\n\r\n            <div className=\"editor__modal-body-size--inputWrapper\">\r\n                <a className='btn-primaryModal' onClick={() => { props.loadFromJson(JSON.parse(importTextRef.current.value) )}}  > Submit </a>\r\n                <a className='btn-primaryOutlined' onClick={() => { props.setisImportShowed(false) }}  >Back </a>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n        :\r\n        \r\n        props.type == \"Size\" ?\r\n            <div id=\"editorModal\" className=\"editor__modal\" ref={Modal}>\r\n                <div className=\"editor__modal-body-size\" ref={SizeModal}>\r\n                    <div className='editor__modal-body-head'>\r\n                        <h3>Add size</h3>\r\n                        <img  onClick={() => { props.setisModalShowed(false) }}  src={CloseImage} />\r\n                    </div>\r\n                    <div className=\"editor__modal-body-size--inputWrapper\">\r\n                        <Input handleInputs={handleInputs} name=\"Height\" title=\"Width\" />\r\n                        <Input handleInputs={handleInputs} name=\"Width\" title=\"Height\" />\r\n                        <a className='btn-primaryModal' onClick={() => { props.setCustomDimentions(width, height) }}  > Submit </a>\r\n                        <a className='btn-primaryOutlined' onClick={() => { props.setisModalShowed(false) }}  >Back </a>\r\n\r\n                    </div>\r\n                </div>\r\n            </div> : props.type == \"Image\" ?\r\n                <div id=\"editorModal\" className=\"editor__modal\" ref={Modal}>\r\n                    <div className=\"editor__modal-body-size\" ref={SizeModal}>\r\n                        <h3>Add Image</h3>\r\n                        <div className=\"\">\r\n                            <Input handleInputs={handleInputs} name=\"Image\" title=\"Image Url (https):\" />\r\n                            <div className=\"editor__modal-body-size--inputWrapper\">\r\n                                <a className='btn-primaryModal' onClick={() => {\r\n                                    // Here we check if a rectangle is selected then we  add the image to the rectangle \r\n                                    if (props.selectedId !== null && props.elements[props.selectedElementArrayIndex] !== undefined) {\r\n                                        if (props.elements[props.selectedElementArrayIndex].type == \"path\" || props.elements[props.selectedElementArrayIndex].type == \"rectangle\") {\r\n                                            props.editBackgroundOfRectangle(props.selectedElementArrayIndex, image)\r\n                                        }\r\n                                    } else {\r\n                                        props.addElement({\r\n                                            type: \"image\",\r\n                                            x: 20,\r\n                                            x: 20,\r\n                                            width: 300,\r\n                                            height: 300,\r\n                                            rotation: 0,\r\n                                            src: image,\r\n                                            text: Math.floor(Math.random() * 200000),\r\n                                            isLocked: false\r\n                                        })\r\n                                    }\r\n\r\n                                }} >  Submit </a>\r\n                                <a className='btn-primaryOutlined' onClick={() => { props.setisAddImageShowed(false) }} >Back </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div> : <div id=\"editorModal\" className=\"editor__modal\" ref={Modal}>\r\n                    \r\n                    {/* Check if user is Premium or free */}\r\n                    { props.selectedTemplatePlan == 'Premium' && props.plan == 'Free' ?\r\n                        <div className=\"editor__modal-body-size\" ref={SizeModal}>\r\n                            <div className='editor__modal-body-head'>\r\n                                <h3>Become a pro</h3>\r\n                                <img src={CloseImage} onClick={()=>props.setIsExportShowed(false)} />\r\n                            </div>\r\n                            <div className=\"editor__modal-body\">\r\n                                <p>To export this design you need a pro account. become a pro member to unlock all features. </p>\r\n                            </div>\r\n                            <div className=\"editor__modal-pro\">\r\n                                <span  className='editor__modal-pro-name'>Pro Plan</span>\r\n                                <span  className='editor__modal-pro-price'> <span>${props.monthly}</span>/mo</span>\r\n                                <Link to='/upgrade'><span  className='editor__modal-pro-link'>See all features</span></Link>\r\n\r\n                            </div>\r\n                            \r\n                            <div className=\"editor__modal-body-size--inputWrapper\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        :\r\n                        <div className=\"editor__modal-body-size\" ref={SizeModal}>\r\n                            <div className='editor__modal-body-head'>\r\n                                <h3>Export</h3>\r\n                                <img src={CloseImage} onClick={()=>props.setIsExportShowed(false)} />\r\n                            </div>\r\n                            <div className=\"editor__modal-body\">\r\n                                <p>Select which format you want to export. JSON for reusing/sharing your design. or PNG image for production. </p>\r\n                            </div>\r\n                            {isJsonShowed === true &&      <div className='editor__modal__json'>\r\n                                <textarea ref={json__textarea}  />\r\n                            </div>\r\n}\r\n                        \r\n                            <div className=\"editor__modal-body-size--inputWrapper\">\r\n                                <a className='btn-primaryModal' onClick={() => { setisJsonShowed(true); setTimeout(() => {\r\n                                    json__textarea.current.value = props.exportWork() ; \r\n                                }, 500);}} > JSON </a>\r\n                                <a className='btn-primaryOutlined' onClick={() => { props.exportStage() }}  >Image </a>\r\n                            </div>\r\n                        </div>\r\n\r\n                    }\r\n\r\n{ props.selectedTemplatePlan == 'Free' &&  \r\n                        <div className=\"editor__modal-body-size\" ref={SizeModal}>\r\n                            <div className='editor__modal-body-head'>\r\n                                <h3>Export</h3>\r\n                                <img src={CloseImage} onClick={()=>props.setIsExportShowed(false)} />\r\n                            </div>\r\n                            <div className=\"editor__modal-body\">\r\n                                <p>Select which format you want to export. JSON for reusing/sharing your design. or PNG image for production. </p>\r\n                            </div>\r\n                            {isJsonShowed === true &&      <div className='editor__modal__json'>\r\n                                <textarea ref={json__textarea}  />\r\n                            </div>\r\n}\r\n                        \r\n                            <div className=\"editor__modal-body-size--inputWrapper\">\r\n                                <a className='btn-primaryModal' onClick={() => { setisJsonShowed(true); setTimeout(() => {\r\n                                    json__textarea.current.value = props.exportWork() ; \r\n                                }, 500);}} > JSON </a>\r\n                                <a className='btn-primaryOutlined' onClick={() => { props.exportStage() }}  >Image </a>\r\n                            </div>\r\n                        </div>\r\n\r\n                    }\r\n\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/ZoomController/ZoomController.js",[],"/home/meparth/kn-projekt/Frontend/src/Components/Admin/Form/Dropdown/Dropdown.js",[],"/home/meparth/kn-projekt/Frontend/src/Components/Admin/Add/Add.js",["582","583","584","585","586","587","588"],"import React, { useState, useEffect } from 'react'\r\nimport './Add.scss';\r\nimport Input from '../Form/Input/Input';\r\nimport Dropdown from '../Form/Dropdown/Dropdown';\r\nimport Button from '../Form/Button/Button';\r\nimport axios from 'axios';\r\nimport { conf } from '../../../conf/conf';\r\nconst Add = (props) => {\r\n    /// State\r\n    // Category Section\r\n    const [categoryName, setcategoryName] = useState(\"\")\r\n    // Template  Section\r\n    const handleInputs = (name, event) => {\r\n        props.handleInputs(name, event)\r\n    }\r\n    // Handle dropdown Click\r\n    const handleItemClick = (value, name) => {\r\n        props.handleItemClick(value, name)\r\n    }\r\n    // Handle cat submit\r\n    const handleCatSubmit = () => {\r\n        axios.post(conf.endPoint + \"/api/categories/add\", { data: { categoryName: props.categoryName } }, { withCredentials: true }).then((resp) => {\r\n            if (resp.data.status == true) {\r\n                alert(\"Category added!\")\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"admin__add\">\r\n            {props.type == \"template\" &&\r\n                <div className=\"admin__addTemplates\">\r\n                    <Input handleInputs={handleInputs} name=\"TemplateName\" title={\"Template Name*:\"} />\r\n                    <Input handleInputs={handleInputs} name=\"Json\" type=\"textarea\" title={\"Json*:\"} />\r\n                    <Dropdown handleItemClick={handleItemClick} value={props.selectedPlatform} name=\"Platform\" title=\"Platform*:\" items={[\"Facebook Post\", \"Instagram Post\", \"Twitter Post\", \"Youtube Thumbnail\", 'Custom']} />\r\n                    {props.selectedPlatform == 'Custom' &&\r\n                        <>\r\n                            <Input handleInputs={handleInputs} value={props.selectedWidth} name=\"Width\" title={\"Width:\"} />\r\n                            <Input handleInputs={handleInputs} value={props.selectedHeight} name=\"Height\" title={\"Height:\"} />\r\n                        </>\r\n                    }\r\n                    <p style={{ marginTop: \"10px\" }} >Image:</p>\r\n                    <input title=\"image\" onChange={(event) => { props.setFileChanged(event.target.files[0]) }} type=\"file\" name=\"image\" />\r\n                    <Button style={{ marginTop: \"20px\" }} onClick={() => { props.handleTemplateSubmit() }} type=\"default\" value=\"Add\" />\r\n                </div>\r\n            }\r\n            {props.type == \"category\" &&\r\n                <div className=\"admin__addTemplates\">\r\n                    <Input handleInputs={handleInputs} value={props.categoryName} name=\"CategoryName\" title={\"Category Name:\"} />\r\n                    <Button onClick={() => { handleCatSubmit() }} type=\"default\" value=\"Add\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Add\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Upgrade/Plans.js",["589","590","591","592"],"import React from 'react'\r\nimport ImageTemplates from '../../assets/images/img__upgrade.png'\r\n\r\nconst Plans = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n                <div className=\"upgrade_plans\">\r\n                    <div className=\"upgrade__planWrapper\">\r\n                        {/* Plan left */}\r\n                        <div className=\"upgrade_plan\">\r\n                            {/* Head */}\r\n                            <div className=\"upgrade_plan-head\" >\r\n                                <span> Basic </span>\r\n                                <p>Limited</p>\r\n                            </div>\r\n                            {/* Action */}\r\n                            <div className=\"upgrade_plan-action\" >\r\n                                <div  onClick={()=>props.handlePlanClick()} className=\"upgrade_plan-action--btn\">\r\n                                    Get Started\r\n                                </div>\r\n                            </div>\r\n                            {/* Price */}\r\n                            <div className=\"upgrade_plan-action\" >\r\n                                <div className=\"upgrade_plan-action--price\">\r\n                                    <span>Free</span>\r\n                                </div>\r\n                            </div>\r\n                            {/* Templates */}\r\n                            <div className=\"upgrade_plan-action\" >\r\n                                <div className=\"upgrade__limitedTemplates\">\r\n                                    <span>\r\n                                        LIMITED\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            {/* Features */}\r\n\r\n                            <div className=\"upgrade_plan-action\" >\r\n                                <div className=\"upgrade__features\">\r\n                                    <ul>\r\n                                        <li>Limited number of templates</li>\r\n                                        <li>Limited number of illustrations</li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"upgrade__planWrapper\">\r\n                        {/* Plan Middle */}\r\n                        <div className=\"upgrade_plan\" >\r\n                            {/* Head */}\r\n                            <div className=\"upgrade_plan-head\" >\r\n                                <span> Plus </span>\r\n                                <p>Power-up your designs</p>\r\n                            </div>\r\n                            {/* Action */}\r\n                            <div className=\"upgrade_plan-action\" >\r\n                                <div onClick={()=>props.handlePlanClick(props.step == \"Monthly\" ? props.monthly : props.anually)} className=\"upgrade_plan-action--btn\">\r\n                                    Get Started\r\n                                </div>\r\n                            </div>\r\n                            {/* Price */}\r\n                            <div className=\"upgrade_plan-action\" >\r\n                                <div className=\"upgrade_plan-action--price\">\r\n                                    <span>${props.step == \"Monthly\"? props.monthly:props.anually} </span>\r\n                                    <span className=\"upgrade_plan-action--duration\">/{props.step == \"Monthly\"? \"month\":\"year\"} </span>\r\n                                </div>\r\n                            </div>\r\n                            {/* Templates */}\r\n                            <div className=\"upgrade_plan-action\" >\r\n                                <div className=\"upgrade__limitedTemplates\">\r\n                                    <span>\r\n                                        UNLIMITED\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            {/* Features */}\r\n\r\n                            <div className=\"upgrade_plan-action\" >\r\n                                <div className=\"upgrade__features\">\r\n                                    <ul>\r\n                                        <li>Access to premium templates</li>\r\n                                        <li>Access to premium illustrations</li>\r\n                                        <li>High export quality</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                       {/* Bottom section */}\r\n\r\n                       <div className=\"upgrade__section2\">\r\n                    {/* Centered text */}\r\n                    <div className=\"upgrade__centeredText\">\r\n                        <p>Simple, Transparent pricing.</p>\r\n                    </div>\r\n                    {/* Grid of 2 */}\r\n                    <div className=\"upgrade__section2-grid2\">\r\n                        <div className=\"upgrade__section2-left\">\r\n                            <p>No need for complex desktop apps, it is all in your browser</p>\r\n                            <div className=\"small__hr\"></div>\r\n                        </div>\r\n                        <div className=\"upgrade__section2-right\">\r\n                            <p>Advanced Photo Editor with all the tools you need to create amazing designs</p>\r\n                            <a href=\"#\" className=\"upgrade__section2-button\">\r\n                                Try it now\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    {/* Centered text */}\r\n                    <div className=\"upgrade__centeredText\">\r\n                        <img src={ImageTemplates} alt=\"Tempates\" />\r\n                    </div>\r\n\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Plans\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Upgrade/PostalCode.js",["593","594","595","596","597","598","599","600","601","602","603"],"import React, { useState } from 'react'\r\nimport CheckImage from '../../assets/images/check.png'\r\nimport axios from 'axios'\r\nimport VisaImage from '../../assets/images/social/visa.png'\r\nimport MasterCard from '../../assets/images/social/master.png'\r\nimport Paypal from '../../assets/images/social/paypal.png'\r\nimport JCB from '../../assets/images/social/jcb.png'\r\nimport Amex from '../../assets/images/social/amex.png'\r\nimport Dropdowm from './Dropdown/Dropdowm'\r\n\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { CardElement, useElements, ElementsConsumer } from '@stripe/react-stripe-js';\r\nimport { conf } from '../../conf/conf'\r\nimport CardHolder from './Dropdown/CardHolder'\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\n\r\nconst PostalCode = (props) => {\r\n\r\n\r\n    const [selectedCountry, setselectedCountry] = useState(\"\")\r\n    const [fullName, setfullName] = useState(\"\")\r\n    const [address, setaddress] = useState(\"\")\r\n    const stripePromise = loadStripe(props.meta.stripeKey);\r\n\r\n    var country_list = [\"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua &amp; Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia &amp; Herzegovina\", \"Botswana\", \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Cape Verde\", \"Cayman Islands\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Congo\", \"Cook Islands\", \"Costa Rica\", \"Cote D Ivoire\", \"Croatia\", \"Cruise Ship\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Polynesia\", \"French West Indies\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\", \"Guinea Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kuwait\", \"Kyrgyz Republic\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Namibia\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Norway\", \"Oman\", \"Pakistan\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Pierre &amp; Miquelon\", \"Samoa\", \"San Marino\", \"Satellite\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"South Africa\", \"South Korea\", \"Spain\", \"Sri Lanka\", \"St Kitts &amp; Nevis\", \"St Lucia\", \"St Vincent\", \"St. Lucia\", \"Sudan\", \"Suriname\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor L'Este\", \"Togo\", \"Tonga\", \"Trinidad &amp; Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks &amp; Caicos\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"Uruguay\", \"Uzbekistan\", \"Venezuela\", \"Vietnam\", \"Virgin Islands (US)\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];\r\n    const [step, setstep] = useState(0)\r\n\r\n\r\n    const handleDropdown = (name, value) => {\r\n        switch (name) {\r\n            case \"Country\":\r\n                setselectedCountry(value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleInput = (name, value) => {\r\n        switch (name) {\r\n            case \"Full Name\":\r\n                setfullName(value)\r\n                break;\r\n            case \"Address\":\r\n                setaddress(value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const nextStep = () => {\r\n        setstep(prevState => prevState + 1)\r\n    }\r\n    const returnStep = (step) => {\r\n        setstep(step)\r\n    }\r\n    return (\r\n        <div className=\"postalcode\">\r\n            {/* Left side */}\r\n            <div className=\"postalcode__left\">\r\n                <h2> Get your premium access. </h2>\r\n                <ul>\r\n                    <li> <img src={CheckImage} alt=\"check img\" /> Payment through a trusted payment service </li>\r\n                    <li> <img src={CheckImage} alt=\"check img\" /> SSL Secure / 256-bit SSL secure checkout </li>\r\n                    <li> <img src={CheckImage} alt=\"check img\" /> 7-day money back guarantee </li>\r\n                    <li> <img src={CheckImage} alt=\"check img\" /> wide variety of payments methods </li>\r\n\r\n\r\n\r\n                </ul>\r\n                <h2> How can I cancel? </h2>\r\n                <p>You can easily cancel your subscription by simply contacting our support team via email or telephone, or by using our contact page.</p>\r\n                <h2>Accepted Payments Methods</h2>\r\n                <ul className=\"payments\">\r\n                    <li><img src={VisaImage} alt=\"payment\" /></li>\r\n                    <li><img src={MasterCard} alt=\"payment\" /></li>\r\n                    <li><img src={Paypal} alt=\"payment\" /></li>\r\n                    <li><img src={JCB} alt=\"payment\" /></li>\r\n                    <li><img src={Amex} alt=\"payment\" /></li>\r\n                </ul>\r\n            </div>\r\n            {/* Right side */}\r\n            <div className=\"postalcode__right\">\r\n                <div className=\"postalcode__right-top\">\r\n                    <span>Total due today:</span>\r\n                    <span>${props.step == \"Monthly\" ? props.monthly : props.anually}</span>\r\n                </div>\r\n\r\n                {step == 0 &&\r\n                    <div className=\"postalcode__right-body\">\r\n                        <h2>Where are you located?</h2>\r\n                        <p>Please enter your country and postal code below. We collect this information in order to fight against fraud and guarantee the security of your payment.</p>\r\n                        {/* Country */}\r\n                        <Dropdowm value={selectedCountry} name=\"Country\" handleDropdown={handleDropdown} items={country_list} />\r\n                        <div className=\"postalecode__action\">\r\n                            <a onClick={() => nextStep()} className=\"postalcode__btn\">Next</a>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {step == 1 &&\r\n                    <div className=\"postalcode__right-body\">\r\n                        <a onClick={() => nextStep()} className=\"postalcode__btn\">Pay with card</a>\r\n                        <PayPalButton\r\n                            amount={props.step == \"Monthly\" ? props.monthly : props.anually}\r\n                            style={{color:'black'}}\r\n                            options={{\r\n                                disableFunding:\"card\",\r\n                                clientId:\"AQ6HBHBxXvDYYxcGWa34DMvI9ywriPyRdQvEtO2Nx24i-Flo4RiKbG0kit9HFGe9sfTnN6DtrKgatUgj\",\r\n                            }}\r\n                            // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\r\n                            onSuccess={(details, data) => {\r\n                                //alert(\"Transaction completed by \" + details.payer.name.given_name);\r\n\r\n                                // OPTIONAL: Call your server to save the transaction\r\n                                    axios.post(conf.endPoint+\"/api/auth/subscription\",{data:{ duration:props.step,amount:props.selectedPrice,plan:\"Monthly\"}},{withCredentials:true}).then((resp)=>{\r\n                                }) \r\n\r\n                                setTimeout(() => {\r\n                                    window.location.href = \"/members/settings\"\r\n                                }, 7000);\r\n\r\n                            }}\r\n                        />\r\n                        <a onClick={() => setstep(0)} className=\"postalcode__btn-outlined\">Return</a>\r\n\r\n                    </div>\r\n                }\r\n                {step == 2 &&\r\n                    <Elements stripe={stripePromise}>\r\n                        <ElementsConsumer>\r\n                            {({ stripe, elements }) => (\r\n                                <CardHolder anually={props.anually} monthly={props.monthly} step={props.step} name={fullName} selectedPrice={props.selectedPrice} stripe={stripe} elements={elements} fullName={fullName} address={address} setstep={setstep} handleInput={handleInput} />\r\n\r\n                            )}\r\n\r\n                        </ElementsConsumer>\r\n\r\n                    </Elements>\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostalCode\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Form/Input/Input.js",[],"/home/meparth/kn-projekt/Frontend/src/Components/Form/Dropdown/Dropdown.js",[],"/home/meparth/kn-projekt/Frontend/src/Components/Editor/Controllers/TextController.js",["604"],"import React from 'react'\r\nimport FormatShapesIcon from '@material-ui/icons/FormatShapes';\r\nimport NumberPicker from '../Form/NumberPicker/NumberPicker';\r\nimport HeightIcon from '@material-ui/icons/Height';\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\nimport FlipToFrontSharpIcon  from '@material-ui/icons/FlipToFrontSharp';\r\nimport Rotate90DegreesCcwSharpIcon from '@material-ui/icons/Rotate90DegreesCcwSharp';\r\nimport FontDownloadOutlinedIcon from '@material-ui/icons/FontDownloadOutlined';\r\nimport Dropdown from '../../Editor/Form/Dropdown/Dropdown'\r\nimport {fonts} from '../Controllers/fonts'\r\nimport WebFont from 'webfontloader';\r\nimport Colorpicker from '../Form/Colorpicker/Colorpicker';\r\nimport InputController from '../Form/InputController/InputController';\r\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline';\r\nimport FormatSizeIcon from '@material-ui/icons/FormatSize';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport Align from '../Form/Align/Align';\r\nimport RightArrow from '../../../assets/images/right-arrow.png'\r\n\r\nconst TextController = (props) => {\r\n    \r\n    const handleNumberInput= (name,event,fontName)=>{\r\n        switch (name){\r\n            case \"font\":\r\n                    // Load font here\r\n                    WebFont.load({\r\n                        google: {\r\n                          families: [fontName+\":bold\" , fontName+\":medium\",fontName+\":regular\",fontName+\":thin\" ]\r\n                        }\r\n                      });\r\n                props.editImageElement(\"font\",fontName)\r\n                document.fonts.onloadingdone = function (fontFaceSetEvent) {\r\n                     props.setIsDragging(true)\r\n                     props.setIsDragging(false)\r\n\r\n                 };\r\n                  break;\r\n                  case \"fontsize\":\r\n                    props.editImageElement(\"fontsize\",parseInt(event.target.value))\r\n                    break;\r\n                    case \"fontWeight\":\r\n                        props.editImageElement(\"fontWeight\",parseInt(event.target.value))\r\n                        break;\r\n                    case \"text\":\r\n                        props.editImageElement(\"text\",event.target.value)\r\n                    break;\r\n                    case \"align\":\r\n                        props.editImageElement(\"align\",event)\r\n                    break;\r\n             case \"fontColor\":\r\n                props.editImageElement(\"fontColor\",parseInt(event.target.value))\r\n                \r\n                break;\r\n            case \"posX\":\r\n                props.editImageElement(\"posX\",parseInt(event.target.value))\r\n                \r\n                break;\r\n                case \"posY\":\r\n                    props.editImageElement(\"posY\",parseInt(event.target.value))\r\n                    \r\n                    break;\r\n                    case \"rotate\":\r\n                        props.editImageElement(\"rotate\",parseInt(event.target.value))\r\n                        break;\r\n                        case \"width\":\r\n                            props.editImageElement(\"width\",parseInt(event.target.value))\r\n                            break;\r\n                            case \"height\":\r\n                                props.editImageElement(\"height\",parseInt(event.target.value))\r\n                                break;\r\n             default:\r\n                 break   \r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <div className=\"editor__configHead\">\r\n                <span>Text Properties</span>\r\n                <img onClick={()=>props.handleMenuClick()} src={RightArrow} />\r\n\r\n            </div>\r\n\r\n\r\n                 {/* Row */}\r\n                 <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <ChatBubbleOutlineIcon className=\"editor__configRow-icon\" />\r\n                    <span>Text</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <InputController  handleNumberInput={handleNumberInput}   name=\"text\" />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n                        {/* Row */}\r\n                        <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <ViewHeadlineIcon className=\"editor__configRow-icon\" />\r\n                    <span>Alignment</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <Align name=\"align\" editImageElement={props.editImageElement} />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n                 {/* Row */}\r\n                 <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FontDownloadOutlinedIcon className=\"editor__configRow-icon\" />\r\n                    <span>Font</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <Dropdown items={fonts} name=\"font\" handleNumberInput={handleNumberInput} />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n                 {/* Row */}\r\n                 <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FormatSizeIcon className=\"editor__configRow-icon\" />\r\n                    <span>Font Size</span>\r\n                    \r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker name=\"fontsize\" handleNumberInput={handleNumberInput} />\r\n                    <Colorpicker   editImageElement={props.editImageElement} setselectedColor={props.setselectedColor} />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n                             {/* Row */}\r\n                             <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FormatSizeIcon className=\"editor__configRow-icon\" />\r\n                    <span>Font Weight</span>\r\n                    \r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker step={100} name=\"fontWeight\" handleNumberInput={handleNumberInput} />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n\r\n            {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FormatShapesIcon className=\"editor__configRow-icon\" />\r\n                    <span>Dimensions</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                  <NumberPicker name=\"height\"   handleNumberInput={handleNumberInput}   Icon ={<HeightIcon className=\"numberIcon\" />}/> \r\n                  <NumberPicker name=\"width\"   handleNumberInput={handleNumberInput} Icon ={<SyncAltIcon className=\"numberIcon\" />}/> \r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n        {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FlipToFrontSharpIcon className=\"editor__configRow-icon\" />\r\n                    <span>Move</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                  <NumberPicker   name=\"posX\"  handleNumberInput={handleNumberInput} Text=\"x\"/> \r\n                  <NumberPicker name=\"posY\"   handleNumberInput={handleNumberInput} Text=\"y\"/> \r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n                   {/* Rotate */}\r\n                   <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <Rotate90DegreesCcwSharpIcon className=\"editor__configRow-icon\" />\r\n                    <span>Rotate</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                  <NumberPicker  name=\"rotate\"   handleNumberInput={handleNumberInput}  Text=\"d\"/> \r\n          \r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TextController\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Elements/Text.js",["605","606"],"import React,{useState} from 'react'\r\n\r\nimport { Text ,Transformer} from 'react-konva';\r\n\r\nconst TextField = ({index,element,setIsDragging,editPositionOfElement,setSelectedId,selectedId,editDimensionsOfElement}) => {\r\n \r\n  const shapeRef = React.useRef();\r\n  const trRef = React.useRef();\r\n  const [isMouseOver,setIsMouseOver] = useState(false)\r\n  \r\n  React.useEffect(() => {\r\n    if (selectedId == element.id) {\r\n      // we need to attach transformer manually\r\n      trRef.current.nodes([shapeRef.current]);\r\n      trRef.current.getLayer().batchDraw();\r\n      \r\n    }\r\n  }, [selectedId,element]);\r\n  \r\n\r\n  return (\r\n    <React.Fragment >\r\n      \r\n{selectedId == element.id  && (\r\n        <Transformer\r\n           ref={trRef}\r\n           boundBoxFunc={(oldBox, newBox) => {\r\n        \r\n            return newBox;\r\n          }}\r\n        />\r\n      )}\r\n<Text\r\n        ref={shapeRef}\r\n        key={index}\r\n       draggable\r\n       x={element.x}\r\n       y={element.y}\r\n       height={element.height}\r\n       width={element.width}\r\n       rotation ={element.rotation}\r\n       fontFamily={element.fontFamily}\r\n       align={element.align}\r\n       fontSize={element.fontSize}\r\n       stroke={\"grey\"}\r\n       strokeWidth ={isMouseOver && element.id !== selectedId && 1}\r\n      type=\"text\"\r\n      fontStyle={element.fontStyle  ? element.fontStyle : 400}\r\n      fill={element.fill}\r\n\r\n       onClick={(event)=>{setSelectedId(element.id); \r\n        //   event.target.moveToTop();\r\n        //  trRef.current.moveToTop();   \r\n         }}\r\n         onTap={(event)=>{setSelectedId(element.id); \r\n          //   event.target.moveToTop();\r\n          //  trRef.current.moveToTop();   \r\n           }}\r\n\r\n       onDragStart = {()=>{\r\n         setIsDragging(true)\r\n       }}\r\n       onDragEnd ={(event)=>{\r\n         editPositionOfElement(element.id,event)\r\n\r\n         setIsDragging(false)\r\n       }}\r\n       onTransformStart={(e)=>{\r\n        setIsDragging(true)\r\n        \r\n      }}\r\n\r\n      onMouseOver={(event)=>{\r\n        setIsMouseOver(true)\r\n    }}\r\n    \r\n    onMouseLeave={(event)=>{\r\n      setIsMouseOver(false)\r\n  }}\r\n\r\n\r\n      onTransformEnd = {(e)=>{\r\n        const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n\r\n         // we will reset it back\r\n         node.scaleX(1);\r\n         node.scaleY(1);\r\n\r\n        var width = Math.max(5, node.width() * scaleX);\r\n       var  height=   Math.max(node.height() * scaleY);\r\n      editDimensionsOfElement(element.id,width,height) // node is the transformer we need to get its dimension and set it to the image\r\n      setIsDragging(false)\r\n\r\n      }}\r\n      \r\n       text={element.text} />\r\n    </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default TextField\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Elements/Image.js",["607","608","609","610","611","612"],"import React, { useState } from 'react'\r\nimport { Image, Line, Transformer } from 'react-konva';\r\nimport useImage from 'use-image';\r\n\r\nexport const ImageField = ({\r\n  element, setIsDragging, editPositionOfElement, selectedId, setSelectedId, editDimensionsOfElement, addHelperLine, stageDimensions\r\n}) => {\r\n  const [image] = useImage(element.src);\r\n  \r\n  const [isMouseOver, setIsMouseOver] = useState(false)\r\n  const shapeRef = React.useRef();\r\n  const trRef = React.useRef();\r\n\r\n  const [elemento, setElement] = useState(element)\r\n\r\n  React.useEffect(() => {\r\n    if (selectedId == element.id) {\r\n      // we need to attach transformer manually\r\n      trRef.current.nodes([shapeRef.current]);\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n    if(image !== undefined ){\r\n      image.crossOrigin=\"anonymous\"\r\n    }\r\n \r\n  }, [selectedId]);\r\n\r\n\r\n\r\n  /////////////////////////\r\n\r\n\r\n  ////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Image\r\n      \r\n        ref={shapeRef}\r\n        image={ image}\r\n        draggable\r\n        x={element.x}\r\n        y={element.y}\r\n        name={element.id}\r\n        stroke={\"grey\"}\r\n        strokeWidth={isMouseOver && element.id !== selectedId ? 1:0}\r\n        width={element.width}\r\n        rotation={element.rotation}\r\n        height={element.height}\r\n        opacity={element.opacity}\r\n\r\n        onMouseOver={(event) => {\r\n          setIsMouseOver(true)\r\n        }}\r\n\r\n        onMouseLeave={(event) => {\r\n          setIsMouseOver(false)\r\n        }}\r\n\r\n        onClick={(event) => {\r\n          setSelectedId(element.id);\r\n          if (!element.isLocked) {\r\n            //event.target.moveToTop();\r\n            trRef.current !== null && trRef.current.moveToTop();\r\n          }\r\n\r\n        }}\r\n        onTap={(event) => {\r\n          setSelectedId(element.id);\r\n          if (!element.isLocked) {\r\n          //  event.target.moveToTop();\r\n            trRef.current !== null && trRef.current.moveToTop();\r\n          }\r\n        }\r\n\r\n        }\r\n\r\n        onDragMove={(event) => {\r\n          setIsDragging(true)\r\n\r\n          event.target.moveToTop()\r\n\r\n\r\n        }\r\n        }\r\n        onDragStart={(event) => {\r\n          setIsDragging(true)\r\n        }}\r\n        onDragEnd={(event) => {\r\n          editPositionOfElement(element.id, event)\r\n          setIsDragging(false)\r\n\r\n        }}\r\n        onTransformStart={(e) => {\r\n          setIsDragging(true)\r\n\r\n        }}\r\n        onTransform={\r\n          (e) => {\r\n\r\n            editPositionOfElement(element.id, e)\r\n\r\n          }\r\n        }\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current;\r\n          const scaleX = node.scaleX();\r\n          const scaleY = node.scaleY();\r\n\r\n          // we will reset it back\r\n          node.scaleX(1);\r\n          node.scaleY(1);\r\n\r\n          var width = Math.max(5, node.width() * scaleX);\r\n          var height = Math.max(node.height() * scaleY);\r\n          editDimensionsOfElement(element.id, width, height) // node is the transformer we need to get its dimension and set it to the image\r\n          setIsDragging(false)\r\n\r\n        }}\r\n      />\r\n\r\n\r\n      {selectedId == element.id && (\r\n        <Transformer\r\n          ref={trRef}\r\n          boundBoxFunc={(oldBox, newBox) => {\r\n            return newBox;\r\n          }}\r\n        />\r\n      )}\r\n\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Controllers/ImageController.js",["613","614","615"],"import React from 'react'\r\nimport FormatShapesIcon from '@material-ui/icons/FormatShapes';\r\nimport NumberPicker from '../Form/NumberPicker/NumberPicker';\r\nimport HeightIcon from '@material-ui/icons/Height';\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\nimport FlipToFrontSharpIcon from '@material-ui/icons/FlipToFrontSharp';\r\nimport Rotate90DegreesCcwSharpIcon from '@material-ui/icons/Rotate90DegreesCcwSharp';\r\nimport BorderStyleIcon from '@material-ui/icons/BorderStyle';\r\nimport ColorPicker from '../Form/Colorpicker/Colorpicker'\r\n\r\nimport RightArrow from '../../../assets/images/right-arrow.png'\r\nconst ImageController = (props) => {\r\n\r\n\r\n\r\n    const handleNumberInput = (name, event) => {\r\n\r\n        switch (name) {\r\n            case \"posX\":\r\n                props.editImageElement(\"posX\", parseInt(event.target.value))\r\n\r\n                break;\r\n            case \"posY\":\r\n                props.editImageElement(\"posY\", parseInt(event.target.value))\r\n\r\n                break;\r\n            case \"radius\":\r\n                props.editImageElement(\"radius\", parseInt(event.target.value))\r\n\r\n                break;\r\n            case \"opacity\":\r\n                props.editImageElement(\"opacity\", parseFloat(event.target.value))\r\n                break;\r\n            case \"bgOffsetX\":\r\n                props.editImageElement(\"bgOffsetX\", parseInt(event.target.value))\r\n\r\n                break;\r\n            case \"bgOffsetY\":\r\n                props.editImageElement(\"bgOffsetY\", parseInt(event.target.value))\r\n                break;\r\n            case \"rotate\":\r\n                props.editImageElement(\"rotate\", parseInt(event.target.value))\r\n                break;\r\n            case \"width\":\r\n                props.editImageElement(\"width\", parseInt(event.target.value))\r\n                break;\r\n            case \"height\":\r\n                props.editImageElement(\"height\", parseInt(event.target.value))\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className=\"editor__configHead\">\r\n                <span>Image Properties</span>\r\n                <img onClick={()=>props.handleMenuClick()} src={RightArrow} />\r\n            </div>\r\n            {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FormatShapesIcon className=\"editor__configRow-icon\" />\r\n                    <span>Dimensions</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker name=\"height\" value={parseInt(props.elements[props.selectedElementArrayIndex].height)} handleNumberInput={handleNumberInput} Icon={<HeightIcon className=\"numberIcon\" />} />\r\n                    <NumberPicker name=\"width\" value={parseInt(props.elements[props.selectedElementArrayIndex].width)} handleNumberInput={handleNumberInput} Icon={<SyncAltIcon className=\"numberIcon\" />} />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n            {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FlipToFrontSharpIcon className=\"editor__configRow-icon\" />\r\n                    <span>Move</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker name=\"posX\" value={parseInt(props.elements[props.selectedElementArrayIndex].x)} handleNumberInput={handleNumberInput} Text=\"x\" />\r\n                    <NumberPicker name=\"posY\" value={parseInt(props.elements[props.selectedElementArrayIndex].y)} handleNumberInput={handleNumberInput} Text=\"y\" />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n\r\n            {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FlipToFrontSharpIcon className=\"editor__configRow-icon\" />\r\n                    <span>Opacity</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker value={parseFloat(props.elements[props.selectedElementArrayIndex].opacity)} min={0} step={\"0.1\"} name=\"opacity\" handleNumberInput={handleNumberInput} />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n\r\n            {/* Row */}\r\n            {/* <div className=\"editor__configRow\">\r\n                <div className=\"editor__configRow-details\">\r\n                    <FlipToFrontSharpIcon className=\"editor__configRow-icon\" />\r\n                    <span>Background Offset</span>\r\n                </div>\r\n                <div className=\"editor__control\">\r\n                  <NumberPicker    name=\"bgOffsetX\"  handleNumberInput={handleNumberInput} Text=\"x\"/> \r\n                  <NumberPicker name=\"bgOffsetY\"   handleNumberInput={handleNumberInput} Text=\"y\"/> \r\n                </div>\r\n            </div> */}\r\n\r\n            {/* Row */}\r\n            {/* <div className=\"editor__configRow\">\r\n                <div className=\"editor__configRow-details\">\r\n                    <BorderStyleIcon className=\"editor__configRow-icon\" />\r\n                    <span>Radius</span>\r\n                </div>\r\n                <div className=\"editor__control\">\r\n                  <NumberPicker   name=\"radius\"  handleNumberInput={handleNumberInput} Icon={<BorderStyleIcon className=\"numberIcon\" />}/> \r\n                  <ColorPicker name=\"fontColor\"   editImageElement={props.editImageElement} setselectedColor={props.setselectedColor} />\r\n\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* Rotate */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <Rotate90DegreesCcwSharpIcon className=\"editor__configRow-icon\" />\r\n                    <span>Rotate</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker name=\"rotate\" value={parseInt(props.elements[props.selectedElementArrayIndex].rotation)} handleNumberInput={handleNumberInput} Text=\"d\" />\r\n\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ImageController\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Elements/Circle.js",["616","617","618","619","620","621","622","623"],"import React,{useState} from 'react'\r\nimport { Circle,Transformer } from 'react-konva';\r\nimport useImage from 'use-image';\r\n\r\nexport const CircleField = ({\r\n  element,setIsDragging,editPositionOfElement,selectedId,setSelectedId,editDimensionsOfElement,addHelperLine,stageDimensions\r\n}) => {\r\n    const [isMouseOver,setIsMouseOver] = useState(false)\r\n    const shapeRef = React.useRef();\r\n    const trRef = React.useRef();\r\n    const [image, status] = useImage(element.fillPatternImage, 'Anonymous');\r\n    const [counter ,setCounter] = useState(0)\r\n\r\n\r\n    const [elemento,setElement]=useState(element)\r\n\r\n    React.useEffect(() => {\r\n        if (selectedId == element.id) {\r\n          // we need to attach transformer manually\r\n          trRef.current.nodes([shapeRef.current]);\r\n          trRef.current.getLayer().batchDraw();\r\n        }\r\n      }, [selectedId]);\r\n      \r\n      React.useEffect(()=>{\r\n        let temp = counter+2;\r\n        setCounter(temp)\r\n        \r\n        },[element.fillPatternOffsetX,element.fillPatternOffsetY]);\r\n  \r\n\r\n\r\n   /////////////////////////\r\n\r\n   \r\n   ////////////////////////\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n          \r\n        <Circle \r\n        \r\n        key={counter}\r\n        ref={shapeRef}\r\n        draggable\r\n        x={element.x}\r\n        y={element.y}\r\n        name={element.id}\r\n        stroke={element.strokeColor}\r\n        strokeWidth ={element.strokeWidth}\r\n        width={element.width}\r\n        rotation={element.rotation}\r\n        height={element.height}\r\n        fill={element.fill !==null  ? element.fill : undefined}\r\n        fillPatternImage={ image}\r\n        fillPatternRepeat=\"no-repeat\"\r\n\r\n        offsetX={-element.width/2}\r\n        fillPatternOffset={  {x:  element.fillPatternOffsetX+ (element.width/2),y:element.fillPatternOffsetY+ ( element.height/2)}}\r\n        fillPatternScale={1}\r\n        onMouseOver={(event)=>{\r\n            setIsMouseOver(true)\r\n        }}\r\n\r\n        onMouseLeave={(event)=>{\r\n          setIsMouseOver(false)\r\n      }}\r\n\r\n        onClick={()=>{setSelectedId(element.id);}}\r\n        onTap={()=>{setSelectedId(element.id);}}\r\n\r\n        onDragMove={(event)=>{\r\n          setIsDragging(true)\r\n\r\n        //  event.target.moveToTop()\r\n\r\n   \r\n        }\r\n      }\r\n        onDragStart = {(event)=>{\r\n            setIsDragging(true)\r\n          }}\r\n          onDragEnd ={(event)=>{\r\n            editPositionOfElement(element.id,event)\r\n            setIsDragging(false)\r\n\r\n          }}\r\n          onTransformStart={(e)=>{\r\n            setIsDragging(true)\r\n            \r\n          }}\r\n          onTransform={\r\n            (e)=>{\r\n       \r\n              editPositionOfElement(element.id,e)\r\n\r\n            }\r\n          }\r\n          onTransformEnd = {(e)=>{\r\n            const node = shapeRef.current;\r\n          const scaleX = node.scaleX();\r\n          const scaleY = node.scaleY();\r\n\r\n             // we will reset it back\r\n             node.scaleX(1);\r\n             node.scaleY(1);\r\n\r\n            var width = Math.max(5, node.width() * scaleX);\r\n           var  height=   Math.max(node.height() * scaleY);\r\n          editDimensionsOfElement(element.id,width,height) // node is the transformer we need to get its dimension and set it to the image\r\n          setIsDragging(false)\r\n\r\n          }}\r\n        />\r\n\r\n\r\n        {selectedId == element.id  && (\r\n        <Transformer\r\n           ref={trRef}\r\n           boundBoxFunc={(oldBox, newBox) => {\r\n            return newBox;\r\n          }}\r\n        />\r\n      )}\r\n\r\n\r\n             </React.Fragment>\r\n    )\r\n}\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Elements/Path.js",["624","625","626","627","628","629","630","631","632","633"],"import React, { useState } from 'react'\r\nimport { Group, Path, Transformer } from 'react-konva';\r\nimport useImage from 'use-image';\r\n\r\nexport const PathShape = ({\r\n  element, setIsDragging, editDimensionsOfPath, editPositionOfElement, selectedId, setSelectedId, editDimensionsOfElement, stageDimensions\r\n}) => {\r\n  const [isMouseOver, setIsMouseOver] = useState(false)\r\n  const shapeRef = React.useRef();\r\n  const trRef = React.useRef();\r\n  const [image, status] = useImage(element.fillPatternImage, 'Anonymous');\r\n  const [counter, setCounter] = useState(0)\r\n\r\n\r\n  const [elemento, setElement] = useState(element)\r\n\r\n  React.useEffect(() => {\r\n    if (selectedId == element.id && element.isLocked == false) {\r\n      // we need to attach transformer manually\r\n      trRef.current.nodes([shapeRef.current]);\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [selectedId]);\r\n\r\n  React.useEffect(() => {\r\n    let temp = counter + 2;\r\n    setCounter(temp)\r\n\r\n  }, [element.fillPatternOffsetX, element.fillPatternOffsetY,element.fillPatternRotation, element.isLocked]);\r\n\r\n\r\n\r\n  /////////////////////////\r\n\r\n  ////////////////////////\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n\r\n\r\n      <Path\r\n        ref={shapeRef}\r\n\r\n        key={counter}\r\n        draggable={element.isLocked ? false : true}\r\n\r\n        x={element.x}\r\n        y={element.y}\r\n        id={element.id}\r\n\r\n        name={element.id.toString()}\r\n        stroke={element.strokeColor}\r\n        strokeWidth={element.strokeWidth}\r\n        width={element.width}\r\n        rotation={element.rotation}\r\n        height={element.height}\r\n        scaleX={element.scaleX}\r\n        scaleY={element.scaleY}\r\n        fill={element.fill !== null ? element.fill : undefined}\r\n        fillPatternImage={image}\r\n        fillPatternRepeat=\"no-repeat\"\r\n        fillPatternScaleX={element.fillPatternScaleX}\r\n        fillPatternScaleY={element.fillPatternScaleY}\r\n        fillPatternRotation={element.fillPatternRotation}\r\n\r\n        opacity={element.opacity}\r\n\r\n\r\n        fillPatternOffset={{ x: element.fillPatternOffsetX + (element.width / 2), y: element.fillPatternOffsetY + (element.height / 2) }}\r\n        onMouseOver={(event) => {\r\n          setIsMouseOver(true)\r\n        }}\r\n\r\n        onMouseLeave={(event) => {\r\n          setIsMouseOver(false)\r\n        }}\r\n\r\n        onClick={(event) => {\r\n          setSelectedId(element.id);\r\n\r\n          if (!element.isLocked) {\r\n          //  event.target.moveToTop();\r\n           // trRef.current !== null && trRef.current.moveToTop();\r\n          }\r\n        }}\r\n        onTap={(event) => {\r\n\r\n          setSelectedId(element.id);\r\n\r\n          if (!element.isLocked) {\r\n          //  event.target.moveToTop();\r\n        //    trRef.current !== null && trRef.current.moveToTop();\r\n          }\r\n        }}\r\n\r\n        onDragMove={(event) => {\r\n          setIsDragging(true)\r\n     //     event.target.moveToTop()\r\n        }\r\n        }\r\n        onDragStart={(event) => {\r\n          setIsDragging(true)\r\n        }}\r\n        onDragEnd={(event) => {\r\n          editPositionOfElement(element.id, event)\r\n          setIsDragging(false)\r\n\r\n        }}\r\n        onTransformStart={(e) => {\r\n          setIsDragging(true)\r\n\r\n        }}\r\n        onTransform={\r\n          (e) => {\r\n\r\n            editPositionOfElement(element.id, e)\r\n\r\n          }\r\n        }\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current;\r\n          const scaleX = node.scaleX();\r\n          const scaleY = node.scaleY();\r\n\r\n          editDimensionsOfPath(element.id, scaleX, scaleY)\r\n\r\n        }}\r\n        data={element.data}\r\n      />\r\n\r\n\r\n      {selectedId == element.id && (\r\n        <Transformer\r\n          ref={trRef}\r\n          onClick={(event) => {\r\n          //  event.target.moveToTop()\r\n\r\n          }}\r\n\r\n          boundBoxFunc={(oldBox, newBox) => {\r\n            // limit resize\r\n            if (newBox.width < 5 || newBox.height < 5) {\r\n              return oldBox;\r\n            }\r\n            return newBox;\r\n          }}\r\n        />\r\n\r\n      )}\r\n\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Controllers/RectangleController.js",["634"],"import React from 'react'\r\nimport FormatShapesIcon from '@material-ui/icons/FormatShapes';\r\nimport NumberPicker from '../Form/NumberPicker/NumberPicker';\r\nimport HeightIcon from '@material-ui/icons/Height';\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\nimport FlipToFrontSharpIcon from '@material-ui/icons/FlipToFrontSharp';\r\nimport Rotate90DegreesCcwSharpIcon from '@material-ui/icons/Rotate90DegreesCcwSharp';\r\nimport BorderStyleIcon from '@material-ui/icons/BorderStyle';\r\nimport ColorPicker from '../Form/Colorpicker/Colorpicker'\r\nimport RightArrow from '../../../assets/images/right-arrow.png'\r\n\r\nconst RectangleController = (props) => {\r\n\r\n\r\n\r\n    const handleNumberInput = (name, event) => {\r\n\r\n        switch (name) {\r\n            case \"posX\":\r\n                props.editImageElement(\"posX\", parseInt(event.target.value))\r\n\r\n                break;\r\n            case \"posY\":\r\n                props.editImageElement(\"posY\", parseInt(event.target.value))\r\n\r\n                break;\r\n            case \"radius\":\r\n                props.editImageElement(\"radius\", parseInt(event.target.value))\r\n                break;\r\n            case \"opacity\":\r\n                props.editImageElement(\"opacity\", parseFloat(event.target.value))\r\n                break;\r\n            case \"bgOffsetX\":\r\n                props.editImageElement(\"bgOffsetX\", parseInt(event.target.value))\r\n                break;\r\n            case \"bgOffsetY\":\r\n                props.editImageElement(\"bgOffsetY\", parseInt(event.target.value))\r\n                break;\r\n            case \"strokeWidth\":\r\n                props.editImageElement(\"strokeWidth\", parseInt(event.target.value))\r\n                break;\r\n            case \"strokeColor\":\r\n                props.editImageElement(\"strokeColor\", parseInt(event.target.value))\r\n                break;\r\n            case \"bgScale\":\r\n                props.editImageElement(\"bgScale\", parseFloat(event.target.value))\r\n                break;\r\n            case \"bgRotation\":\r\n                    props.editImageElement(\"bgRotation\", parseInt(event.target.value))\r\n             break;\r\n            case \"rotate\":\r\n                props.editImageElement(\"rotate\", parseInt(event.target.value))\r\n                break;\r\n            case \"width\":\r\n                props.editImageElement(\"width\", parseInt(event.target.value))\r\n                break;\r\n            case \"height\":\r\n                props.editImageElement(\"height\", parseInt(event.target.value))\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className=\"editor__configHead\">\r\n                <span>Shape Properties</span>\r\n                <img onClick={()=>props.handleMenuClick()} src={RightArrow} />\r\n\r\n            </div>\r\n            {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FormatShapesIcon className=\"editor__configRow-icon\" />\r\n                    <span>Dimensions</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker name=\"height\" value={parseInt(props.elements[props.selectedElementArrayIndex].height)} handleNumberInput={handleNumberInput} Icon={<HeightIcon className=\"numberIcon\" />} />\r\n                    <NumberPicker name=\"width\" value={parseInt(props.elements[props.selectedElementArrayIndex].width)} handleNumberInput={handleNumberInput} Icon={<SyncAltIcon className=\"numberIcon\" />} />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n            {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FlipToFrontSharpIcon className=\"editor__configRow-icon\" />\r\n                    <span>Move</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker name=\"posX\" value={parseInt(props.elements[props.selectedElementArrayIndex].x)} handleNumberInput={handleNumberInput} Text=\"x\" />\r\n                    <NumberPicker name=\"posY\" value={parseInt(props.elements[props.selectedElementArrayIndex].y)} handleNumberInput={handleNumberInput} Text=\"y\" />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n            {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FlipToFrontSharpIcon className=\"editor__configRow-icon\" />\r\n                    <span>Opacity</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker value={parseFloat(props.elements[props.selectedElementArrayIndex].opacity)} min={0} step={\"0.1\"} name=\"opacity\" handleNumberInput={handleNumberInput} />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n\r\n            {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <FlipToFrontSharpIcon className=\"editor__configRow-icon\" />\r\n                    <span>Background Offset</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker value={parseInt(props.elements[props.selectedElementArrayIndex].fillPatternOffsetX)} name=\"bgOffsetX\" handleNumberInput={handleNumberInput} Text=\"x\" />\r\n                    <NumberPicker value={parseInt(props.elements[props.selectedElementArrayIndex].fillPatternOffsetY)} name=\"bgOffsetY\" handleNumberInput={handleNumberInput} Text=\"y\" />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n            {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <BorderStyleIcon className=\"editor__configRow-icon\" />\r\n                    <span>Radius</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker value={parseInt(props.elements[props.selectedElementArrayIndex].cornerRadius)} min={0} name=\"radius\" handleNumberInput={handleNumberInput} Icon={<BorderStyleIcon className=\"numberIcon\" />} />\r\n\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n\r\n            {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <BorderStyleIcon className=\"editor__configRow-icon\" />\r\n                    <span>Background</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <ColorPicker name=\"fontColor\" editImageElement={props.editImageElement} setselectedColor={props.setselectedColor} />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n            {/* Row */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <BorderStyleIcon className=\"editor__configRow-icon\" />\r\n                    <span>Stroke width</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker value={parseInt(props.elements[props.selectedElementArrayIndex].strokeWidth)} name=\"strokeWidth\" handleNumberInput={handleNumberInput} Icon={<BorderStyleIcon className=\"numberIcon\" />} />\r\n                    <ColorPicker name=\"strokeColor\" editImageElement={props.editImageElement} setselectedColor={props.setselectedColor} />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n\r\n\r\n            {/* Rotate */}\r\n            <div className=\"editor__configRow\">\r\n                {/* Row icon */}\r\n                <div className=\"editor__configRow-details\">\r\n                    <Rotate90DegreesCcwSharpIcon className=\"editor__configRow-icon\" />\r\n                    <span>Rotate</span>\r\n                </div>\r\n                {/* Row Controls */}\r\n                <div className=\"editor__control\">\r\n                    <NumberPicker value={parseInt(props.elements[props.selectedElementArrayIndex].rotation)} name=\"rotate\" handleNumberInput={handleNumberInput} Text=\"d\" />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n            {/* BgScale */}\r\n            <div className=\"editor__configRow\">\r\n              \r\n                <div className=\"editor__configRow-details\">\r\n                    <Rotate90DegreesCcwSharpIcon className=\"editor__configRow-icon\" />\r\n                    <span>Background scale</span>\r\n                </div>\r\n               \r\n                <div className=\"editor__control\">\r\n                    <NumberPicker step=\"0.1\" name=\"bgScale\" handleNumberInput={handleNumberInput} />\r\n                </div>\r\n                {/*  */}\r\n            </div>\r\n                     {/* BgScale */}\r\n                     <div className=\"editor__configRow\">\r\n              \r\n              <div className=\"editor__configRow-details\">\r\n                  <Rotate90DegreesCcwSharpIcon className=\"editor__configRow-icon\" />\r\n                  <span>Background Rotation</span>\r\n              </div>\r\n             \r\n              <div className=\"editor__control\">\r\n                  <NumberPicker value={parseInt(props.elements[props.selectedElementArrayIndex].fillPatternRotation)} step=\"1\" name=\"bgRotation\" handleNumberInput={handleNumberInput} />\r\n              </div>\r\n              {/*  */}\r\n          </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default RectangleController\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Elements/Rectangle.js",["635","636","637","638","639","640","641","642"],"import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { Rect, Transformer } from 'react-konva';\r\nimport useImage from 'use-image';\r\n\r\nexport const Rectangle = ({\r\n  element, setIsDragging, editPositionOfElement, selectedId, setSelectedId, editDimensionsOfElement, addHelperLine, stageDimensions\r\n}) => {\r\n  const [isMouseOver, setIsMouseOver] = useState(false)\r\n  const [counter, setCounter] = useState(0)\r\n\r\n  const [image, status] = useImage(element.fillPatternImage, 'Anonymous');\r\n\r\n  const shapeRef = React.useRef();\r\n  const trRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (selectedId == element.id && element.isLocked == false) {\r\n      // we need to attach transformer manually\r\n      trRef.current.nodes([shapeRef.current]);\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [selectedId,]);\r\n\r\n  React.useEffect(() => {\r\n    let temp = counter + 2;\r\n    setCounter(temp)\r\n\r\n  }, [element.fillPatternOffsetX, element.fillPatternOffsetY,element.fillPatternRotation, element.isLocked]);\r\n\r\n  /////////////////////////\r\n  ////////////////////////\r\n  return (\r\n    <React.Fragment>\r\n      <Rect\r\n        key={counter}\r\n        ref={shapeRef}\r\n        draggable={element.isLocked ? false : true}\r\n        x={element.x}\r\n        y={element.y}\r\n        name={element.id}\r\n        stroke={element.strokeColor}\r\n        strokeWidth={element.strokeWidth}\r\n        width={element.width}\r\n        rotation={element.rotation}\r\n        height={element.height}\r\n        cornerRadius={element.cornerRadius}\r\n        fill={element.fill !== null ? element.fill : undefined}\r\n        fillPatternImage={image}\r\n        fillPatternOffset={{ x: element.fillPatternOffsetX, y: element.fillPatternOffsetY }}\r\n        fillPatternRepeat=\"no-repeat\"\r\n        fillPatternScaleX={element.fillPatternScaleX}\r\n        fillPatternScaleY={element.fillPatternScaleY}\r\n        fillPatternRotation={element.fillPatternRotation}\r\n        opacity={element.opacity}\r\n\r\n\r\n        onMouseOver={(event) => {\r\n          setIsMouseOver(true)\r\n        }}\r\n\r\n        onMouseLeave={(event) => {\r\n          setIsMouseOver(false)\r\n        }}\r\n\r\n        onClick={(event) => {\r\n          setSelectedId(element.id);\r\n\r\n          if (!element.isLocked) {\r\n            // event.target.moveToTop();\r\n            // trRef.current !== null && trRef.current.moveToTop();\r\n          }\r\n\r\n        }\r\n        }\r\n        onTap={(event) => {\r\n          setSelectedId(element.id);\r\n\r\n          if (!element.isLocked) {\r\n            // event.target.moveToTop();\r\n            // trRef.current !== null && trRef.current.moveToTop();\r\n          }\r\n\r\n        }\r\n        }\r\n        onDragMove={(event) => {\r\n          // event.target.moveToTop()\r\n        }\r\n        }\r\n        onDragStart={(event) => {\r\n          setIsDragging(true)\r\n        }}\r\n        onDragEnd={(event) => {\r\n          editPositionOfElement(element.id, event)\r\n          setIsDragging(false)\r\n\r\n        }}\r\n        onTransformStart={(e) => {\r\n          setIsDragging(true);\r\n        }}\r\n        onTransform={\r\n          (e) => {\r\n\r\n            editPositionOfElement(element.id, e)\r\n\r\n          }\r\n        }\r\n        onTransformEnd={(e) => {\r\n          const node = shapeRef.current;\r\n          const scaleX = node.scaleX();\r\n          const scaleY = node.scaleY();\r\n\r\n          // we will reset it back\r\n          node.scaleX(1);\r\n          node.scaleY(1);\r\n\r\n          var width = Math.max(5, node.width() * scaleX);\r\n          var height = Math.max(node.height() * scaleY);\r\n          editDimensionsOfElement(element.id, width, height) // node is the transformer we need to get its dimension and set it to the image\r\n          setIsDragging(false)\r\n\r\n        }}\r\n      />\r\n\r\n\r\n      {selectedId == element.id && (\r\n        <Transformer\r\n          name={counter}\r\n          ref={trRef}\r\n          boundBoxFunc={(oldBox, newBox) => {\r\n            // limit resize\r\n            if (newBox.width < 5 || newBox.height < 5) {\r\n              return oldBox;\r\n            }\r\n            return newBox;\r\n          }\r\n          }\r\n        />\r\n      )}\r\n\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/SidebarComponents/Templates.js",["643","644","645","646","647","648","649","650","651","652","653"],"import React, { useState,useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport './Templates.scss';\r\nimport FacebookImage from '../../../assets/images/facebook.png'\r\nimport TwitterImage from '../../../assets/images/twitter.png'\r\nimport InstagramImage from '../../../assets/images/instagram.png'\r\nimport YoutubeImage from '../../../assets/images/youtube.png'\r\nimport BackImage from '../../../assets/images/back.png'\r\nimport { conf } from '../../../conf/conf';\r\n\r\n\r\nconst Templates = (props) => {\r\n\r\n    const [selectedCategory, setselectedCategory] = useState(\"\")\r\n    const [templatesList,setTemplatesList] = useState([])\r\n    const [isCategoriesShowed, setisCategoriesShowed] = useState(true)\r\n   const [currentPage,setCurrentPage] = useState(1);\r\n    const handleItemClick=(name)=>{\r\n   \r\n        if(name==\"Custom\"){\r\n            props.setisModalShowed(true)\r\n        }else{\r\n            setselectedCategory(name)\r\n         \r\n            TemplatesByPlatform(name)\r\n            setisCategoriesShowed(false)\r\n        }\r\n    }\r\n\r\n    //// Get template by category\r\n    const TemplatesByPlatform = (platform) =>{\r\n\r\n        axios.post(conf.endPoint+\"/api/templates/get/platform/\"+platform.replace(\" \",\"_\"),{data:{page:currentPage,limit:10}}).then((resp)=>{\r\n           setTemplatesList([... resp.data])\r\n           if(resp.data){\r\n           \r\n           }\r\n        })\r\n    }\r\n\r\n  const handleBackBtn = () => {\r\n      setisCategoriesShowed(true)\r\n  }\r\n\r\n\r\n     //// Get More templates\r\n     const MoreTemplates = (platform) =>{\r\n\r\n        axios.post(conf.endPoint+\"/api/templates/get/platform/\"+platform.replace(\" \",\"_\"),{data:{page:currentPage+1,limit:10}}).then((resp)=>{\r\n           setTemplatesList(list=>list.concat(resp.data))\r\n\r\n        })\r\n        setCurrentPage(currentpage=>currentpage+1)\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"templatesList\" className=\"sidebar__templatesList\">\r\n\r\n            {isCategoriesShowed == true ?\r\n                <div  className=\"sidebar__templatesList-cats\">\r\n                     {/* Category item */}\r\n                     <div onClick={()=>handleItemClick(\"Custom\")} className=\"sidebar__templatesList-cat\">\r\n                         <span className=\"sidebar__plusSign\">+</span>\r\n                         <span>Empty Project</span>\r\n                     </div>\r\n                        {/* Category item */}\r\n                        <div onClick={()=>{handleItemClick(\"Facebook Post\")}}  className=\"sidebar__templatesList-cat\">\r\n                            <div className=\"sidebar__templatesList-catWrap\">\r\n                                <div className=\"sidebar__templatesList-cat-image\">\r\n                                    <img src={FacebookImage} />\r\n                                </div>\r\n                                <div className=\"sidebar__templatesList-cat-name\">Facebook Post</div>\r\n                            </div>\r\n                     </div>\r\n\r\n                         {/* Category item */}\r\n                         <div onClick={()=>{handleItemClick(\"Facebook Story\")}}  className=\"sidebar__templatesList-cat\">\r\n                            <div className=\"sidebar__templatesList-catWrap\">\r\n                                <div className=\"sidebar__templatesList-cat-image\">\r\n                                    <img src={FacebookImage} />\r\n                                </div>\r\n                                <div className=\"sidebar__templatesList-cat-name\">Facebook Story</div>\r\n                            </div>\r\n                     </div>\r\n\r\n                         {/* Category item */}\r\n                         <div onClick={()=>{handleItemClick(\"Instagram Post\")}}  className=\"sidebar__templatesList-cat\">\r\n                            <div className=\"sidebar__templatesList-catWrap\">\r\n                                <div className=\"sidebar__templatesList-cat-image\">\r\n                                    <img src={InstagramImage} />\r\n                                </div>\r\n                                <div className=\"sidebar__templatesList-cat-name\">Instagram Post</div>\r\n                            </div>\r\n                     </div>\r\n\r\n                     \r\n                         {/* Category item */}\r\n                         <div onClick={()=>{handleItemClick(\"Twitter Post\")}}  className=\"sidebar__templatesList-cat\">\r\n                            <div className=\"sidebar__templatesList-catWrap\">\r\n                                <div className=\"sidebar__templatesList-cat-image\">\r\n                                    <img src={TwitterImage} />\r\n                                </div>\r\n                                <div className=\"sidebar__templatesList-cat-name\">Twitter Post</div>\r\n                            </div>\r\n                     </div>\r\n\r\n                        {/* Category item */}\r\n                        <div onClick={()=>{handleItemClick(\"Youtube Thumbnail\")}}  className=\"sidebar__templatesList-cat\">\r\n                            <div className=\"sidebar__templatesList-catWrap\">\r\n                                <div className=\"sidebar__templatesList-cat-image\">\r\n                                    <img src={YoutubeImage} />\r\n                                </div>\r\n                                <div className=\"sidebar__templatesList-cat-name\">Youtube Thumbnail</div>\r\n                            </div>\r\n                     </div>\r\n\r\n                </div>\r\n                :\r\n                <div className=\"sidebar__templatesList-items\">\r\n                    {/* Head */}\r\n                    <div className=\"sidebar__templatesList-items-head\">\r\n                        <span>Templates</span>\r\n                        <img onClick={()=>handleBackBtn()} src={BackImage} alt=\"back\" />\r\n                    </div>\r\n                    {/* List of Templates */}\r\n                    <div className=\"sidebar__templatesList-items-body\">\r\n                    {templatesList.map((value,index)=>{\r\n                         return   <div onClick={()=>props.handleTemplateClickEditor(value.name)} className=\"sidebar__templatesList-item\">\r\n                            <img src={conf.endPoint+\"/api/templates/images/md/\"+value.name.replace(/\\s/g, '')}/>\r\n                     </div>\r\n                    })}\r\n                    \r\n                    </div>\r\n                    <div onClick={()=>{MoreTemplates(selectedCategory)}} className=\"sidebar__templatesList-more\">\r\n                        <a>More Templates</a>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Templates\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Upgrade/Dropdown/Dropdowm.js",[],"/home/meparth/kn-projekt/Frontend/src/Components/Upgrade/Dropdown/CardHolder.js",["654","655","656","657"],"import React from 'react'\r\nimport { CardElement} from '@stripe/react-stripe-js';\r\nimport axios from 'axios'\r\nimport {conf} from '../../../conf/conf'\r\nconst CardHolder = (props) => {\r\n\r\n\r\n    \r\n   const handleStripeSubmit = async () => {\r\n    const { stripe, elements } = props;\r\n    if (!stripe || !elements) {\r\n        // Stripe.js has not yet loaded.\r\n        // Make sure to disable form submission until Stripe.js has loaded.\r\n        return;\r\n    }\r\n    const res = await axios.post( conf.endPoint + \"/api/api/pay\", {  price: props.step == \"Monthly\" ? props.monthly : props.anually});\r\n    const clientSecret = res.data['client_secret'];\r\n    const time = res.data[\"server_time\"]\r\n    const result = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n            card: elements.getElement(CardElement),\r\n            billing_details: {\r\n                name: props.name\r\n            },\r\n        },\r\n        // receipt_email: \"ja3tar@gmail.com\"\r\n    });\r\n    if (result.error) {\r\n        // Show error to your customer (e.g., insufficient funds)\r\n        alert(\"Error\")\r\n        console.log(result.error.message);\r\n    } else {\r\n        // The payment has been processed!\r\n        if (result.paymentIntent.status === 'succeeded') {\r\n        // console.log(\"adding subscription\");       \r\n        axios.post(conf.endPoint+\"/api/auth/subscription\",{data:{ duration:props.step,amount:props.selectedPrice,plan:\"Monthly\"}},{withCredentials:true}).then((resp)=>{\r\n        })   \r\n\r\n        setTimeout(() => {\r\n            window.location.href = \"/members/settings\"\r\n        }, 7000);\r\n\r\n           // this.setState({ step: 0 })\r\n            // Show a success message to your customer\r\n        }\r\n    }\r\n};\r\n\r\n    return (\r\n        <div className=\"postalcode__right-body\">\r\n        <input onChange={(event) => { props.handleInput(\"Full Name\", event.target.value) }} placeholder='Full Name' className=\"pstalcode__input\" value={props.fullName} />\r\n        <input onChange={(event) => { props.handleInput(\"Address\", event.target.value) }} placeholder='Address'  className=\"pstalcode__input\" value={props.address} />\r\n        <CardElement\r\n           className=\"pstalcode__input\"\r\n\r\n            options={{\r\n            \r\n                style: {\r\n                    base: {\r\n                        \r\n                        fontSize: '16px',\r\n                        color: '#424770',\r\n                        '::placeholder': {\r\n                            color: '#aab7c4',\r\n                            \r\n                        },\r\n                    },\r\n                    invalid: {\r\n                        color: '#9e2146',\r\n                    },\r\n                },\r\n            }}\r\n        />\r\n\r\n        <div className=\"postalecode__action\">\r\n            <a onClick={(event) => handleStripeSubmit(event)} className=\"postalcode__btn\">Checkout</a>\r\n            <a onClick={() => props.setstep(1)} className=\"postalcode__btn-outlined\">Return</a>\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CardHolder\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Form/Colorpicker/Colorpicker.js",["658"],"import React,{useState} from 'react'\r\nimport './Colorpicker.scss'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst Colorpicker = (props) => {\r\n\r\n    const [isPickerShowed, setisPickerShowed] = useState(false) \r\n    const [selectedColor, setselectedColor] = useState(\"black\")\r\n    const handleBtnClick = ()=>{\r\n         setisPickerShowed(!isPickerShowed)   \r\n    }\r\n   const  handleChange =(color,event)=>{\r\n    //    console.log(\"rgba(\"+color.rgb.r+\",\"+color.rgb.g+\",\"+color.rgb.b+\",\"+color.rgb.a+\")\");\r\n       setselectedColor(\"rgba(\"+color.rgb.r+\",\"+color.rgb.g+\",\"+color.rgb.b+\",\"+color.rgb.a+\")\")\r\n       props.setselectedColor(\"rgba(\"+color.rgb.r+\",\"+color.rgb.g+\",\"+color.rgb.b+\",\"+color.rgb.a+\")\")\r\n       props.name== \"strokeColor\" ? \r\n       props.editImageElement(\"strokeColor\",\"rgba(\"+color.rgb.r+\",\"+color.rgb.g+\",\"+color.rgb.b+\",\"+color.rgb.a+\")\")\r\n\r\n       :\r\n       props.editImageElement(\"fontColor\",\"rgba(\"+color.rgb.r+\",\"+color.rgb.g+\",\"+color.rgb.b+\",\"+color.rgb.a+\")\")\r\n   }\r\n    return (\r\n        <div className=\"colorPicker\">\r\n            <div onClick={()=>handleBtnClick()}  style={{backgroundColor:selectedColor}} className=\"colorPicker__selected\"> \r\n\r\n            </div>\r\n            {isPickerShowed &&  <SketchPicker         color={ selectedColor } onChange={ handleChange }  onChangeComplete={ handleChange } className=\"pickerStyles\" />}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Colorpicker\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Form/NumberPicker/NumberPicker.js",["659"],"import React from 'react'\r\nimport './NumberPicker.scss';\r\nconst NumberPicker = (props) => {\r\n  \r\n\r\n    const handleInputs =(event)=>{\r\n    //    console.log(\"input change\");\r\n        props.handleNumberInput(props.name,event)\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"number__wrapper\">\r\n            { props.Icon && props.Icon}\r\n            { props.Text && <div className=\"iconText\"> {props.Text} </div>}\r\n\r\n            <input min={props.min && props.min }  step={props.step ? props.step: 1} value={props.value}  onChange={(event)=>handleInputs(event)} type={props.type == \"noStep\" ? \"text\" : \"number\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NumberPicker\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Controllers/fonts.js",[],"/home/meparth/kn-projekt/Frontend/src/Components/Editor/Form/Align/Align.js",["660","661","662"],"import React,{useState} from 'react';\r\nimport './Align.scss';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nconst Align = (props) => {\r\n\r\n    const [selected, setselected] = useState(\"left\")\r\n\r\n    const handleItemClick=(align)=>{\r\n            setselected(align)\r\n            props.editImageElement(props.name,align)\r\n    }\r\n\r\n    return (\r\n        <div className=\"align\">\r\n            <div onClick={()=>{handleItemClick(\"left\")}} className={selected == \"left\" ? \"align__item-active\" : \"align__item\"}>\r\n                <FormatAlignLeftIcon  className=\"align__item-icon\" />\r\n            </div>\r\n            <div onClick={()=>{handleItemClick(\"center\")}} className={selected == \"center\" ? \"align__item-active\" : \"align__item\"}>\r\n                <FormatAlignCenterIcon   className=\"align__item-icon\" />\r\n            </div>\r\n            <div onClick={()=>{handleItemClick(\"right\")}} className={selected == \"right\" ? \"align__item-active\" : \"align__item\"}>\r\n                <FormatAlignRightIcon  className=\"align__item-icon\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Align\r\n","/home/meparth/kn-projekt/Frontend/src/Components/Editor/Form/InputController/InputController.js",[],"/home/meparth/kn-projekt/Frontend/src/Components/Editor/Form/Dropdown/Dropdown.js",["663","664"],"import React,{useState,useRef} from 'react'\r\nimport './Dropdown.scss'\r\nconst Dropdown = (props) => {\r\n\r\n    const inputRef = useRef();\r\n    const [isOpened, setisOpened] = useState(false)\r\n    const [searchItems,setsearchItems]=useState(props.items)\r\n    const handleOpening = ()=>{\r\n        setisOpened(!isOpened)\r\n    }\r\n\r\n\r\n      \r\n    const handleInput = (event)=>{\r\n      var length = event.target.value.length\r\n\r\n\r\n      let newArray=[]\r\n      if(length >0){\r\n      for (let index = 0; index < props.items.length; index++) {\r\n        if(props.items[index].substring(0,event.target.value.length).toLowerCase() == event.target.value.toLowerCase()){\r\n            newArray.push(props.items[index])\r\n        }\r\n          \r\n      }}\r\n\r\n      if(length >0){\r\n      setsearchItems([... newArray])\r\n      }else{\r\n        setsearchItems(props.items)\r\n      }\r\n    }\r\n    const handleItemClick = (item,event,font)=>{\r\n        inputRef.current.value = font\r\n      props.handleNumberInput(props.name,event,font)\r\n        //setisOpened(false)    \r\n    }\r\n    return (\r\n        <div className=\"editor__dropdown\">\r\n            <input ref={inputRef} onChange={(event)=>handleInput(event)} onClick={()=>handleOpening()} />\r\n            {/* Select div */}\r\n            { isOpened &&  \r\n                     <div className=\"editor__dropdown-select\">\r\n\r\n                     {  searchItems.map((item, index) => {\r\n                         return <div  onClick={(event)=>{handleItemClick(props.name,event,item)}}   className=\"editor__dropdown-selectItem\">\r\n                             <span>{item}</span>\r\n                         </div>\r\n                     })}\r\n                 </div>\r\n            }\r\n   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown\r\n",{"ruleId":"665","replacedBy":"666"},{"ruleId":"667","replacedBy":"668"},{"ruleId":"669","severity":1,"message":"670","line":25,"column":34,"nodeType":"671","messageId":"672","endLine":25,"endColumn":36},{"ruleId":"669","severity":1,"message":"670","line":68,"column":33,"nodeType":"671","messageId":"672","endLine":68,"endColumn":35},{"ruleId":"669","severity":1,"message":"670","line":77,"column":14,"nodeType":"671","messageId":"672","endLine":77,"endColumn":16},{"ruleId":"669","severity":1,"message":"670","line":85,"column":20,"nodeType":"671","messageId":"672","endLine":85,"endColumn":22},{"ruleId":"669","severity":1,"message":"670","line":35,"column":41,"nodeType":"671","messageId":"672","endLine":35,"endColumn":43},{"ruleId":"669","severity":1,"message":"670","line":49,"column":34,"nodeType":"671","messageId":"672","endLine":49,"endColumn":36},{"ruleId":"669","severity":1,"message":"670","line":71,"column":20,"nodeType":"671","messageId":"672","endLine":71,"endColumn":22},{"ruleId":"669","severity":1,"message":"670","line":87,"column":61,"nodeType":"671","messageId":"672","endLine":87,"endColumn":63},{"ruleId":"673","severity":1,"message":"674","line":31,"column":21,"nodeType":"675","endLine":31,"endColumn":79},{"ruleId":"673","severity":1,"message":"674","line":61,"column":25,"nodeType":"675","endLine":61,"endColumn":51},{"ruleId":"673","severity":1,"message":"674","line":69,"column":25,"nodeType":"675","endLine":69,"endColumn":48},{"ruleId":"676","severity":1,"message":"677","line":5,"column":8,"nodeType":"678","messageId":"679","endLine":5,"endColumn":17},{"ruleId":"676","severity":1,"message":"680","line":6,"column":8,"nodeType":"678","messageId":"679","endLine":6,"endColumn":23},{"ruleId":"676","severity":1,"message":"681","line":7,"column":8,"nodeType":"678","messageId":"679","endLine":7,"endColumn":13},{"ruleId":"676","severity":1,"message":"682","line":9,"column":8,"nodeType":"678","messageId":"679","endLine":9,"endColumn":14},{"ruleId":"676","severity":1,"message":"683","line":10,"column":8,"nodeType":"678","messageId":"679","endLine":10,"endColumn":18},{"ruleId":"676","severity":1,"message":"684","line":13,"column":8,"nodeType":"678","messageId":"679","endLine":13,"endColumn":16},{"ruleId":"676","severity":1,"message":"685","line":23,"column":12,"nodeType":"678","messageId":"679","endLine":23,"endColumn":22},{"ruleId":"669","severity":1,"message":"670","line":39,"column":41,"nodeType":"671","messageId":"672","endLine":39,"endColumn":43},{"ruleId":"676","severity":1,"message":"686","line":56,"column":11,"nodeType":"678","messageId":"679","endLine":56,"endColumn":17},{"ruleId":"669","severity":1,"message":"670","line":60,"column":34,"nodeType":"671","messageId":"672","endLine":60,"endColumn":36},{"ruleId":"669","severity":1,"message":"670","line":99,"column":57,"nodeType":"671","messageId":"672","endLine":99,"endColumn":59},{"ruleId":"669","severity":1,"message":"670","line":101,"column":44,"nodeType":"671","messageId":"672","endLine":101,"endColumn":46},{"ruleId":"669","severity":1,"message":"670","line":18,"column":32,"nodeType":"671","messageId":"672","endLine":18,"endColumn":34},{"ruleId":"676","severity":1,"message":"687","line":12,"column":8,"nodeType":"678","messageId":"679","endLine":12,"endColumn":15},{"ruleId":"669","severity":1,"message":"670","line":25,"column":30,"nodeType":"671","messageId":"672","endLine":25,"endColumn":32},{"ruleId":"673","severity":1,"message":"674","line":46,"column":25,"nodeType":"675","endLine":46,"endColumn":51},{"ruleId":"669","severity":1,"message":"670","line":15,"column":10,"nodeType":"671","messageId":"672","endLine":15,"endColumn":12},{"ruleId":"669","severity":1,"message":"670","line":16,"column":10,"nodeType":"671","messageId":"672","endLine":16,"endColumn":12},{"ruleId":"669","severity":1,"message":"670","line":17,"column":10,"nodeType":"671","messageId":"672","endLine":17,"endColumn":12},{"ruleId":"688","severity":1,"message":"689","line":16,"column":8,"nodeType":"690","endLine":16,"endColumn":21,"suggestions":"691"},{"ruleId":"673","severity":1,"message":"674","line":37,"column":25,"nodeType":"675","endLine":37,"endColumn":114},{"ruleId":"692","severity":1,"message":"693","line":14,"column":17,"nodeType":"675","endLine":14,"endColumn":54},{"ruleId":"692","severity":1,"message":"694","line":29,"column":17,"nodeType":"675","endLine":29,"endColumn":63},{"ruleId":"692","severity":1,"message":"694","line":35,"column":17,"nodeType":"675","endLine":35,"endColumn":49},{"ruleId":"692","severity":1,"message":"694","line":36,"column":17,"nodeType":"675","endLine":36,"endColumn":49},{"ruleId":"676","severity":1,"message":"695","line":6,"column":24,"nodeType":"678","messageId":"679","endLine":6,"endColumn":28},{"ruleId":"676","severity":1,"message":"696","line":31,"column":10,"nodeType":"678","messageId":"679","endLine":31,"endColumn":30},{"ruleId":"669","severity":1,"message":"670","line":57,"column":32,"nodeType":"671","messageId":"672","endLine":57,"endColumn":34},{"ruleId":"688","severity":1,"message":"697","line":113,"column":7,"nodeType":"690","endLine":113,"endColumn":9,"suggestions":"698"},{"ruleId":"669","severity":1,"message":"670","line":125,"column":24,"nodeType":"671","messageId":"672","endLine":125,"endColumn":26},{"ruleId":"669","severity":1,"message":"670","line":155,"column":28,"nodeType":"671","messageId":"672","endLine":155,"endColumn":30},{"ruleId":"669","severity":1,"message":"670","line":202,"column":22,"nodeType":"671","messageId":"672","endLine":202,"endColumn":24},{"ruleId":"669","severity":1,"message":"670","line":218,"column":22,"nodeType":"671","messageId":"672","endLine":218,"endColumn":24},{"ruleId":"669","severity":1,"message":"670","line":231,"column":22,"nodeType":"671","messageId":"672","endLine":231,"endColumn":24},{"ruleId":"669","severity":1,"message":"670","line":249,"column":22,"nodeType":"671","messageId":"672","endLine":249,"endColumn":24},{"ruleId":"669","severity":1,"message":"670","line":266,"column":22,"nodeType":"671","messageId":"672","endLine":266,"endColumn":24},{"ruleId":"669","severity":1,"message":"670","line":295,"column":17,"nodeType":"671","messageId":"672","endLine":295,"endColumn":19},{"ruleId":"669","severity":1,"message":"670","line":308,"column":17,"nodeType":"671","messageId":"672","endLine":308,"endColumn":19},{"ruleId":"669","severity":1,"message":"670","line":318,"column":17,"nodeType":"671","messageId":"672","endLine":318,"endColumn":19},{"ruleId":"676","severity":1,"message":"699","line":333,"column":9,"nodeType":"678","messageId":"679","endLine":333,"endColumn":12},{"ruleId":"700","severity":1,"message":"701","line":335,"column":5,"nodeType":"702","messageId":"703","endLine":471,"endColumn":6},{"ruleId":"669","severity":1,"message":"670","line":338,"column":21,"nodeType":"671","messageId":"672","endLine":338,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":345,"column":21,"nodeType":"671","messageId":"672","endLine":345,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":352,"column":21,"nodeType":"671","messageId":"672","endLine":352,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":359,"column":21,"nodeType":"671","messageId":"672","endLine":359,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":366,"column":21,"nodeType":"671","messageId":"672","endLine":366,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":373,"column":21,"nodeType":"671","messageId":"672","endLine":373,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":380,"column":21,"nodeType":"671","messageId":"672","endLine":380,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":387,"column":21,"nodeType":"671","messageId":"672","endLine":387,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":394,"column":21,"nodeType":"671","messageId":"672","endLine":394,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":402,"column":21,"nodeType":"671","messageId":"672","endLine":402,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":410,"column":21,"nodeType":"671","messageId":"672","endLine":410,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":417,"column":21,"nodeType":"671","messageId":"672","endLine":417,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":424,"column":21,"nodeType":"671","messageId":"672","endLine":424,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":431,"column":21,"nodeType":"671","messageId":"672","endLine":431,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":438,"column":21,"nodeType":"671","messageId":"672","endLine":438,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":445,"column":21,"nodeType":"671","messageId":"672","endLine":445,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":452,"column":21,"nodeType":"671","messageId":"672","endLine":452,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":459,"column":21,"nodeType":"671","messageId":"672","endLine":459,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":466,"column":21,"nodeType":"671","messageId":"672","endLine":466,"endColumn":23},{"ruleId":"676","severity":1,"message":"704","line":475,"column":9,"nodeType":"678","messageId":"679","endLine":475,"endColumn":24},{"ruleId":"676","severity":1,"message":"705","line":481,"column":9,"nodeType":"678","messageId":"679","endLine":481,"endColumn":29},{"ruleId":"676","severity":1,"message":"706","line":482,"column":9,"nodeType":"678","messageId":"679","endLine":482,"endColumn":18},{"ruleId":"669","severity":1,"message":"670","line":506,"column":30,"nodeType":"671","messageId":"672","endLine":506,"endColumn":32},{"ruleId":"669","severity":1,"message":"670","line":523,"column":30,"nodeType":"671","messageId":"672","endLine":523,"endColumn":32},{"ruleId":"669","severity":1,"message":"670","line":528,"column":28,"nodeType":"671","messageId":"672","endLine":528,"endColumn":30},{"ruleId":"707","severity":1,"message":"708","line":546,"column":228,"nodeType":"709","messageId":"710","endLine":546,"endColumn":265},{"ruleId":"707","severity":1,"message":"708","line":548,"column":256,"nodeType":"709","messageId":"710","endLine":548,"endColumn":293},{"ruleId":"669","severity":1,"message":"670","line":582,"column":27,"nodeType":"671","messageId":"672","endLine":582,"endColumn":29},{"ruleId":"669","severity":1,"message":"670","line":592,"column":27,"nodeType":"671","messageId":"672","endLine":592,"endColumn":29},{"ruleId":"711","severity":1,"message":"712","line":619,"column":25,"nodeType":"678","messageId":"713","endLine":619,"endColumn":39},{"ruleId":"711","severity":1,"message":"712","line":626,"column":25,"nodeType":"678","messageId":"713","endLine":626,"endColumn":39},{"ruleId":"711","severity":1,"message":"712","line":637,"column":27,"nodeType":"678","messageId":"713","endLine":637,"endColumn":41},{"ruleId":"711","severity":1,"message":"712","line":644,"column":27,"nodeType":"678","messageId":"713","endLine":644,"endColumn":41},{"ruleId":"711","severity":1,"message":"712","line":651,"column":27,"nodeType":"678","messageId":"713","endLine":651,"endColumn":41},{"ruleId":"669","severity":1,"message":"670","line":659,"column":27,"nodeType":"671","messageId":"672","endLine":659,"endColumn":29},{"ruleId":"676","severity":1,"message":"714","line":23,"column":8,"nodeType":"678","messageId":"679","endLine":23,"endColumn":14},{"ruleId":"676","severity":1,"message":"715","line":33,"column":12,"nodeType":"678","messageId":"679","endLine":33,"endColumn":22},{"ruleId":"676","severity":1,"message":"716","line":33,"column":24,"nodeType":"678","messageId":"679","endLine":33,"endColumn":37},{"ruleId":"669","severity":1,"message":"670","line":54,"column":47,"nodeType":"671","messageId":"672","endLine":54,"endColumn":49},{"ruleId":"669","severity":1,"message":"670","line":56,"column":54,"nodeType":"671","messageId":"672","endLine":56,"endColumn":56},{"ruleId":"669","severity":1,"message":"670","line":59,"column":54,"nodeType":"671","messageId":"672","endLine":59,"endColumn":56},{"ruleId":"669","severity":1,"message":"670","line":62,"column":54,"nodeType":"671","messageId":"672","endLine":62,"endColumn":56},{"ruleId":"707","severity":1,"message":"708","line":115,"column":21,"nodeType":"709","messageId":"710","endLine":115,"endColumn":44},{"ruleId":"717","severity":1,"message":"718","line":126,"column":33,"nodeType":"675","endLine":126,"endColumn":76},{"ruleId":"717","severity":1,"message":"718","line":141,"column":37,"nodeType":"675","endLine":141,"endColumn":85},{"ruleId":"673","severity":1,"message":"674","line":144,"column":37,"nodeType":"675","endLine":144,"endColumn":118},{"ruleId":"669","severity":1,"message":"670","line":144,"column":60,"nodeType":"671","messageId":"672","endLine":144,"endColumn":62},{"ruleId":"673","severity":1,"message":"674","line":144,"column":128,"nodeType":"675","endLine":144,"endColumn":154},{"ruleId":"717","severity":1,"message":"718","line":177,"column":37,"nodeType":"675","endLine":177,"endColumn":86},{"ruleId":"673","severity":1,"message":"674","line":180,"column":37,"nodeType":"675","endLine":180,"endColumn":105},{"ruleId":"669","severity":1,"message":"670","line":180,"column":60,"nodeType":"671","messageId":"672","endLine":180,"endColumn":62},{"ruleId":"673","severity":1,"message":"674","line":180,"column":115,"nodeType":"675","endLine":180,"endColumn":141},{"ruleId":"717","severity":1,"message":"718","line":192,"column":37,"nodeType":"675","endLine":192,"endColumn":84},{"ruleId":"673","severity":1,"message":"674","line":195,"column":37,"nodeType":"675","endLine":195,"endColumn":63},{"ruleId":"717","severity":1,"message":"718","line":208,"column":37,"nodeType":"675","endLine":208,"endColumn":84},{"ruleId":"673","severity":1,"message":"674","line":211,"column":37,"nodeType":"675","endLine":211,"endColumn":63},{"ruleId":"707","severity":1,"message":"708","line":228,"column":21,"nodeType":"709","messageId":"710","endLine":228,"endColumn":44},{"ruleId":"673","severity":1,"message":"674","line":236,"column":29,"nodeType":"675","endLine":236,"endColumn":118},{"ruleId":"669","severity":1,"message":"670","line":245,"column":40,"nodeType":"671","messageId":"672","endLine":245,"endColumn":42},{"ruleId":"673","severity":1,"message":"674","line":246,"column":45,"nodeType":"675","endLine":246,"endColumn":64},{"ruleId":"692","severity":1,"message":"694","line":257,"column":21,"nodeType":"675","endLine":257,"endColumn":65},{"ruleId":"669","severity":1,"message":"670","line":263,"column":43,"nodeType":"671","messageId":"672","endLine":263,"endColumn":45},{"ruleId":"707","severity":1,"message":"708","line":276,"column":29,"nodeType":"709","messageId":"710","endLine":276,"endColumn":52},{"ruleId":"673","severity":1,"message":"674","line":282,"column":41,"nodeType":"675","endLine":282,"endColumn":130},{"ruleId":"669","severity":1,"message":"670","line":290,"column":52,"nodeType":"671","messageId":"672","endLine":290,"endColumn":54},{"ruleId":"673","severity":1,"message":"674","line":291,"column":45,"nodeType":"675","endLine":291,"endColumn":64},{"ruleId":"707","severity":1,"message":"708","line":308,"column":29,"nodeType":"709","messageId":"710","endLine":308,"endColumn":52},{"ruleId":"673","severity":1,"message":"674","line":314,"column":41,"nodeType":"675","endLine":314,"endColumn":130},{"ruleId":"669","severity":1,"message":"670","line":323,"column":52,"nodeType":"671","messageId":"672","endLine":323,"endColumn":54},{"ruleId":"673","severity":1,"message":"674","line":324,"column":45,"nodeType":"675","endLine":324,"endColumn":64},{"ruleId":"707","severity":1,"message":"708","line":343,"column":29,"nodeType":"709","messageId":"710","endLine":343,"endColumn":52},{"ruleId":"673","severity":1,"message":"674","line":349,"column":41,"nodeType":"675","endLine":349,"endColumn":130},{"ruleId":"669","severity":1,"message":"670","line":357,"column":52,"nodeType":"671","messageId":"672","endLine":357,"endColumn":54},{"ruleId":"673","severity":1,"message":"674","line":358,"column":45,"nodeType":"675","endLine":358,"endColumn":64},{"ruleId":"707","severity":1,"message":"708","line":376,"column":29,"nodeType":"709","messageId":"710","endLine":376,"endColumn":52},{"ruleId":"673","severity":1,"message":"674","line":382,"column":41,"nodeType":"675","endLine":382,"endColumn":130},{"ruleId":"669","severity":1,"message":"670","line":390,"column":52,"nodeType":"671","messageId":"672","endLine":390,"endColumn":54},{"ruleId":"673","severity":1,"message":"674","line":391,"column":45,"nodeType":"675","endLine":391,"endColumn":64},{"ruleId":"676","severity":1,"message":"719","line":3,"column":8,"nodeType":"678","messageId":"679","endLine":3,"endColumn":18},{"ruleId":"676","severity":1,"message":"720","line":4,"column":8,"nodeType":"678","messageId":"679","endLine":4,"endColumn":20},{"ruleId":"692","severity":1,"message":"693","line":87,"column":33,"nodeType":"675","endLine":87,"endColumn":88},{"ruleId":"692","severity":1,"message":"693","line":108,"column":33,"nodeType":"675","endLine":108,"endColumn":102},{"ruleId":"676","severity":1,"message":"721","line":11,"column":12,"nodeType":"678","messageId":"679","endLine":11,"endColumn":21},{"ruleId":"676","severity":1,"message":"722","line":12,"column":12,"nodeType":"678","messageId":"679","endLine":12,"endColumn":21},{"ruleId":"688","severity":1,"message":"723","line":35,"column":7,"nodeType":"690","endLine":35,"endColumn":9,"suggestions":"724"},{"ruleId":"669","severity":1,"message":"670","line":56,"column":95,"nodeType":"671","messageId":"672","endLine":56,"endColumn":97},{"ruleId":"669","severity":1,"message":"670","line":59,"column":95,"nodeType":"671","messageId":"672","endLine":59,"endColumn":97},{"ruleId":"669","severity":1,"message":"670","line":71,"column":23,"nodeType":"671","messageId":"672","endLine":71,"endColumn":25},{"ruleId":"692","severity":1,"message":"694","line":71,"column":21,"nodeType":"675","endLine":73,"endColumn":48},{"ruleId":"676","severity":1,"message":"725","line":4,"column":8,"nodeType":"678","messageId":"679","endLine":4,"endColumn":22},{"ruleId":"676","severity":1,"message":"726","line":8,"column":8,"nodeType":"678","messageId":"679","endLine":8,"endColumn":21},{"ruleId":"676","severity":1,"message":"727","line":9,"column":8,"nodeType":"678","messageId":"679","endLine":9,"endColumn":17},{"ruleId":"676","severity":1,"message":"728","line":10,"column":8,"nodeType":"678","messageId":"679","endLine":10,"endColumn":17},{"ruleId":"676","severity":1,"message":"729","line":6,"column":8,"nodeType":"678","messageId":"679","endLine":6,"endColumn":16},{"ruleId":"676","severity":1,"message":"730","line":12,"column":21,"nodeType":"678","messageId":"679","endLine":12,"endColumn":31},{"ruleId":"669","severity":1,"message":"670","line":43,"column":38,"nodeType":"671","messageId":"672","endLine":43,"endColumn":40},{"ruleId":"688","severity":1,"message":"731","line":123,"column":8,"nodeType":"690","endLine":123,"endColumn":30,"suggestions":"732"},{"ruleId":"673","severity":1,"message":"674","line":134,"column":25,"nodeType":"675","endLine":134,"endColumn":50},{"ruleId":"692","severity":1,"message":"694","line":138,"column":21,"nodeType":"675","endLine":138,"endColumn":47},{"ruleId":"669","severity":1,"message":"670","line":152,"column":30,"nodeType":"671","messageId":"672","endLine":152,"endColumn":32},{"ruleId":"673","severity":1,"message":"674","line":181,"column":41,"nodeType":"675","endLine":181,"endColumn":131},{"ruleId":"669","severity":1,"message":"670","line":187,"column":96,"nodeType":"671","messageId":"672","endLine":187,"endColumn":98},{"ruleId":"669","severity":1,"message":"670","line":206,"column":47,"nodeType":"671","messageId":"672","endLine":206,"endColumn":49},{"ruleId":"692","severity":1,"message":"694","line":210,"column":29,"nodeType":"675","endLine":210,"endColumn":109},{"ruleId":"692","severity":1,"message":"694","line":211,"column":29,"nodeType":"675","endLine":211,"endColumn":32},{"ruleId":"692","severity":1,"message":"694","line":212,"column":29,"nodeType":"675","endLine":212,"endColumn":87},{"ruleId":"688","severity":1,"message":"733","line":15,"column":7,"nodeType":"690","endLine":15,"endColumn":9,"suggestions":"734"},{"ruleId":"676","severity":1,"message":"735","line":4,"column":8,"nodeType":"678","messageId":"679","endLine":4,"endColumn":18},{"ruleId":"736","severity":1,"message":"737","line":23,"column":16,"nodeType":"738","messageId":"739","endLine":24,"endColumn":46},{"ruleId":"736","severity":1,"message":"740","line":25,"column":17,"nodeType":"738","messageId":"741","endLine":26,"endColumn":27},{"ruleId":"669","severity":1,"message":"670","line":36,"column":41,"nodeType":"671","messageId":"672","endLine":36,"endColumn":43},{"ruleId":"669","severity":1,"message":"670","line":38,"column":47,"nodeType":"671","messageId":"672","endLine":38,"endColumn":49},{"ruleId":"669","severity":1,"message":"670","line":61,"column":40,"nodeType":"671","messageId":"672","endLine":61,"endColumn":42},{"ruleId":"669","severity":1,"message":"670","line":67,"column":37,"nodeType":"671","messageId":"672","endLine":67,"endColumn":39},{"ruleId":"707","severity":1,"message":"708","line":78,"column":109,"nodeType":"709","messageId":"710","endLine":78,"endColumn":124},{"ruleId":"707","severity":1,"message":"708","line":79,"column":114,"nodeType":"709","messageId":"710","endLine":79,"endColumn":127},{"ruleId":"692","severity":1,"message":"693","line":85,"column":76,"nodeType":"675","endLine":85,"endColumn":162},{"ruleId":"676","severity":1,"message":"742","line":8,"column":8,"nodeType":"678","messageId":"679","endLine":8,"endColumn":11},{"ruleId":"676","severity":1,"message":"743","line":13,"column":12,"nodeType":"678","messageId":"679","endLine":13,"endColumn":19},{"ruleId":"676","severity":1,"message":"730","line":13,"column":21,"nodeType":"678","messageId":"679","endLine":13,"endColumn":31},{"ruleId":"676","severity":1,"message":"744","line":15,"column":12,"nodeType":"678","messageId":"679","endLine":15,"endColumn":24},{"ruleId":"676","severity":1,"message":"745","line":15,"column":26,"nodeType":"678","messageId":"679","endLine":15,"endColumn":41},{"ruleId":"669","severity":1,"message":"670","line":30,"column":34,"nodeType":"671","messageId":"672","endLine":30,"endColumn":36},{"ruleId":"688","severity":1,"message":"746","line":75,"column":8,"nodeType":"690","endLine":75,"endColumn":21,"suggestions":"747"},{"ruleId":"673","severity":1,"message":"674","line":86,"column":25,"nodeType":"675","endLine":86,"endColumn":50},{"ruleId":"692","severity":1,"message":"694","line":90,"column":21,"nodeType":"675","endLine":90,"endColumn":47},{"ruleId":"669","severity":1,"message":"670","line":105,"column":30,"nodeType":"671","messageId":"672","endLine":105,"endColumn":32},{"ruleId":"673","severity":1,"message":"674","line":125,"column":41,"nodeType":"675","endLine":125,"endColumn":121},{"ruleId":"669","severity":1,"message":"670","line":139,"column":47,"nodeType":"671","messageId":"672","endLine":139,"endColumn":49},{"ruleId":"692","severity":1,"message":"694","line":143,"column":29,"nodeType":"675","endLine":143,"endColumn":109},{"ruleId":"692","severity":1,"message":"694","line":144,"column":29,"nodeType":"675","endLine":144,"endColumn":32},{"ruleId":"692","severity":1,"message":"694","line":145,"column":29,"nodeType":"675","endLine":145,"endColumn":87},{"ruleId":"676","severity":1,"message":"748","line":15,"column":12,"nodeType":"678","messageId":"679","endLine":15,"endColumn":23},{"ruleId":"676","severity":1,"message":"749","line":15,"column":25,"nodeType":"678","messageId":"679","endLine":15,"endColumn":39},{"ruleId":"676","severity":1,"message":"750","line":79,"column":11,"nodeType":"678","messageId":"679","endLine":79,"endColumn":28},{"ruleId":"673","severity":1,"message":"674","line":99,"column":25,"nodeType":"675","endLine":99,"endColumn":50},{"ruleId":"692","severity":1,"message":"694","line":103,"column":21,"nodeType":"675","endLine":103,"endColumn":47},{"ruleId":"669","severity":1,"message":"670","line":109,"column":33,"nodeType":"671","messageId":"672","endLine":109,"endColumn":35},{"ruleId":"669","severity":1,"message":"670","line":156,"column":43,"nodeType":"671","messageId":"672","endLine":156,"endColumn":45},{"ruleId":"692","severity":1,"message":"694","line":161,"column":29,"nodeType":"675","endLine":161,"endColumn":103},{"ruleId":"692","severity":1,"message":"694","line":162,"column":29,"nodeType":"675","endLine":162,"endColumn":32},{"ruleId":"692","severity":1,"message":"694","line":163,"column":29,"nodeType":"675","endLine":163,"endColumn":83},{"ruleId":"669","severity":1,"message":"670","line":168,"column":33,"nodeType":"671","messageId":"672","endLine":168,"endColumn":35},{"ruleId":"676","severity":1,"message":"735","line":3,"column":8,"nodeType":"678","messageId":"679","endLine":3,"endColumn":18},{"ruleId":"676","severity":1,"message":"751","line":13,"column":13,"nodeType":"678","messageId":"679","endLine":13,"endColumn":20},{"ruleId":"736","severity":1,"message":"740","line":22,"column":17,"nodeType":"738","messageId":"741","endLine":23,"endColumn":27},{"ruleId":"676","severity":1,"message":"752","line":27,"column":11,"nodeType":"678","messageId":"679","endLine":27,"endColumn":28},{"ruleId":"669","severity":1,"message":"670","line":39,"column":33,"nodeType":"671","messageId":"672","endLine":39,"endColumn":35},{"ruleId":"669","severity":1,"message":"670","line":59,"column":39,"nodeType":"671","messageId":"672","endLine":59,"endColumn":41},{"ruleId":"692","severity":1,"message":"693","line":79,"column":67,"nodeType":"675","endLine":79,"endColumn":156},{"ruleId":"669","severity":1,"message":"670","line":7,"column":24,"nodeType":"671","messageId":"672","endLine":7,"endColumn":26},{"ruleId":"669","severity":1,"message":"670","line":8,"column":28,"nodeType":"671","messageId":"672","endLine":8,"endColumn":30},{"ruleId":"669","severity":1,"message":"670","line":13,"column":19,"nodeType":"671","messageId":"672","endLine":13,"endColumn":21},{"ruleId":"753","severity":1,"message":"754","line":13,"column":29,"nodeType":"755","messageId":"756","endLine":13,"endColumn":31},{"ruleId":"669","severity":1,"message":"670","line":13,"column":43,"nodeType":"671","messageId":"672","endLine":13,"endColumn":45},{"ruleId":"753","severity":1,"message":"754","line":13,"column":56,"nodeType":"755","messageId":"756","endLine":13,"endColumn":58},{"ruleId":"669","severity":1,"message":"670","line":14,"column":19,"nodeType":"671","messageId":"672","endLine":14,"endColumn":21},{"ruleId":"669","severity":1,"message":"670","line":15,"column":19,"nodeType":"671","messageId":"672","endLine":15,"endColumn":21},{"ruleId":"676","severity":1,"message":"757","line":6,"column":12,"nodeType":"678","messageId":"679","endLine":6,"endColumn":23},{"ruleId":"692","severity":1,"message":"694","line":23,"column":14,"nodeType":"675","endLine":23,"endColumn":104},{"ruleId":"676","severity":1,"message":"758","line":6,"column":12,"nodeType":"678","messageId":"679","endLine":6,"endColumn":16},{"ruleId":"676","severity":1,"message":"759","line":1,"column":15,"nodeType":"678","messageId":"679","endLine":1,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":12,"column":47,"nodeType":"671","messageId":"672","endLine":12,"endColumn":49},{"ruleId":"669","severity":1,"message":"670","line":13,"column":62,"nodeType":"671","messageId":"672","endLine":13,"endColumn":64},{"ruleId":"669","severity":1,"message":"670","line":19,"column":134,"nodeType":"671","messageId":"672","endLine":19,"endColumn":136},{"ruleId":"669","severity":1,"message":"670","line":21,"column":134,"nodeType":"671","messageId":"672","endLine":21,"endColumn":136},{"ruleId":"669","severity":1,"message":"670","line":24,"column":134,"nodeType":"671","messageId":"672","endLine":24,"endColumn":136},{"ruleId":"669","severity":1,"message":"670","line":27,"column":133,"nodeType":"671","messageId":"672","endLine":27,"endColumn":135},{"ruleId":"669","severity":1,"message":"670","line":15,"column":31,"nodeType":"671","messageId":"672","endLine":15,"endColumn":33},{"ruleId":"669","severity":1,"message":"670","line":32,"column":31,"nodeType":"671","messageId":"672","endLine":32,"endColumn":33},{"ruleId":"669","severity":1,"message":"670","line":42,"column":37,"nodeType":"671","messageId":"672","endLine":42,"endColumn":39},{"ruleId":"669","severity":1,"message":"670","line":50,"column":37,"nodeType":"671","messageId":"672","endLine":50,"endColumn":39},{"ruleId":"669","severity":1,"message":"670","line":58,"column":37,"nodeType":"671","messageId":"672","endLine":58,"endColumn":39},{"ruleId":"676","severity":1,"message":"760","line":2,"column":10,"nodeType":"678","messageId":"679","endLine":2,"endColumn":16},{"ruleId":"676","severity":1,"message":"761","line":2,"column":18,"nodeType":"678","messageId":"679","endLine":2,"endColumn":33},{"ruleId":"676","severity":1,"message":"762","line":8,"column":28,"nodeType":"678","messageId":"679","endLine":8,"endColumn":37},{"ruleId":"676","severity":1,"message":"763","line":13,"column":8,"nodeType":"678","messageId":"679","endLine":13,"endColumn":22},{"ruleId":"676","severity":1,"message":"764","line":27,"column":8,"nodeType":"678","messageId":"679","endLine":27,"endColumn":14},{"ruleId":"676","severity":1,"message":"765","line":39,"column":25,"nodeType":"678","messageId":"679","endLine":39,"endColumn":39},{"ruleId":"766","severity":1,"message":"767","line":50,"column":21,"nodeType":"768","messageId":"672","endLine":50,"endColumn":22},{"ruleId":"766","severity":1,"message":"769","line":57,"column":21,"nodeType":"768","messageId":"672","endLine":57,"endColumn":25},{"ruleId":"669","severity":1,"message":"670","line":67,"column":64,"nodeType":"671","messageId":"672","endLine":67,"endColumn":66},{"ruleId":"669","severity":1,"message":"670","line":71,"column":64,"nodeType":"671","messageId":"672","endLine":71,"endColumn":66},{"ruleId":"669","severity":1,"message":"670","line":75,"column":64,"nodeType":"671","messageId":"672","endLine":75,"endColumn":66},{"ruleId":"669","severity":1,"message":"670","line":80,"column":64,"nodeType":"671","messageId":"672","endLine":80,"endColumn":66},{"ruleId":"688","severity":1,"message":"770","line":98,"column":8,"nodeType":"690","endLine":98,"endColumn":10,"suggestions":"771"},{"ruleId":"669","severity":1,"message":"670","line":106,"column":70,"nodeType":"671","messageId":"672","endLine":106,"endColumn":72},{"ruleId":"669","severity":1,"message":"670","line":106,"column":136,"nodeType":"671","messageId":"672","endLine":106,"endColumn":138},{"ruleId":"766","severity":1,"message":"767","line":115,"column":17,"nodeType":"768","messageId":"672","endLine":115,"endColumn":18},{"ruleId":"766","severity":1,"message":"767","line":130,"column":13,"nodeType":"768","messageId":"672","endLine":130,"endColumn":14},{"ruleId":"676","severity":1,"message":"772","line":148,"column":11,"nodeType":"678","messageId":"679","endLine":148,"endColumn":28},{"ruleId":"766","severity":1,"message":"767","line":152,"column":13,"nodeType":"768","messageId":"672","endLine":152,"endColumn":14},{"ruleId":"766","severity":1,"message":"767","line":171,"column":13,"nodeType":"768","messageId":"672","endLine":171,"endColumn":14},{"ruleId":"669","severity":1,"message":"670","line":197,"column":82,"nodeType":"671","messageId":"672","endLine":197,"endColumn":84},{"ruleId":"669","severity":1,"message":"670","line":202,"column":83,"nodeType":"671","messageId":"672","endLine":202,"endColumn":85},{"ruleId":"669","severity":1,"message":"670","line":207,"column":84,"nodeType":"671","messageId":"672","endLine":207,"endColumn":86},{"ruleId":"669","severity":1,"message":"670","line":212,"column":87,"nodeType":"671","messageId":"672","endLine":212,"endColumn":89},{"ruleId":"669","severity":1,"message":"670","line":217,"column":86,"nodeType":"671","messageId":"672","endLine":217,"endColumn":88},{"ruleId":"669","severity":1,"message":"670","line":225,"column":27,"nodeType":"671","messageId":"672","endLine":225,"endColumn":29},{"ruleId":"717","severity":1,"message":"718","line":230,"column":29,"nodeType":"675","endLine":230,"endColumn":115},{"ruleId":"669","severity":1,"message":"670","line":250,"column":27,"nodeType":"671","messageId":"672","endLine":250,"endColumn":29},{"ruleId":"717","severity":1,"message":"718","line":255,"column":29,"nodeType":"675","endLine":255,"endColumn":67},{"ruleId":"673","severity":1,"message":"674","line":261,"column":33,"nodeType":"675","endLine":261,"endColumn":76},{"ruleId":"673","severity":1,"message":"674","line":265,"column":33,"nodeType":"675","endLine":265,"endColumn":81},{"ruleId":"673","severity":1,"message":"674","line":270,"column":33,"nodeType":"675","endLine":270,"endColumn":81},{"ruleId":"673","severity":1,"message":"674","line":274,"column":33,"nodeType":"675","endLine":274,"endColumn":77},{"ruleId":"673","severity":1,"message":"674","line":278,"column":33,"nodeType":"675","endLine":278,"endColumn":77},{"ruleId":"673","severity":1,"message":"674","line":283,"column":33,"nodeType":"675","endLine":283,"endColumn":76},{"ruleId":"673","severity":1,"message":"674","line":287,"column":33,"nodeType":"675","endLine":287,"endColumn":79},{"ruleId":"673","severity":1,"message":"674","line":292,"column":33,"nodeType":"675","endLine":292,"endColumn":80},{"ruleId":"673","severity":1,"message":"674","line":297,"column":33,"nodeType":"675","endLine":297,"endColumn":75},{"ruleId":"673","severity":1,"message":"674","line":302,"column":33,"nodeType":"675","endLine":302,"endColumn":80},{"ruleId":"673","severity":1,"message":"674","line":307,"column":33,"nodeType":"675","endLine":307,"endColumn":82},{"ruleId":"673","severity":1,"message":"674","line":312,"column":33,"nodeType":"675","endLine":312,"endColumn":80},{"ruleId":"673","severity":1,"message":"674","line":317,"column":33,"nodeType":"675","endLine":317,"endColumn":74},{"ruleId":"669","severity":1,"message":"670","line":331,"column":27,"nodeType":"671","messageId":"672","endLine":331,"endColumn":29},{"ruleId":"669","severity":1,"message":"670","line":349,"column":27,"nodeType":"671","messageId":"672","endLine":349,"endColumn":29},{"ruleId":"669","severity":1,"message":"670","line":360,"column":73,"nodeType":"671","messageId":"672","endLine":360,"endColumn":75},{"ruleId":"676","severity":1,"message":"773","line":4,"column":8,"nodeType":"678","messageId":"679","endLine":4,"endColumn":14},{"ruleId":"669","severity":1,"message":"670","line":46,"column":19,"nodeType":"671","messageId":"672","endLine":46,"endColumn":21},{"ruleId":"673","severity":1,"message":"674","line":51,"column":17,"nodeType":"675","endLine":51,"endColumn":94},{"ruleId":"692","severity":1,"message":"694","line":57,"column":17,"nodeType":"675","endLine":57,"endColumn":131},{"ruleId":"692","severity":1,"message":"694","line":58,"column":17,"nodeType":"675","endLine":58,"endColumn":105},{"ruleId":"669","severity":1,"message":"670","line":65,"column":20,"nodeType":"671","messageId":"672","endLine":65,"endColumn":22},{"ruleId":"673","severity":1,"message":"674","line":70,"column":25,"nodeType":"675","endLine":70,"endColumn":101},{"ruleId":"692","severity":1,"message":"694","line":75,"column":25,"nodeType":"675","endLine":75,"endColumn":120},{"ruleId":"692","severity":1,"message":"694","line":76,"column":25,"nodeType":"675","endLine":76,"endColumn":112},{"ruleId":"669","severity":1,"message":"670","line":80,"column":33,"nodeType":"671","messageId":"672","endLine":80,"endColumn":35},{"ruleId":"692","severity":1,"message":"694","line":87,"column":33,"nodeType":"675","endLine":107,"endColumn":37},{"ruleId":"669","severity":1,"message":"670","line":90,"column":98,"nodeType":"671","messageId":"672","endLine":90,"endColumn":100},{"ruleId":"669","severity":1,"message":"670","line":90,"column":164,"nodeType":"671","messageId":"672","endLine":90,"endColumn":166},{"ruleId":"766","severity":1,"message":"767","line":97,"column":45,"nodeType":"768","messageId":"672","endLine":97,"endColumn":46},{"ruleId":"692","severity":1,"message":"694","line":108,"column":33,"nodeType":"675","endLine":108,"endColumn":122},{"ruleId":"669","severity":1,"message":"670","line":116,"column":50,"nodeType":"671","messageId":"672","endLine":116,"endColumn":52},{"ruleId":"669","severity":1,"message":"670","line":116,"column":77,"nodeType":"671","messageId":"672","endLine":116,"endColumn":79},{"ruleId":"673","severity":1,"message":"674","line":120,"column":33,"nodeType":"675","endLine":120,"endColumn":102},{"ruleId":"673","severity":1,"message":"674","line":140,"column":33,"nodeType":"675","endLine":140,"endColumn":102},{"ruleId":"692","severity":1,"message":"694","line":151,"column":33,"nodeType":"675","endLine":153,"endColumn":45},{"ruleId":"692","severity":1,"message":"694","line":154,"column":33,"nodeType":"675","endLine":154,"endColumn":110},{"ruleId":"669","severity":1,"message":"670","line":160,"column":30,"nodeType":"671","messageId":"672","endLine":160,"endColumn":32},{"ruleId":"673","severity":1,"message":"674","line":164,"column":33,"nodeType":"675","endLine":164,"endColumn":102},{"ruleId":"692","severity":1,"message":"694","line":175,"column":33,"nodeType":"675","endLine":177,"endColumn":45},{"ruleId":"692","severity":1,"message":"694","line":178,"column":33,"nodeType":"675","endLine":178,"endColumn":110},{"ruleId":"676","severity":1,"message":"774","line":1,"column":27,"nodeType":"678","messageId":"679","endLine":1,"endColumn":36},{"ruleId":"676","severity":1,"message":"744","line":11,"column":12,"nodeType":"678","messageId":"679","endLine":11,"endColumn":24},{"ruleId":"676","severity":1,"message":"745","line":11,"column":26,"nodeType":"678","messageId":"679","endLine":11,"endColumn":41},{"ruleId":"669","severity":1,"message":"670","line":23,"column":34,"nodeType":"671","messageId":"672","endLine":23,"endColumn":36},{"ruleId":"669","severity":1,"message":"670","line":30,"column":25,"nodeType":"671","messageId":"672","endLine":30,"endColumn":27},{"ruleId":"669","severity":1,"message":"670","line":35,"column":45,"nodeType":"671","messageId":"672","endLine":35,"endColumn":47},{"ruleId":"669","severity":1,"message":"670","line":46,"column":25,"nodeType":"671","messageId":"672","endLine":46,"endColumn":27},{"ruleId":"669","severity":1,"message":"670","line":63,"column":84,"nodeType":"671","messageId":"672","endLine":63,"endColumn":86},{"ruleId":"669","severity":1,"message":"670","line":70,"column":56,"nodeType":"671","messageId":"672","endLine":70,"endColumn":58},{"ruleId":"669","severity":1,"message":"670","line":71,"column":98,"nodeType":"671","messageId":"672","endLine":71,"endColumn":100},{"ruleId":"692","severity":1,"message":"693","line":114,"column":29,"nodeType":"675","endLine":114,"endColumn":78},{"ruleId":"676","severity":1,"message":"775","line":13,"column":10,"nodeType":"678","messageId":"679","endLine":13,"endColumn":21},{"ruleId":"676","severity":1,"message":"776","line":13,"column":23,"nodeType":"678","messageId":"679","endLine":13,"endColumn":34},{"ruleId":"676","severity":1,"message":"777","line":59,"column":11,"nodeType":"678","messageId":"679","endLine":59,"endColumn":21},{"ruleId":"669","severity":1,"message":"670","line":91,"column":40,"nodeType":"671","messageId":"672","endLine":91,"endColumn":42},{"ruleId":"669","severity":1,"message":"670","line":94,"column":23,"nodeType":"671","messageId":"672","endLine":94,"endColumn":25},{"ruleId":"692","severity":1,"message":"694","line":101,"column":29,"nodeType":"675","endLine":101,"endColumn":87},{"ruleId":"669","severity":1,"message":"670","line":106,"column":23,"nodeType":"671","messageId":"672","endLine":106,"endColumn":25},{"ruleId":"692","severity":1,"message":"694","line":108,"column":25,"nodeType":"675","endLine":108,"endColumn":83},{"ruleId":"669","severity":1,"message":"670","line":110,"column":48,"nodeType":"671","messageId":"672","endLine":110,"endColumn":50},{"ruleId":"692","severity":1,"message":"694","line":130,"column":25,"nodeType":"675","endLine":130,"endColumn":92},{"ruleId":"669","severity":1,"message":"670","line":134,"column":23,"nodeType":"671","messageId":"672","endLine":134,"endColumn":25},{"ruleId":"673","severity":1,"message":"674","line":82,"column":17,"nodeType":"675","endLine":82,"endColumn":79},{"ruleId":"669","severity":1,"message":"670","line":12,"column":20,"nodeType":"671","messageId":"672","endLine":12,"endColumn":22},{"ruleId":"669","severity":1,"message":"670","line":24,"column":13,"nodeType":"671","messageId":"672","endLine":24,"endColumn":15},{"ruleId":"676","severity":1,"message":"778","line":2,"column":17,"nodeType":"678","messageId":"679","endLine":2,"endColumn":21},{"ruleId":"676","severity":1,"message":"779","line":14,"column":10,"nodeType":"678","messageId":"679","endLine":14,"endColumn":18},{"ruleId":"676","severity":1,"message":"780","line":14,"column":20,"nodeType":"678","messageId":"679","endLine":14,"endColumn":30},{"ruleId":"669","severity":1,"message":"670","line":17,"column":20,"nodeType":"671","messageId":"672","endLine":17,"endColumn":22},{"ruleId":"688","severity":1,"message":"781","line":26,"column":6,"nodeType":"690","endLine":26,"endColumn":18,"suggestions":"782"},{"ruleId":"669","severity":1,"message":"670","line":128,"column":19,"nodeType":"671","messageId":"672","endLine":128,"endColumn":21},{"ruleId":"676","severity":1,"message":"783","line":8,"column":8,"nodeType":"678","messageId":"679","endLine":8,"endColumn":23},{"ruleId":"676","severity":1,"message":"784","line":9,"column":8,"nodeType":"678","messageId":"679","endLine":9,"endColumn":19},{"ruleId":"673","severity":1,"message":"674","line":60,"column":17,"nodeType":"675","endLine":60,"endColumn":79},{"ruleId":"676","severity":1,"message":"785","line":8,"column":12,"nodeType":"678","messageId":"679","endLine":8,"endColumn":23},{"ruleId":"676","severity":1,"message":"786","line":11,"column":19,"nodeType":"678","messageId":"679","endLine":11,"endColumn":25},{"ruleId":"676","severity":1,"message":"779","line":15,"column":12,"nodeType":"678","messageId":"679","endLine":15,"endColumn":20},{"ruleId":"676","severity":1,"message":"780","line":15,"column":21,"nodeType":"678","messageId":"679","endLine":15,"endColumn":31},{"ruleId":"669","severity":1,"message":"670","line":18,"column":24,"nodeType":"671","messageId":"672","endLine":18,"endColumn":26},{"ruleId":"688","severity":1,"message":"787","line":23,"column":10,"nodeType":"690","endLine":23,"endColumn":22,"suggestions":"788"},{"ruleId":"688","severity":1,"message":"789","line":29,"column":11,"nodeType":"690","endLine":29,"endColumn":66,"suggestions":"790"},{"ruleId":"669","severity":1,"message":"670","line":120,"column":21,"nodeType":"671","messageId":"672","endLine":120,"endColumn":23},{"ruleId":"676","severity":1,"message":"791","line":2,"column":10,"nodeType":"678","messageId":"679","endLine":2,"endColumn":15},{"ruleId":"676","severity":1,"message":"785","line":8,"column":10,"nodeType":"678","messageId":"679","endLine":8,"endColumn":21},{"ruleId":"676","severity":1,"message":"786","line":11,"column":17,"nodeType":"678","messageId":"679","endLine":11,"endColumn":23},{"ruleId":"676","severity":1,"message":"779","line":15,"column":10,"nodeType":"678","messageId":"679","endLine":15,"endColumn":18},{"ruleId":"676","severity":1,"message":"780","line":15,"column":20,"nodeType":"678","messageId":"679","endLine":15,"endColumn":30},{"ruleId":"669","severity":1,"message":"670","line":18,"column":20,"nodeType":"671","messageId":"672","endLine":18,"endColumn":22},{"ruleId":"669","severity":1,"message":"670","line":18,"column":54,"nodeType":"671","messageId":"672","endLine":18,"endColumn":56},{"ruleId":"688","severity":1,"message":"792","line":23,"column":6,"nodeType":"690","endLine":23,"endColumn":18,"suggestions":"793"},{"ruleId":"688","severity":1,"message":"789","line":29,"column":6,"nodeType":"690","endLine":29,"endColumn":108,"suggestions":"794"},{"ruleId":"669","severity":1,"message":"670","line":136,"column":19,"nodeType":"671","messageId":"672","endLine":136,"endColumn":21},{"ruleId":"673","severity":1,"message":"674","line":70,"column":17,"nodeType":"675","endLine":70,"endColumn":79},{"ruleId":"676","severity":1,"message":"774","line":2,"column":10,"nodeType":"678","messageId":"679","endLine":2,"endColumn":19},{"ruleId":"676","severity":1,"message":"785","line":9,"column":10,"nodeType":"678","messageId":"679","endLine":9,"endColumn":21},{"ruleId":"676","severity":1,"message":"786","line":12,"column":17,"nodeType":"678","messageId":"679","endLine":12,"endColumn":23},{"ruleId":"669","severity":1,"message":"670","line":18,"column":20,"nodeType":"671","messageId":"672","endLine":18,"endColumn":22},{"ruleId":"669","severity":1,"message":"670","line":18,"column":54,"nodeType":"671","messageId":"672","endLine":18,"endColumn":56},{"ruleId":"688","severity":1,"message":"792","line":23,"column":6,"nodeType":"690","endLine":23,"endColumn":19,"suggestions":"795"},{"ruleId":"688","severity":1,"message":"789","line":29,"column":6,"nodeType":"690","endLine":29,"endColumn":108,"suggestions":"796"},{"ruleId":"669","severity":1,"message":"670","line":126,"column":19,"nodeType":"671","messageId":"672","endLine":126,"endColumn":21},{"ruleId":"676","severity":1,"message":"774","line":1,"column":26,"nodeType":"678","messageId":"679","endLine":1,"endColumn":35},{"ruleId":"669","severity":1,"message":"670","line":20,"column":16,"nodeType":"671","messageId":"672","endLine":20,"endColumn":18},{"ruleId":"797","severity":1,"message":"798","line":34,"column":33,"nodeType":"799","messageId":"800","endLine":34,"endColumn":34,"fix":"801"},{"ruleId":"669","severity":1,"message":"670","line":60,"column":33,"nodeType":"671","messageId":"672","endLine":60,"endColumn":35},{"ruleId":"673","severity":1,"message":"674","line":71,"column":37,"nodeType":"675","endLine":71,"endColumn":64},{"ruleId":"673","severity":1,"message":"674","line":81,"column":37,"nodeType":"675","endLine":81,"endColumn":64},{"ruleId":"673","severity":1,"message":"674","line":91,"column":37,"nodeType":"675","endLine":91,"endColumn":65},{"ruleId":"673","severity":1,"message":"674","line":102,"column":37,"nodeType":"675","endLine":102,"endColumn":63},{"ruleId":"673","severity":1,"message":"674","line":112,"column":37,"nodeType":"675","endLine":112,"endColumn":63},{"ruleId":"673","severity":1,"message":"674","line":130,"column":29,"nodeType":"675","endLine":130,"endColumn":113},{"ruleId":"692","severity":1,"message":"694","line":136,"column":25,"nodeType":"675","endLine":136,"endColumn":28},{"ruleId":"669","severity":1,"message":"670","line":16,"column":88,"nodeType":"671","messageId":"672","endLine":16,"endColumn":90},{"ruleId":"676","severity":1,"message":"802","line":18,"column":11,"nodeType":"678","messageId":"679","endLine":18,"endColumn":15},{"ruleId":"692","severity":1,"message":"694","line":76,"column":13,"nodeType":"675","endLine":76,"endColumn":91},{"ruleId":"692","severity":1,"message":"694","line":77,"column":13,"nodeType":"675","endLine":77,"endColumn":86},{"ruleId":"669","severity":1,"message":"670","line":16,"column":18,"nodeType":"671","messageId":"672","endLine":16,"endColumn":20},{"ruleId":"669","severity":1,"message":"670","line":18,"column":163,"nodeType":"671","messageId":"672","endLine":18,"endColumn":165},{"ruleId":"669","severity":1,"message":"670","line":17,"column":78,"nodeType":"671","messageId":"672","endLine":17,"endColumn":80},{"ruleId":"669","severity":1,"message":"670","line":20,"column":80,"nodeType":"671","messageId":"672","endLine":20,"endColumn":82},{"ruleId":"669","severity":1,"message":"670","line":23,"column":79,"nodeType":"671","messageId":"672","endLine":23,"endColumn":81},{"ruleId":"669","severity":1,"message":"670","line":21,"column":84,"nodeType":"671","messageId":"672","endLine":21,"endColumn":86},{"ruleId":"797","severity":1,"message":"798","line":28,"column":26,"nodeType":"799","messageId":"800","endLine":28,"endColumn":27,"fix":"803"},"no-native-reassign",["804"],"no-negated-in-lhs",["805"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Templates' is defined but never used.","Identifier","unusedVar","'TemplatePreview' is defined but never used.","'Steps' is defined but never used.","'Editor' is defined but never used.","'Categories' is defined but never used.","'Settings' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'logout' is assigned a value but never used.","'Circles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'platform'. Either include it or remove the dependency array.","ArrayExpression",["806"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Text' is defined but never used.","'selectedLockedStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'sizes.fbPost.height', 'sizes.fbPost.width', 'sizes.inPost.height', 'sizes.inPost.width', 'sizes.twPost.height', 'sizes.twPost.width', 'sizes.youtubeThumbnail.height', and 'sizes.youtubeThumbnail.width'. Either include them or remove the dependency array.",["807"],"'pos' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'handleLockClick' is assigned a value but never used.","'handleDuplicateClick' is assigned a value but never used.","'tempArray' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-redeclare","'newXGuidelines' is already defined.","redeclared","'Footer' is defined but never used.","'categories' is assigned a value but never used.","'setCategories' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'BasicImage' is defined but never used.","'PremiumImage' is defined but never used.","'paypalKey' is assigned a value but never used.","'stripeKey' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.meta'. Either include it or remove the dependency array.",["808"],"'DashboardImage' is defined but never used.","'SettingsImage' is defined but never used.","'MenuImage' is defined but never used.","'MailImage' is defined but never used.","'Dropdown' is defined but never used.","'setSection' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchTemplates'. Either include it or remove the dependency array.",["809"],"React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["810"],"'GoogleIcon' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","'Add' is defined but never used.","'section' is assigned a value but never used.","'categoryName' is assigned a value but never used.","'setcategoryName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchImages'. Either include it or remove the dependency array.",["811"],"'currentStep' is assigned a value but never used.","'setCurrentStep' is assigned a value but never used.","'handleFilterClick' is assigned a value but never used.","'history' is assigned a value but never used.","'handleGoogleLogin' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'projectName' is assigned a value but never used.","'type' is assigned a value but never used.","'useState' is defined but never used.","'motion' is defined but never used.","'AnimatePresence' is defined but never used.","'InfoImage' is defined but never used.","'RectangleImage' is defined but never used.","'Image2' is defined but never used.","'setCurrentPage' is assigned a value but never used.","no-dupe-keys","Duplicate key 'x'.","ObjectExpression","Duplicate key 'text'.","React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["812"],"'handleCircleClick' is assigned a value but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'CardElement' is defined but never used.","'useElements' is defined but never used.","'returnStep' is assigned a value but never used.","'Line' is defined but never used.","'elemento' is assigned a value but never used.","'setElement' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'element.id' and 'image'. Either include them or remove the dependency array.",["813"],"'BorderStyleIcon' is defined but never used.","'ColorPicker' is defined but never used.","'isMouseOver' is assigned a value but never used.","'status' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'element.id'. Either include it or remove the dependency array.",["814"],"React Hook React.useEffect has a missing dependency: 'counter'. Either include it or remove the dependency array.",["815"],"'Group' is defined but never used.","React Hook React.useEffect has missing dependencies: 'element.id' and 'element.isLocked'. Either include them or remove the dependency array.",["816"],["817"],["818"],["819"],"rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"820","text":"821"},"'time' is assigned a value but never used.",{"range":"822","text":"821"},"no-global-assign","no-unsafe-negation",{"desc":"823","fix":"824"},{"desc":"825","fix":"826"},{"desc":"827","fix":"828"},{"desc":"829","fix":"830"},{"desc":"831","fix":"832"},{"desc":"833","fix":"834"},{"desc":"835","fix":"836"},{"desc":"837","fix":"838"},{"desc":"839","fix":"840"},{"desc":"841","fix":"842"},{"desc":"843","fix":"844"},{"desc":"845","fix":"846"},{"desc":"843","fix":"847"},{"desc":"845","fix":"848"},[1294,1295],"",[783,784],"Update the dependencies array to be: [currentPage, platform]",{"range":"849","text":"850"},"Update the dependencies array to be: [id, sizes.fbPost.height, sizes.fbPost.width, sizes.inPost.height, sizes.inPost.width, sizes.twPost.height, sizes.twPost.width, sizes.youtubeThumbnail.height, sizes.youtubeThumbnail.width]",{"range":"851","text":"852"},"Update the dependencies array to be: [props.meta]",{"range":"853","text":"854"},"Update the dependencies array to be: [section, currentPage, fetchTemplates]",{"range":"855","text":"856"},"Update the dependencies array to be: [name]",{"range":"857","text":"858"},"Update the dependencies array to be: [currentPage, fetchImages]",{"range":"859","text":"860"},"Update the dependencies array to be: [currentPage]",{"range":"861","text":"862"},"Update the dependencies array to be: [element.id, image, selectedId]",{"range":"863","text":"864"},"Update the dependencies array to be: [element.id, selectedId]",{"range":"865","text":"866"},"Update the dependencies array to be: [counter, element.fillPatternOffsetX, element.fillPatternOffsetY]",{"range":"867","text":"868"},"Update the dependencies array to be: [element.id, element.isLocked, selectedId]",{"range":"869","text":"870"},"Update the dependencies array to be: [counter, element.fillPatternOffsetX, element.fillPatternOffsetY, element.fillPatternRotation, element.isLocked]",{"range":"871","text":"872"},{"range":"873","text":"870"},{"range":"874","text":"872"},[633,646],"[currentPage, platform]",[8355,8357],"[id, sizes.fbPost.height, sizes.fbPost.width, sizes.inPost.height, sizes.inPost.width, sizes.twPost.height, sizes.twPost.width, sizes.youtubeThumbnail.height, sizes.youtubeThumbnail.width]",[1044,1046],"[props.meta]",[5101,5123],"[section, currentPage, fetchTemplates]",[472,474],"[name]",[2848,2861],"[currentPage, fetchImages]",[3873,3875],"[currentPage]",[831,843],"[element.id, image, selectedId]",[849,861],"[element.id, selectedId]",[979,1034],"[counter, element.fillPatternOffsetX, element.fillPatternOffsetY]",[865,877],"[element.id, element.isLocked, selectedId]",[968,1070],"[counter, element.fillPatternOffsetX, element.fillPatternOffsetY, element.fillPatternRotation, element.isLocked]",[835,848],[939,1041]]