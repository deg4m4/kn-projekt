{"ast":null,"code":"var React = require('react');\nmodule.exports = function useImage(url, crossOrigin, referrerpolicy) {\n  // lets use refs for image and status\n  // so we can update them during render\n  // to have instant update in status/image when new data comes in\n  const statusRef = React.useRef('loading');\n  const imageRef = React.useRef();\n\n  // we are not going to use token\n  // but we need to just to trigger state update\n  const [_, setStateToken] = React.useState(0);\n\n  // keep track of old props to trigger changes\n  const oldUrl = React.useRef();\n  const oldCrossOrigin = React.useRef();\n  const oldReferrerPolicy = React.useRef();\n  if (oldUrl.current !== url || oldCrossOrigin.current !== crossOrigin || oldReferrerPolicy.current !== referrerpolicy) {\n    statusRef.current = 'loading';\n    imageRef.current = undefined;\n    oldUrl.current = url;\n    oldCrossOrigin.current = crossOrigin;\n    oldReferrerPolicy.current = referrerpolicy;\n  }\n  React.useLayoutEffect(function () {\n    if (!url) return;\n    var img = document.createElement('img');\n    function onload() {\n      statusRef.current = 'loaded';\n      imageRef.current = img;\n      setStateToken(Math.random());\n    }\n    function onerror() {\n      statusRef.current = 'failed';\n      imageRef.current = undefined;\n      setStateToken(Math.random());\n    }\n    img.addEventListener('load', onload);\n    img.addEventListener('error', onerror);\n    crossOrigin && (img.crossOrigin = crossOrigin);\n    referrerpolicy && (img.referrerpolicy = referrerpolicy);\n    img.src = url;\n    return function cleanup() {\n      img.removeEventListener('load', onload);\n      img.removeEventListener('error', onerror);\n    };\n  }, [url, crossOrigin, referrerpolicy]);\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [imageRef.current, statusRef.current];\n};","map":null,"metadata":{},"sourceType":"script"}