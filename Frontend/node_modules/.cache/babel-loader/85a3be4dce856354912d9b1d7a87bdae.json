{"ast":null,"code":"var _jsxFileName = \"/home/meparth/kn-projekt/Frontend/src/Components/Editor/utils.js\";\nimport TextField from '../../Components/Editor/Elements/Text';\nimport React from 'react';\nimport { ImageField } from './Elements/Image';\nimport { Rectangle } from './Elements/Rectangle';\nimport { CircleField } from './Elements/Circle';\nimport { PathShape } from './Elements/Path';\n\n// Function responsable in looping throu elements array and returning konva elements\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const returnElements = (elements, setIsDragging, editPositionOfElement, selectedId, setSelectedId, editDimensionsOfElement, editDimensionsOfPath, stageDimensions, addHelperLine, removeHelper, addAllHelpersFromObjects, stageRef, layerRef) => {\n  var elementsToAdd = [];\n  for (let index = 0; index < elements.length; index++) {\n    if (elements[index].type == \"text\") {\n      elementsToAdd.push( /*#__PURE__*/_jsxDEV(TextField, {\n        setSelectedId: setSelectedId,\n        selectedId: selectedId,\n        element: elements[index],\n        setIsDragging: setIsDragging,\n        editPositionOfElement: editPositionOfElement,\n        editDimensionsOfElement: editDimensionsOfElement\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this));\n    }\n\n    // Image\n\n    if (elements[index].type == \"image\") {\n      elementsToAdd.push( /*#__PURE__*/_jsxDEV(ImageField, {\n        stageDimensions: stageDimensions,\n        editDimensionsOfElement: editDimensionsOfElement,\n        setSelectedId: setSelectedId,\n        selectedId: selectedId,\n        element: elements[index],\n        setIsDragging: setIsDragging,\n        editPositionOfElement: editPositionOfElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }, this));\n    }\n\n    // Image\n    if (elements[index].type == \"rectangle\") {\n      elementsToAdd.push( /*#__PURE__*/_jsxDEV(Rectangle, {\n        stageDimensions: stageDimensions,\n        editDimensionsOfElement: editDimensionsOfElement,\n        setSelectedId: setSelectedId,\n        selectedId: selectedId,\n        element: elements[index],\n        setIsDragging: setIsDragging,\n        editPositionOfElement: editPositionOfElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this));\n    }\n    if (elements[index].type == \"circle\") {\n      elementsToAdd.push( /*#__PURE__*/_jsxDEV(CircleField, {\n        stageDimensions: stageDimensions,\n        editDimensionsOfElement: editDimensionsOfElement,\n        setSelectedId: setSelectedId,\n        selectedId: selectedId,\n        element: elements[index],\n        setIsDragging: setIsDragging,\n        editPositionOfElement: editPositionOfElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this));\n    }\n    if (elements[index].type == \"path\") {\n      elementsToAdd.push( /*#__PURE__*/_jsxDEV(PathShape, {\n        editDimensionsOfPath: editDimensionsOfPath,\n        stageDimensions: stageDimensions,\n        editDimensionsOfElement: editDimensionsOfElement,\n        setSelectedId: setSelectedId,\n        selectedId: selectedId,\n        element: elements[index],\n        setIsDragging: setIsDragging,\n        editPositionOfElement: editPositionOfElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }, this));\n    }\n  }\n  return elementsToAdd;\n};","map":{"version":3,"names":["TextField","React","ImageField","Rectangle","CircleField","PathShape","jsxDEV","_jsxDEV","returnElements","elements","setIsDragging","editPositionOfElement","selectedId","setSelectedId","editDimensionsOfElement","editDimensionsOfPath","stageDimensions","addHelperLine","removeHelper","addAllHelpersFromObjects","stageRef","layerRef","elementsToAdd","index","length","type","push","element","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/meparth/kn-projekt/Frontend/src/Components/Editor/utils.js"],"sourcesContent":["import TextField from '../../Components/Editor/Elements/Text'\r\nimport React from 'react';\r\nimport { ImageField } from './Elements/Image';\r\nimport { Rectangle } from './Elements/Rectangle';\r\nimport { CircleField } from './Elements/Circle';\r\nimport { PathShape } from './Elements/Path';\r\n\r\n\r\n// Function responsable in looping throu elements array and returning konva elements\r\n\r\nexport const  returnElements = (elements,setIsDragging,editPositionOfElement,selectedId,setSelectedId,editDimensionsOfElement,editDimensionsOfPath,stageDimensions,addHelperLine,removeHelper,addAllHelpersFromObjects,stageRef,layerRef) =>{\r\n    var elementsToAdd =[]\r\n    for (let index = 0; index < elements.length; index++) {\r\n      \r\n      if(elements[index].type == \"text\"){\r\n        elementsToAdd.push(\r\n          <TextField\r\n               key={index}\r\n               setSelectedId={setSelectedId} \r\n               selectedId={selectedId}\r\n              element={elements[index]}\r\n              setIsDragging={setIsDragging}\r\n              editPositionOfElement={editPositionOfElement}\r\n              editDimensionsOfElement={editDimensionsOfElement}\r\n\r\n         />\r\n        )\r\n      }\r\n\r\n      // Image\r\n\r\n      if(elements[index].type == \"image\"){\r\n        elementsToAdd.push(\r\n           <ImageField \r\n           stageDimensions={stageDimensions}\r\n           editDimensionsOfElement={editDimensionsOfElement}\r\n           setSelectedId={setSelectedId} selectedId={selectedId} element={elements[index]} setIsDragging={setIsDragging} editPositionOfElement={editPositionOfElement} />\r\n        )\r\n      }\r\n\r\n            // Image\r\n            if(elements[index].type == \"rectangle\"){\r\n              elementsToAdd.push(\r\n                 <Rectangle \r\n                 stageDimensions={stageDimensions}\r\n                 editDimensionsOfElement={editDimensionsOfElement}\r\n                 setSelectedId={setSelectedId} selectedId={selectedId} element={elements[index]} setIsDragging={setIsDragging} editPositionOfElement={editPositionOfElement} />\r\n              )\r\n            }\r\n            if(elements[index].type == \"circle\"){\r\n              elementsToAdd.push(\r\n                 <CircleField \r\n                 stageDimensions={stageDimensions}\r\n                 editDimensionsOfElement={editDimensionsOfElement}\r\n                 setSelectedId={setSelectedId} selectedId={selectedId} element={elements[index]} setIsDragging={setIsDragging} editPositionOfElement={editPositionOfElement} />\r\n              )\r\n            }\r\n            if(elements[index].type == \"path\"){\r\n              elementsToAdd.push(\r\n                 <PathShape \r\n                 editDimensionsOfPath={editDimensionsOfPath}\r\n                 stageDimensions={stageDimensions}\r\n                 editDimensionsOfElement={editDimensionsOfElement}\r\n                 setSelectedId={setSelectedId} selectedId={selectedId} element={elements[index]} setIsDragging={setIsDragging} editPositionOfElement={editPositionOfElement} />\r\n              )\r\n            }\r\n    }\r\n    return elementsToAdd\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}